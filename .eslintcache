[{"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\index.js":"1","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\App.js":"2","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\reportWebVitals.js":"3","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\theme.js":"4","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\BrandButton.js":"5","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\App.js":"6","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\store\\index.js":"7","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\SigninFirebase.js":"8","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\SignupFirebase.js":"9","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\reducers\\index.js":"10","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\sagas\\index.js":"11","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\reducers\\AuthUserReducer.js":"12","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\actions\\types.js":"13","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\sagas\\Auth.js":"14","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\actions\\index.js":"15","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\actions\\AuthActions.js":"16","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\AdminLayout.js":"17","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\AdminHeader\\AdminHeader.js":"18","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\lib\\reactifyCss.js":"19","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\services\\routerService.js":"20","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\AuthLayout.js":"21","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\Dashboardadmin.js":"22","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\Apexchartdemo.js":"23","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\constants\\chart-config.js":"24","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\constants\\AppConfig.js":"25","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\LatestProducts.js":"26","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\TrafficByDevice.js":"27","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\button\\Custombutton.js":"28","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ForgotPassword.js":"29","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\formikcontrol\\FormikField.js":"30","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentExplore.js":"31","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentRequest.js":"32","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\TableMaterial\\TableMaterial.js":"33","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\ModelDialogue.js":"34","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\CustomizedInputs.js":"35","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\CustomizedSelect.js":"36","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\CustomizedDate.js":"37","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\firebase.utils.js":"38","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\UsersList.js":"39","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\SelectFieldCustom\\SelectFieldCustom.js":"40","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\TableMaterial\\TableMaterialuser.js":"41","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\explorecard\\ContentExplorecard.js":"42","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ListSimple\\SimpleList.js":"43","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\button\\FileUpload.js":"44","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\actions\\ProductActions.js":"45","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\sagas\\Product.js":"46","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\reducers\\ProductReducer.js":"47","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\button\\Fileuploadbutton.js":"48","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\useContentExplore.js":"49","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentExploreAdmin.js":"50","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\ConfirmModel.js":"51","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\Profile.js":"52","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\assets\\theme\\box-shadow.js":"53","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\assets\\theme\\views\\admin\\profile.js":"54","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\assets\\theme\\colors.js":"55","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\assets\\theme\\hex-to-rgb.js":"56","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\assets\\theme\\theme.js":"57","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\UserGroups.js":"58","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\TableMaterial\\TableMaterialgroup.js":"59","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\axiosinstance.js":"60","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\alertcustom\\alertcustom.js":"61","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\api\\api.js":"62","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentExploreAdminBagged.js":"63","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentExploreFavorite.js":"64","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\api\\cardactionsapi.js":"65","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\explorecard\\ContentExplorecardAdmin.js":"66","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\explorecard\\ContentExplorecardFavorite.js":"67","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\explorecard\\ContentExplorecardBagged.js":"68","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\UserEditModel.js":"69","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\api\\userapi.js":"70","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\api\\authapi.js":"71","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\sagas\\api\\api.js":"72","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\sagas\\Profile.js":"73","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\reducers\\ProfileReducer.js":"74","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\actions\\ProfileActions.js":"75","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\autocomplete\\Autocompletetags.js":"76","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\IconList\\UserlistIcon.js":"77","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\IconList\\Producticonlist.js":"78","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\Recommended.js":"79","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ConfirmPassword.js":"80","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\explorecard\\RecommendExplorecard.js":"81","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\chat\\nav\\Nav.js":"82","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\chat\\chatBody\\ChatBody.js":"83","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\chat\\userProfile\\UserProfile.js":"84","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\chat\\chatContent\\ChatContent.js":"85","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\chat\\chatList\\ChatList.js":"86","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\chat\\chatContent\\ChatItem.js":"87","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\chat\\chatList\\Avatar.js":"88","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\chat\\chatList\\ChatListItems.js":"89","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\api\\productapi.js":"90","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\reducers\\selectors\\AuthSelector.js":"91","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\reducers\\selectors\\ProfileSelector.js":"92","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\Detailcard\\Detailcard.js":"93","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\api\\message.js":"94","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\Dashboardseller.js":"95","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\Dashboardbuyer.js":"96","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentEdit.js":"97","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentExploreAdminRequests.js":"98","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\explorecard\\ContentExplorecardAdminRequests.js":"99","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\Profiledynamic.js":"100","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\admincopy\\UserFavorite.js":"101","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\admincopy\\UserRecommended.js":"102","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\admincopy\\UserBagged.js":"103","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\Loginredirector.js":"104","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\admincopy\\UserUploads.js":"105","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\explorecard\\UploadExplorecard.js":"106","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\admincopy\\container\\UploadProduct.js":"107","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\admincopy\\container\\MessageAdmin.js":"108","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\TableMaterial\\TableMaterialMessages.js":"109","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\MessageModel.js":"110","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\MessageSeller.js":"111","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\TableMaterial\\TableMaterialMessagesSeller.js":"112","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\MessageModelSeller.js":"113","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\MessageBuyer.js":"114","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\TableMaterial\\TableMaterialMessagesBuyer.js":"115","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\NotifyExpore.js":"116","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ListSimple\\NotifyList.js":"117"},{"size":871,"mtime":1612961251810,"results":"118","hashOfConfig":"119"},{"size":817,"mtime":1617906273741,"results":"120","hashOfConfig":"119"},{"size":362,"mtime":1606918416887,"results":"121","hashOfConfig":"119"},{"size":3529,"mtime":1614784392434,"results":"122","hashOfConfig":"119"},{"size":980,"mtime":1611979352852,"results":"123","hashOfConfig":"119"},{"size":1489,"mtime":1617906710006,"results":"124","hashOfConfig":"119"},{"size":1007,"mtime":1617015283359,"results":"125","hashOfConfig":"119"},{"size":8648,"mtime":1618919172812,"results":"126","hashOfConfig":"119"},{"size":13111,"mtime":1618202699228,"results":"127","hashOfConfig":"119"},{"size":396,"mtime":1616165043602,"results":"128","hashOfConfig":"119"},{"size":349,"mtime":1616164778810,"results":"129","hashOfConfig":"119"},{"size":2629,"mtime":1619077115978,"results":"130","hashOfConfig":"119"},{"size":21737,"mtime":1618252653172,"results":"131","hashOfConfig":"119"},{"size":5496,"mtime":1619190983579,"results":"132","hashOfConfig":"119"},{"size":100,"mtime":1616165311073,"results":"133","hashOfConfig":"119"},{"size":1100,"mtime":1616514024167,"results":"134","hashOfConfig":"119"},{"size":5461,"mtime":1619349757386,"results":"135","hashOfConfig":"119"},{"size":23986,"mtime":1619446395019,"results":"136","hashOfConfig":"119"},{"size":1172,"mtime":1613073685965,"results":"137","hashOfConfig":"119"},{"size":6230,"mtime":1619447911645,"results":"138","hashOfConfig":"119"},{"size":1701,"mtime":1619077189625,"results":"139","hashOfConfig":"119"},{"size":9360,"mtime":1619467259761,"results":"140","hashOfConfig":"119"},{"size":3452,"mtime":1619202506008,"results":"141","hashOfConfig":"119"},{"size":1008,"mtime":1552046922000,"results":"142","hashOfConfig":"119"},{"size":2122,"mtime":1613148485463,"results":"143","hashOfConfig":"119"},{"size":2906,"mtime":1613156400573,"results":"144","hashOfConfig":"119"},{"size":3892,"mtime":1618923940522,"results":"145","hashOfConfig":"119"},{"size":1186,"mtime":1613225883307,"results":"146","hashOfConfig":"119"},{"size":4285,"mtime":1618569801754,"results":"147","hashOfConfig":"119"},{"size":1007,"mtime":1619252046504,"results":"148","hashOfConfig":"119"},{"size":5249,"mtime":1618499926035,"results":"149","hashOfConfig":"119"},{"size":25146,"mtime":1618498567474,"results":"150","hashOfConfig":"119"},{"size":13386,"mtime":1614189028337,"results":"151","hashOfConfig":"119"},{"size":2190,"mtime":1613375063549,"results":"152","hashOfConfig":"119"},{"size":4371,"mtime":1614518328316,"results":"153","hashOfConfig":"119"},{"size":1847,"mtime":1619254663069,"results":"154","hashOfConfig":"119"},{"size":1402,"mtime":1614523072278,"results":"155","hashOfConfig":"119"},{"size":809,"mtime":1613412957799,"results":"156","hashOfConfig":"119"},{"size":22785,"mtime":1619203345799,"results":"157","hashOfConfig":"119"},{"size":1416,"mtime":1614180131964,"results":"158","hashOfConfig":"119"},{"size":21131,"mtime":1619204269592,"results":"159","hashOfConfig":"119"},{"size":5526,"mtime":1619203688866,"results":"160","hashOfConfig":"119"},{"size":2376,"mtime":1619440385336,"results":"161","hashOfConfig":"119"},{"size":1865,"mtime":1614525902087,"results":"162","hashOfConfig":"119"},{"size":841,"mtime":1617016028307,"results":"163","hashOfConfig":"119"},{"size":5406,"mtime":1617971715221,"results":"164","hashOfConfig":"119"},{"size":1011,"mtime":1614622700780,"results":"165","hashOfConfig":"119"},{"size":902,"mtime":1614528801887,"results":"166","hashOfConfig":"119"},{"size":1054,"mtime":1614627911121,"results":"167","hashOfConfig":"119"},{"size":4948,"mtime":1616502929782,"results":"168","hashOfConfig":"119"},{"size":1569,"mtime":1614711726496,"results":"169","hashOfConfig":"119"},{"size":10430,"mtime":1619086904991,"results":"170","hashOfConfig":"119"},{"size":1345,"mtime":1614783739392,"results":"171","hashOfConfig":"119"},{"size":2126,"mtime":1614784184470,"results":"172","hashOfConfig":"119"},{"size":1641,"mtime":1614783331521,"results":"173","hashOfConfig":"119"},{"size":1061,"mtime":1614783331586,"results":"174","hashOfConfig":"119"},{"size":21190,"mtime":1614938832987,"results":"175","hashOfConfig":"119"},{"size":4618,"mtime":1615018643258,"results":"176","hashOfConfig":"119"},{"size":15300,"mtime":1619078190506,"results":"177","hashOfConfig":"119"},{"size":1182,"mtime":1614972115776,"results":"178","hashOfConfig":"119"},{"size":163,"mtime":1614974380021,"results":"179","hashOfConfig":"119"},{"size":6263,"mtime":1619112688321,"results":"180","hashOfConfig":"119"},{"size":2258,"mtime":1618595786752,"results":"181","hashOfConfig":"119"},{"size":1945,"mtime":1618576978980,"results":"182","hashOfConfig":"119"},{"size":3942,"mtime":1619078233597,"results":"183","hashOfConfig":"119"},{"size":5453,"mtime":1619291304303,"results":"184","hashOfConfig":"119"},{"size":4970,"mtime":1619015425309,"results":"185","hashOfConfig":"119"},{"size":4999,"mtime":1619015473909,"results":"186","hashOfConfig":"119"},{"size":3496,"mtime":1615484910065,"results":"187","hashOfConfig":"119"},{"size":4362,"mtime":1619004243850,"results":"188","hashOfConfig":"119"},{"size":3483,"mtime":1618919113110,"results":"189","hashOfConfig":"119"},{"size":3326,"mtime":1619083502772,"results":"190","hashOfConfig":"119"},{"size":2503,"mtime":1619016349520,"results":"191","hashOfConfig":"119"},{"size":1902,"mtime":1618862120202,"results":"192","hashOfConfig":"119"},{"size":557,"mtime":1618255800758,"results":"193","hashOfConfig":"119"},{"size":3058,"mtime":1616321033527,"results":"194","hashOfConfig":"119"},{"size":2423,"mtime":1616326682881,"results":"195","hashOfConfig":"119"},{"size":2477,"mtime":1616334930197,"results":"196","hashOfConfig":"119"},{"size":1462,"mtime":1616505698703,"results":"197","hashOfConfig":"119"},{"size":3725,"mtime":1616501298707,"results":"198","hashOfConfig":"119"},{"size":4941,"mtime":1619015335073,"results":"199","hashOfConfig":"119"},{"size":438,"mtime":1618408128288,"results":"200","hashOfConfig":"119"},{"size":439,"mtime":1618415644933,"results":"201","hashOfConfig":"119"},{"size":1024,"mtime":1616960049635,"results":"202","hashOfConfig":"119"},{"size":5726,"mtime":1618858876965,"results":"203","hashOfConfig":"119"},{"size":4206,"mtime":1618480999227,"results":"204","hashOfConfig":"119"},{"size":740,"mtime":1618857637907,"results":"205","hashOfConfig":"119"},{"size":388,"mtime":1598994729000,"results":"206","hashOfConfig":"119"},{"size":1045,"mtime":1618859702349,"results":"207","hashOfConfig":"119"},{"size":5946,"mtime":1619269579108,"results":"208","hashOfConfig":"119"},{"size":313,"mtime":1617995982192,"results":"209","hashOfConfig":"119"},{"size":1281,"mtime":1619017251869,"results":"210","hashOfConfig":"119"},{"size":9997,"mtime":1619349640343,"results":"211","hashOfConfig":"119"},{"size":2110,"mtime":1618916486668,"results":"212","hashOfConfig":"119"},{"size":9157,"mtime":1619470809372,"results":"213","hashOfConfig":"119"},{"size":8725,"mtime":1619470892529,"results":"214","hashOfConfig":"119"},{"size":21618,"mtime":1618574579339,"results":"215","hashOfConfig":"119"},{"size":2272,"mtime":1618926818778,"results":"216","hashOfConfig":"119"},{"size":5473,"mtime":1619381567943,"results":"217","hashOfConfig":"119"},{"size":11050,"mtime":1619113041549,"results":"218","hashOfConfig":"119"},{"size":1984,"mtime":1618929476466,"results":"219","hashOfConfig":"119"},{"size":1515,"mtime":1618933102978,"results":"220","hashOfConfig":"119"},{"size":2276,"mtime":1618929469284,"results":"221","hashOfConfig":"119"},{"size":1096,"mtime":1619466661297,"results":"222","hashOfConfig":"119"},{"size":1582,"mtime":1619112601836,"results":"223","hashOfConfig":"119"},{"size":4946,"mtime":1619113387089,"results":"224","hashOfConfig":"119"},{"size":23256,"mtime":1619266831759,"results":"225","hashOfConfig":"119"},{"size":275,"mtime":1619352978287,"results":"226","hashOfConfig":"119"},{"size":22457,"mtime":1619382726493,"results":"227","hashOfConfig":"119"},{"size":1038,"mtime":1619384978468,"results":"228","hashOfConfig":"119"},{"size":291,"mtime":1619384371188,"results":"229","hashOfConfig":"119"},{"size":22090,"mtime":1619385921054,"results":"230","hashOfConfig":"119"},{"size":1327,"mtime":1619384936623,"results":"231","hashOfConfig":"119"},{"size":288,"mtime":1619438355485,"results":"232","hashOfConfig":"119"},{"size":22094,"mtime":1619440086999,"results":"233","hashOfConfig":"119"},{"size":248,"mtime":1619450334000,"results":"234","hashOfConfig":"119"},{"size":2192,"mtime":1619463289407,"results":"235","hashOfConfig":"119"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},"wimjf",{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"238"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"238"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"238"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"238"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"238"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"238"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"238"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"238"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"238"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"238"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"238"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"238"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"238"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"238"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"238"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"238"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"323"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"238"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"238"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"238"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"238"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"238"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"238"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"238"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"238"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"238"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"238"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"364","messages":"365","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"238"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"238"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"238"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"238"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"238"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"238"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"238"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"238"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"238"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"238"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"238"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"238"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"238"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"238"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"238"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"238"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"238"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"238"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"238"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"238"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"238"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"238"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"238"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"456"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"456"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"456"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"456"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"456"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"456"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"456"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"456"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"238"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"238"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"238"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"495","messages":"496","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"238"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"238"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"238"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"238"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"238"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"238"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"238"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"518","messages":"519","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"520","usedDeprecatedRules":"238"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"238"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"238"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"238"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"238"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"238"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"238"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"238"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"550","messages":"551","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\index.js",[],["552","553"],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\App.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\reportWebVitals.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\theme.js",["554"],"import { createMuiTheme, fade} from '@material-ui/core'\r\nimport {deepPurple, amber} from '@material-ui/core/colors'\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        type:'light',\r\n        white: {\r\n            main: \"#FFFFFF\",\r\n          },\r\n          black: {\r\n            light: \"#12263F\",\r\n            main: \"#000000\",\r\n          },\r\n          transparent: {\r\n            main: \"transparent\",\r\n          },\r\n          gray: {\r\n            100: \"#f6f9fc\",\r\n            200: \"#e9ecef\",\r\n            300: \"#dee2e6\",\r\n            400: \"#ced4da\",\r\n            500: \"#adb5bd\",\r\n            600: \"#8898aa\",\r\n            700: \"#525f7f\",\r\n            800: \"#32325d\",\r\n            900: \"#212529\",\r\n          },\r\n        primary: {\r\n            light: '#1282a2',\r\n            main: '#034078',\r\n            dark: '#0a1128',\r\n            contrastText: '#fff',\r\n          },\r\n          secondary: {\r\n            light: '#598392',\r\n            main: amber[500],\r\n            dark: amber[800],\r\n            contrastText: '#000',\r\n          },\r\n          warning: {\r\n            light: \"#ffd600\",\r\n            main: \"#fb6340\",\r\n            snackbar: \"#fc7c5f\",\r\n            badgeBg: \"#fee6e0\",\r\n            badgeBgHover: \"#f93305\",\r\n            badge: \"#ff3709\",\r\n          },\r\n          error: {\r\n            light: \"#f3a4b5\",\r\n            main: \"#f5365c\",\r\n            snackbar: \"#f75676\",\r\n            badgeBg: \"#fdd1da\",\r\n            badgeBgHover: \"#e30b36\",\r\n            badge: \"#f80031\",\r\n            dialogNotification: \"#f56036\",\r\n          },\r\n          info: {\r\n            main: \"#11cdef\",\r\n            snackbar: \"#37d5f2\",\r\n            badgeBg: \"#aaedf9\",\r\n            badgeBgHover: \"#0c9cb7\",\r\n            badge: \"#03acca\",\r\n          },\r\n          background: {\r\n            default: \"#f8f9fe\",\r\n          },\r\n          text: {\r\n            primary: \"#525f7f\",\r\n          },\r\n          dark: {\r\n            tableBorder: \"#1f3a68\",\r\n            tableHeadColor: \"#4d7bca\",\r\n            tableHeadBgColor: \"#1c345d\",\r\n            main: \"#172b4d\",\r\n            dark: \"#0b1526\",\r\n            snackbar: \"#3c4d69\",\r\n            badgeBg: \"#4172c6\",\r\n            badgeBgHover: \"#09111e\",\r\n          },\r\n          success: {\r\n            main: \"#2dce89\",\r\n            snackbar: \"#4fd69c\",\r\n            badgeBg: \"#b0eed3\",\r\n            badgeBgHover: \"#229c68\",\r\n            badge: \"#1aae6f\",\r\n          },\r\n    },\r\n    typography:{\r\n        fontFamily: \"Lato, sans-serif\"\r\n    }\r\n});\r\n// Global props styles\r\ntheme.props = {\r\n    MuiButton:{\r\n        disableElevation:true\r\n    },\r\n    MuiInputLabel: {\r\n        shrink: true\r\n    },\r\n    MuiInput:{\r\n        disableUnderline:true\r\n    },\r\n    \r\n}\r\n\r\ntheme.overrides = {\r\n    // MuiButton:{\r\n    //     default: {\r\n    //         borderRadius: 0,\r\n    //         textTransform:'none'\r\n    //     },\r\n    //     containedPrimary:{\r\n    //         \"&:hover\":{\r\n    //             backgroundColor: amber[500],\r\n    //             color: 'red'\r\n    //         }\r\n    //     }\r\n    // },\r\n    \r\n    MuiInput:{\r\n        root:{\r\n            // border:'1px solid gray',\r\n            top:5,\r\n            \r\n            '&$focused':{\r\n                borderRadius:5,\r\n                boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.1rem`,\r\n                borderColor: theme.palette.primary.main\r\n            }\r\n            \r\n        },\r\n        \r\n    },\r\n    MuiInputLabel:{\r\n        root:{\r\n            // textTransform:'uppercase'\r\n        }\r\n    }\r\n}\r\n\r\nexport default theme;","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\BrandButton.js",["555"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, withStyles } from '@material-ui/core'\r\nimport { amber, deepPurple } from '@material-ui/core/colors'\r\nimport clsx from 'clsx'\r\n\r\nconst styles = () => ({\r\n    default: {\r\n        borderRadius: 0,\r\n        textTransform:'none'\r\n    },\r\n    primary:{\r\n        \"&:hover\":{\r\n            backgroundColor: amber[500],\r\n            color: deepPurple[900]\r\n        }\r\n    }\r\n});\r\n\r\nconst BrandButton = ({color,children,classes}) => {\r\n    return (\r\n        <Button\r\n        variant=\"contained\"\r\n        color={color}\r\n        // className={classes.default}\r\n        // className={clsx(classes.default,classes.primary)}\r\n        classes = {{root:classes.default,containedPrimary:classes.primary}}\r\n        \r\n        // disableElevation\r\n        >\r\n            {children}\r\n        </Button>\r\n    )\r\n}\r\n\r\n\r\nBrandButton.propTypes = {\r\n    color:PropTypes.string\r\n}\r\nexport default withStyles(styles)(BrandButton)\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\App.js",["556","557","558","559","560"],"/**\r\n * App.js Layout Start Here\r\n */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter, Switch, Redirect, Route, withRouter } from 'react-router-dom';\r\n\r\n\r\nimport BrandButton from '../BrandButton'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AdminLayout from './AdminLayout'\r\nimport AuthLayout from './AuthLayout';\r\nimport { Profile } from './Profile';\r\n\r\n\r\n\r\nconst ProtectedRoute = ({ component, authUser, ...rest }) => {\r\n  return (\r\n    <Route{...rest}\r\n      render={props =>\r\n        !authUser\r\n          ? <Component {...props} />\r\n          : <Redirect\r\n            to={{\r\n              pathname: '/auth/signin',\r\n              state: { from: props.location }\r\n            }}\r\n          />}\r\n    />\r\n  )\r\n}\r\n\r\nclass App extends Component {\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n\r\n\r\n\r\n      <Switch>\r\n        <Route exact path=\"/\" render={props => \"welcome\"} />\r\n        <Route path=\"/auth\" render={props => <AuthLayout {...props} />} />\r\n        <Route path=\"/profile\" component={Profile} />\r\n\r\n        {/* <ProtectedRoute path=\"/admin\" authUser={this.props.data} component={AdminLayout}/> */}\r\n\r\n        <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\r\n        {/* <Route path=\"/admin\" component={AdminLayout} /> */}\r\n\r\n      </Switch>\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.authUser.user\r\n\r\n});\r\nexport default connect(mapStateToProps)(App);\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\store\\index.js",["561"],"/**\r\n * Redux Store\r\n */\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducers from '../reducers';\r\nimport RootSaga from \"../sagas\";\r\n\r\n// Create the saga middleware\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport function configureStore(initialState){\r\n    const store = createStore(\r\n        reducers,\r\n        initialState,\r\n        // compose(applyMiddleware(...middlewares))\r\n        composeWithDevTools(applyMiddleware(...middlewares))\r\n    );\r\n\r\n    sagaMiddleware.run(RootSaga);\r\n\r\n    // if(module.hot){\r\n    //     // Enable Webpack hot module replacement for reducers\r\n\r\n    //     module.hot.accept('../reducers/index',()=> {\r\n    //         const nextRootReducer = require('../reducers/index');\r\n    //         store.replaceReducer(nextRootReducer);\r\n    //     });\r\n    // }\r\n    return store;\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\SigninFirebase.js",["562","563","564","565","566","567","568","569"],"import React, { useCallback, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Paper,\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Cookies from 'js-cookie';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport HttpsOutlinedIcon from \"@material-ui/icons/HttpsOutlined\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport FormikField from \"../components/formikcontrol/FormikField\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { signinUser } from \"../actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root:{\r\n    position:'relative'\r\n  },\r\n  root2: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    height: \"100vh\",\r\n    padding: 10,\r\n    backgroundColor: \"#fff\",\r\n    label: {\r\n      textTransform: \"capitalize\",\r\n    },\r\n    signinform: {},\r\n    \"& .FormikField\": {\r\n      marginTop: \"5%\",\r\n    },\r\n    \"& .MuiInputBase-input\": {\r\n      backgroundColor: grey[100],\r\n      outline: \"none\",\r\n      borderRadius: 5,\r\n    },\r\n    \"& .MuiInputLabel-formControl\": {\r\n      color: grey[800],\r\n    },\r\n    \"& .Mui-disabled\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: \"#fff\",\r\n      cursor: \"no-drop\",\r\n    },\r\n  },\r\n  bordertopcolor: {\r\n    borderTop: `8px solid ${theme.palette.primary.main}`,\r\n    borderRadius: 10,\r\n    marginTop: \"-10%\",\r\n  },\r\n  pageTitle: {\r\n    position: \"relative\",\r\n    backgroundColor: \"#fff\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    placeContent: \"center\",\r\n    paddingTop: \"5%\",\r\n\r\n    // alignItems:'center',\r\n    // left:'44vw',\r\n    // top:\"26%\",\r\n    // height: \"1vh\",\r\n    // padding:10\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      position: \"static\",\r\n     \r\n      // left:\"30%\",\r\n      left: 0,\r\n      right: 0,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n}));\r\nconst loginschema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .required(\"Username or Email is should not be empty\"),\r\n  password: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .required(\"Password is should not be empty\"),\r\n  // .matches(\r\n  //     /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n  //     \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\r\n  //   )\r\n});\r\nconst initialValues = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\nconst SigninFirebase = (props) => {\r\n  const [iserror, setIserror] = React.useState(false);\r\n  const [issubmitting, setIssubmitting] = React.useState(false);\r\n  const [csrf,setCsrf] = React.useState(\"\")\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  const response = useSelector((state) => state.authUser);\r\n  const url = 'https://app.contentbond.com/'\r\n  useEffect(() => {\r\n    \r\n      if (response.isAuthenticated) return props.history.push('/admin/dashboard');\r\n      // fetch(url+\"getcsrf/default/\",{\r\n      //   credentials: \"include\",\r\n      // }).then((res) => {\r\n      //   let csrfToken = res.headers.get(\"X-CSRFToken\")\r\n        \r\n      //   setCsrf(csrfToken)\r\n      // }).catch((err) => {\r\n      //   console.log(err)\r\n      // })\r\n    \r\n  }, [])\r\n\r\n  const handleSubmit = async (values) => {\r\n    \r\n   \r\n    setIssubmitting(true);\r\n    setIserror(false)\r\n    const data = {\r\n      email: values.email,\r\n      password: values.password\r\n     \r\n    }\r\n    const history = props.history\r\n    \r\n    dispatch(\r\n      signinUser(\r\n          data,\r\n        history\r\n      )\r\n    );\r\n    \r\n    \r\n  \r\n\r\n  };\r\n\r\n \r\n\r\n  const onUserLogin = useCallback(() => {\r\n      const data = {\r\n        email: \"trisha\",\r\n        password: \"Google@123\",\r\n      }\r\n      const history = props.history\r\n      \r\n    dispatch(\r\n      signinUser(\r\n          data,\r\n        history\r\n      )\r\n    );\r\n    \r\n   \r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {response.authenticateerror && !iserror? (\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setIserror(true);\r\n          }}\r\n        >\r\n          Login attempt is failed. check credentials !\r\n        </Alert>\r\n      ):null}\r\n\r\n      {response ? response.email : \"no waste\"}\r\n\r\n      \r\n      <Box component=\"section\" className={classes.root}>\r\n         {/* <Box className={classes.pageTitle}>\r\n         \r\n          <Typography component=\"h4\" variant=\"h4\">\r\n            MoviePlex\r\n          </Typography>\r\n      </Box> */}\r\n      <Box className={classes.root2}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={8}\r\n          md={4}\r\n          component={Paper}\r\n          elevation={6}\r\n          square\r\n          className={classes.bordertopcolor}\r\n        >\r\n          {/* <LinearProgress value={40} /> */}\r\n          <Box display=\"flex\" flexDirection=\"column\" p={3}>\r\n            <Box\r\n              display=\"flex\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Typography\r\n                component=\"h5\"\r\n                variant=\"h5\"\r\n                style={{ marginBottom: \"5%\" }}\r\n              >\r\n                Sign in\r\n              </Typography>\r\n              <HttpsOutlinedIcon style={{ marginBottom: \"5%\" }} />\r\n            </Box>\r\n\r\n            <Formik\r\n              initialValues={initialValues}\r\n              onSubmit={handleSubmit}\r\n              validationSchema={loginschema}\r\n            >\r\n              {({ dirty, isValid }) => {\r\n                return (\r\n                  <Form>\r\n                    <FormikField\r\n                      name=\"email\"\r\n                      label=\"Username\"\r\n                      type=\"text\"\r\n                      required                      \r\n                      textvariant=\"standard\"\r\n                    />\r\n\r\n                    <FormikField\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      required                      \r\n                      textvariant=\"standard\"\r\n                    />\r\n                    {/* <TextField id=\"standard-basic\" label=\"Username\" style={{marginBottom:\"5%\"}} required />\r\n          <TextField id=\"standard-adornment-password\" label=\"Password\" style={{marginBottom:\"5%\"}} required /> */}\r\n\r\n                    <Button\r\n                      type=\"submit\"\r\n                      disabled={!dirty || !isValid}\r\n                      fullWidth\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      classes={{\r\n                        label: classes.root.label,\r\n                        disabled: classes.disabledButton,\r\n                      }}\r\n                      style={{ marginTop: \"5%\" }}\r\n                    >\r\n                      {response.loading && (\r\n                        <CircularProgress\r\n                          color=\"secondary\"\r\n                          size={20}\r\n                          thickness={4.8}\r\n                        />\r\n                      )}{\" \"}\r\n                      Sign In\r\n                    </Button>\r\n                  </Form>\r\n                );\r\n              }}\r\n            </Formik>\r\n\r\n            <Box\r\n              display=\"flex\"\r\n              alignContent=\"center\"\r\n              justifyContent=\"space-between\"\r\n              mt={3}\r\n            >\r\n              <Typography component=\"h5\" variant=\"body2\">\r\n                Don't have an account ?{\" \"}\r\n                <Link\r\n                  to=\"/auth/signup\"\r\n                  style={{ textDecorationColor: \"none\", color: \"inherit\" }}\r\n                >\r\n                  Sign up\r\n                </Link>\r\n              </Typography>\r\n              <Typography component=\"h5\" variant=\"body2\">\r\n                <Link\r\n                  to=\"/auth/password_reset\"\r\n                  style={{ textDecorationColor: \"none\", color: \"inherit\" }}\r\n                >\r\n                  Forgot Password ?\r\n                </Link>\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          {/* <Box display=\"flex\" justifyContent=\"center\" mb={2}>\r\n            <Button color=\"primary\" variant=\"contained\" onClick={(e)=>onUserLogin(e)}>\r\n              google login\r\n            </Button>\r\n          </Box> */}\r\n        </Grid>\r\n      </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SigninFirebase;\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\SignupFirebase.js",["570","571","572","573","574","575","576","577","578","579","580","581"],"import React from \"react\";\r\nimport {\r\n  Button,\r\n  Paper,\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\n\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport HttpsOutlinedIcon from \"@material-ui/icons/HttpsOutlined\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signInWithGoogle } from \"../firebase.utils\";\r\n\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nimport { validatingUsername, RegisterAccount } from \"./api/authapi\";\r\nimport { useSelector } from \"react-redux\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    // height: \"100vh\",\r\n    padding: 10,\r\n    backgroundColor: \"#fff\",\r\n    label: {\r\n      textTransform: \"capitalize\",\r\n    },\r\n    signinform: {},\r\n    \"& .MuiInputBase-input\": {\r\n      backgroundColor: grey[100],\r\n      outline: \"none\",\r\n      borderRadius: 5,\r\n    },\r\n    \"& .MuiInputLabel-formControl\": {\r\n      color: grey[800],\r\n    },\r\n  },\r\n  bordertopcolor: {\r\n    borderTop: `8px solid ${theme.palette.primary.main}`,\r\n    borderRadius: 10,\r\n  },\r\n  formfieldsalign: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n}));\r\n\r\n// const initialValues = {\r\n//   first_name: \"\",\r\n//   last_name: \"\",\r\n//   username:\"\",\r\n//   email:\"\",\r\n//   password:\"\",\r\n//   phone:\"\",\r\n//   category:\"\",\r\n//   checkedB:\"\"\r\n// };\r\n\r\nconst SignupFirebase = (props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(\"creator\");\r\n  const [checked, setChecked] = React.useState(true);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alertseverity, setAlertseverity] = React.useState(\"success\");\r\n  const [registermessage, setRegistermessage] = React.useState(\"\");\r\n\r\n  const [isvalidUsername, setIsvalidUsername] = React.useState(true);\r\n  const [isvalidEmail, setIsvalidEmail] = React.useState(true);\r\n  const [isvalidPassword, setIsvalidPassword] = React.useState(\"\");\r\n  const [isvalidPhone, setIsvalidPhone] = React.useState(true);\r\n\r\n  const [issubmitting,setIssubmitting] = React.useState(false);\r\n  const [helperMessage, setHelperMessage] = React.useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  });\r\n  const response = useSelector((state) => state.authUser);\r\n  React.useEffect(() => {\r\n    if (response.user) props.history.push('/admin/dashboard')\r\n    return () => {\r\n        \r\n    }\r\n}, [response,props.history])\r\n\r\n  // const [formValues, setFormValues] = React.useState({\r\n  //     first_name: \"\",\r\n  //     last_name: \"\",\r\n  //     username:\"\",\r\n  //     email:\"\",\r\n  //     password:\"\",\r\n  //     phone:\"\",\r\n  //     category:\"\",\r\n  //     checkedB:\"\"\r\n  //   });\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  // Radios\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  // CheckBox\r\n  const handleChecked = (event) => {\r\n    setChecked(event.target.checked);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setIssubmitting(true)\r\n    const form_data = new FormData(event.target);\r\n    // console.log(form_data.get('category'))\r\n    //  for (let [key, value] of form_data.entries()) {\r\n    //         console.log(key, value);\r\n    //     }\r\n\r\n    const formValues = {\r\n      first_name: form_data.get(\"first_name\"),\r\n      last_name: form_data.get(\"last_name\"),\r\n      username: form_data.get(\"username\"),\r\n      email: form_data.get(\"email\"),\r\n      password: form_data.get(\"password\"),\r\n      phone: form_data.get(\"phone\"),\r\n      category: form_data.get(\"category\"),\r\n      checkedB: checked,\r\n    };\r\n\r\n    // if(FormValues.username== \"\" || (FormValues.username).length < 8){\r\n    //   return alert('username is should be fill');\r\n    // }\r\n    const isVerify = formValues.password.match(\r\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/\r\n    );\r\n    if (isVerify) {\r\n      setIsvalidPassword(\"\");\r\n      var submitresponse = await RegisterAccount(formValues);\r\n\r\n      if (submitresponse.status == 200) {\r\n        setRegistermessage(\"Successfully Account Created\");\r\n        setOpen(true);\r\n        setAlertseverity(\"success\");\r\n\r\n        let promisegen = new Promise((resolve,reject) => {\r\n          setTimeout(()=>{\r\n              resolve('resloving the string data');\r\n          },2000);\r\n      })\r\n      promisegen.then((data) => {\r\n        window.location.replace('/auth/signin')\r\n        setIssubmitting(false)\r\n      })\r\n        \r\n      } else {\r\n        setRegistermessage(\"Something is went wrong\");\r\n        setOpen(true);\r\n        setAlertseverity(\"error\");\r\n        setIssubmitting(false)\r\n      }\r\n      return;\r\n    } else {\r\n      setIssubmitting(false)\r\n      return setIsvalidPassword(\r\n        \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\r\n      );\r\n    }\r\n    \r\n  };\r\n\r\n  const onChangeValidation = async (e) => {\r\n    const data = {\r\n      action: e.target.name,\r\n      value: e.target.value,\r\n    };\r\n    var respdata = await validatingUsername(data);\r\n    if (!respdata.message) {\r\n      setHelperMessage({\r\n        ...helperMessage,\r\n        [e.target.name]: '\" ' + e.target.value + '\" is available',\r\n      });\r\n      if (data.action == \"username\") {\r\n        setIsvalidUsername(true);\r\n      } else if (data.action == \"email\") {\r\n        setIsvalidEmail(true);\r\n      }\r\n    } else {\r\n      setHelperMessage({\r\n        ...helperMessage,\r\n        [e.target.name]: '\" ' + e.target.value + '\" is not available',\r\n      });\r\n      if (data.action == \"username\") {\r\n        setIsvalidUsername(false);\r\n      } else if (data.action == \"email\") {\r\n        setIsvalidEmail(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  // SnackBar\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const vertical = \"top\";\r\n  const horizontal = \"right\";\r\n\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        open={open}\r\n        autoHideDuration={4000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert onClose={handleClose} severity={alertseverity}>\r\n          {registermessage}\r\n        </Alert>\r\n      </Snackbar>\r\n      <form onSubmit={onSubmit} autoComplete=\"off\">\r\n        <Box component=\"section\" className={classes.root}>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={8}\r\n            md={4}\r\n            component={Paper}\r\n            elevation={6}\r\n            square\r\n            className={classes.bordertopcolor}\r\n          >\r\n            {/* <LinearProgress value={40} /> */}\r\n            <Box display=\"flex\" flexDirection=\"column\" p={3}>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Typography\r\n                  component=\"h1\"\r\n                  variant=\"h5\"\r\n                  style={{ marginBottom: \"5%\" }}\r\n                >\r\n                  SignUp\r\n                </Typography>\r\n                <HttpsOutlinedIcon style={{ marginBottom: \"5%\" }} />\r\n              </Box>\r\n\r\n              <Box className={classes.formfieldsalign}>\r\n                <Box style={{ marginBottom: \"5%\" }}>\r\n                  <TextField\r\n                    type=\"text\"\r\n                    name=\"first_name\"\r\n                    id=\"standard-basic\"\r\n                    label=\"Firstname (optional)\"\r\n                    fullWidth\r\n                  />\r\n                </Box>\r\n\r\n                <Box style={{ marginBottom: \"5%\" }}>\r\n                  <TextField\r\n                    type=\"text\"\r\n                    name=\"last_name\"\r\n                    id=\"standard-basic\"\r\n                    label=\"Lastname (optional)\"\r\n                    fullWidth\r\n                  />\r\n                </Box>\r\n              </Box>\r\n              <TextField\r\n                error={!isvalidUsername}\r\n                name=\"username\"\r\n                id=\"standard-basic\"\r\n                label=\"Username\"\r\n                type=\"text\"\r\n                style={{ marginBottom: \"5%\" }}\r\n                onChange={onChangeValidation}\r\n                helperText={helperMessage.username}\r\n                autoComplete=\"nope\"\r\n                required\r\n              />\r\n\r\n              <TextField\r\n                error={!isvalidEmail}\r\n                name=\"email\"\r\n                type=\"email\"\r\n                id=\"standard-basic\"\r\n                label=\"Email\"\r\n                style={{ marginBottom: \"5%\" }}\r\n                onChange={onChangeValidation}\r\n                helperText={helperMessage.email}\r\n                autoComplete=\"nope\"\r\n                required\r\n              />\r\n              <TextField\r\n                error={isvalidPassword != \"\"}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                id=\"standard-adornment-password\"\r\n                label=\"Password\"\r\n                style={{ marginBottom: \"5%\" }}\r\n                helperText={isvalidPassword}\r\n                required\r\n              />\r\n              <TextField\r\n                name=\"phone\"\r\n                type=\"text\"\r\n                id=\"standard-adornment-phone\"\r\n                label=\"Phone\"\r\n                style={{ marginBottom: \"5%\" }}\r\n                autoComplete=\"nope\"\r\n                required\r\n              />\r\n\r\n              <FormControl component=\"fieldset\">\r\n                <FormLabel\r\n                  classes={{ label: classes.root.label }}\r\n                  component=\"legend\"\r\n                >\r\n                  Category\r\n                </FormLabel>\r\n                <RadioGroup\r\n                  row\r\n                  aria-label=\"category\"\r\n                  name=\"category\"\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"creator\"\r\n                    control={<Radio />}\r\n                    label=\"Seller\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"producer\"\r\n                    control={<Radio />}\r\n                    label=\"Buyer\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                classes={{ label: classes.root.label }}\r\n                style={{ marginTop: \"3%\" }}\r\n                disabled={!checked}\r\n                type=\"submit\"\r\n              >\r\n                {issubmitting && (\r\n                        <CircularProgress\r\n                          color=\"secondary\"\r\n                          size={20}\r\n                          thickness={4.8}\r\n                        />\r\n                      )}{\" \"}\r\n                Sign Up\r\n              </Button>\r\n\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={checked}\r\n                    onChange={handleChecked}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                  />\r\n                }\r\n                label={\r\n                  <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                    By creating an account, you agree to the{\" \"}\r\n                    <a href=\"#\">Terms of Services</a>\r\n                  </Typography>\r\n                }\r\n              />\r\n\r\n              <Box\r\n                display=\"flex\"\r\n                alignContent=\"center\"\r\n                justifyContent=\"center\"\r\n                mt={3}\r\n              >\r\n                Already have an account ?{\" \"}\r\n                <Link\r\n                  to=\"/auth/signin\"\r\n                  style={{ textDecorationColor: \"none\", color: \"inherit\" }}\r\n                >\r\n                  Sign in\r\n                </Link>\r\n              </Box>\r\n            </Box>\r\n            {/* <Box display=\"flex\" justifyContent=\"center\" mb={2}>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={signInWithGoogle}\r\n              >\r\n                google login\r\n              </Button>\r\n            </Box> */}\r\n          </Grid>\r\n        </Box>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignupFirebase;\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\reducers\\index.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\sagas\\index.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\reducers\\AuthUserReducer.js",["582","583","584"],"/**\r\n * Auth User Reducers\r\n */\r\n\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILURE,\r\n    LOGOUT_USER,\r\n    SIGNUP_USER,\r\n    SIGNUP_USER_SUCCESS,\r\n    SIGNUP_USER_FAILURE,\r\n    LOGOUT_USER_SUCCESS,\r\n    LOGOUT_USER_FAILURE,\r\n    CREATE_TWO_STEP_TOKEN_START,\r\n    CREATE_TWO_STEP_TOKEN_FINISH,\r\n    SIGNIN_USER,\r\n    THEME_MODE_TOGGLE_SUCCESS,\r\n    GET_USER_PROFILE_DATA_SUCCESS,\r\n    UPDATE_PROFILE_PRIMARY_SUCCESS,\r\n    UPDATE_PROFILE_PRIMARY_FAILURE\r\n} from \"../actions/types\";\r\n\r\n\r\n/**\r\n * initial auth user\r\n */\r\nconst INIT_STATE = {\r\n    // user: localStorage.getItem(\"user\")\r\n    //     ? JSON.parse(localStorage.getItem(\"user\"))\r\n    //     : null,\r\n    access_token: null ,\r\n    loading: false,\r\n    user: null,\r\n    isAuthenticated:false,\r\n    authenticateerror:false,\r\n    thememode:true\r\n};\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n        case SIGNIN_USER:\r\n            return { ...state, loading: true };\r\n\r\n        case LOGIN_USER_SUCCESS:\r\n            var datenow = new Date()\r\n            localStorage.setItem('access_token',JSON.stringify({access_token:action.payload.access_token,expired:datenow.setHours(2)}))\r\n            return { ...state, loading: false, user: action.payload, authenticateerror:false, isAuthenticated:true };\r\n\r\n        case LOGIN_USER_FAILURE:\r\n            // NotificationManager.error(action.payload);\r\n            return { ...state, authenticateerror:true,loading: false };        \r\n       \r\n        case LOGOUT_USER:\r\n            return { ...state };\r\n\r\n        case LOGOUT_USER_SUCCESS:\r\n            return { ...state, user: null, isAuthenticated:false };\r\n\r\n        case LOGOUT_USER_FAILURE:\r\n            return { ...state };\r\n\r\n        case SIGNUP_USER:\r\n            return { ...state, loading: true };\r\n\r\n        case SIGNUP_USER_SUCCESS:\r\n            // NotificationManager.success(\"Account Created\");\r\n            return { ...state, loading: false, user: action.payload.uid };\r\n\r\n        case SIGNUP_USER_FAILURE:\r\n            // NotificationManager.error(action.payload);\r\n            return { ...state, loading: false };\r\n\r\n        case CREATE_TWO_STEP_TOKEN_START:\r\n            return { ...state, requestPassword: action.data };\r\n\r\n        case CREATE_TWO_STEP_TOKEN_FINISH:\r\n            return { ...state, twoStepTokenResp: action.data };\r\n        case THEME_MODE_TOGGLE_SUCCESS:\r\n            \r\n            return {...state, thememode:!state.thememode}\r\n\r\n        default:\r\n            return { ...state };\r\n    }\r\n};","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\actions\\types.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\sagas\\Auth.js",["585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600"],"/**\r\n * Auth Sagas\r\n */\r\nimport { all, call, fork, put, takeEvery, takeLatest } from \"redux-saga/effects\";\r\n\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport {\r\n  LOGIN_USER,\r\n  LOGIN_FACEBOOK_USER,\r\n  LOGIN_GOOGLE_USER,\r\n  LOGIN_TWITTER_USER,\r\n  LOGIN_GITHUB_USER,\r\n  LOGOUT_USER,\r\n  SIGNUP_USER,\r\n  SIGNIN_USER,\r\n  CREATE_TWO_STEP_TOKEN_START,\r\n  THEME_MODE_TOGGLE,\r\n  THEME_MODE_TOGGLE_SUCCESS,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGIN_USER_FAILURE,\r\n  LOGOUT_USER_SUCCESS,\r\n  LOGOUT_USER_FAILURE,\r\n\r\n  GET_USER_PROFILE_DATA,\r\n  GET_USER_PROFILE_DATA_SUCCESS\r\n  \r\n\r\n} from \"../actions/types\";\r\nimport * as apinstance from './api/api'\r\n// import {\r\n//     signinUserSuccess,\r\n//     signinUserFailure,\r\n//     signUpUserInFirebaseSuccess,\r\n//     signUpUserInFirebaseFailure,\r\n//     logoutUserFromFirebaseSuccess,\r\n//     logoutUserFromFirebaseFailure,\r\n//     createTwoStepTokenFinish,\r\n\r\n// } from \"../actions\";\r\n\r\nimport {getProfileData} from '../actions/ProfileActions'\r\n// const url = 'http://127.0.0.1:8000/'\r\nconst url = 'https://app.contentbond.com/'\r\n\r\nconst getCookie = (name) => {\r\n  \r\n  \r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');    \r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      \r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\nconst signInUserwithApiRequest = async (username, password) => {\r\n\r\n  let statuscode = ''\r\n  let cancel\r\n  // cancelToken.source()\r\n\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'X-CSRFToken': getCookie('csrftoken')\r\n    },\r\n    cancelToken: new axios.CancelToken(c => cancel = c)\r\n  }\r\n  \r\n\r\n\r\n  const body = JSON.stringify({ username,password })\r\n\r\n  await axios\r\n    .post(url + \"auth/signinsave/\", body, config)\r\n    .then(resp => { statuscode = resp.data })\r\n    .catch(e => {\r\n      if (axios.isCancel(e)) return\r\n\r\n    })\r\n\r\n\r\n  // fetch(\"http://localhost:8000/auth/signinsave/\", {\r\n  //     method: \"POST\",\r\n  //     headers: {\r\n  //       \"Content-Type\": \"application/json\",\r\n  //       \"X-CSRFToken\": csrftoken,\r\n  //     },\r\n  //     credentials: \"include\",\r\n  //     body: JSON.stringify({username: username, password: password}),\r\n  //   })\r\n  //   .then(response => {\r\n  //     if (!response.ok) {\r\n  //       throw new Error('Connecting problem');\r\n  //     }\r\n  //   })\r\n  //   .then((data) => {\r\n  //     console.log(data);\r\n      \r\n  //     // Router.push('/dashboard');\r\n  //   })\r\n  //   .catch((err) => {\r\n  //     console.log(err);\r\n      \r\n  //   });\r\n\r\n  \r\n\r\n  return statuscode\r\n}\r\n\r\nconst signOutUserwithApiRequest = async (email, password) => {\r\n\r\n  let statuscode = ''\r\n  let cancel\r\n  // cancelToken.source()\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'X-CSRFToken': getCookie('csrftoken')\r\n    },\r\n    cancelToken: new axios.CancelToken(c => cancel = c)\r\n  }\r\n\r\n\r\n  const body = JSON.stringify({ username: email, password: password })\r\n\r\n  await axios\r\n    .post(url + \"auth/signout/\", body, config)\r\n    .then(resp => { statuscode = resp.data })\r\n    .catch(e => {\r\n      if (axios.isCancel(e)) return\r\n\r\n    })\r\n\r\n  return statuscode\r\n}\r\n\r\n\r\nfunction* signInUserwithApi({ payload }) {\r\n  let userData = payload.user;\r\n  // console.log(\"consoling here: \", payload);\r\n  // console.log(\"consoling here: \", payload.history);\r\n  const signInResponse = yield call(\r\n    signInUserwithApiRequest,\r\n    userData.email,\r\n    userData.password\r\n    \r\n  );\r\n  if (signInResponse.status == 200) {\r\n    \r\n    // yield put(getProfileData({\r\n    //   user:51,\r\n    //   history:payload.history\r\n    // }))\r\n\r\n    yield put({\r\n      type: LOGIN_USER_SUCCESS,\r\n      payload: signInResponse.response\r\n    })\r\n    \r\n    \r\n    return payload.history.push('/admin/login/success')\r\n  } else {\r\n    yield put({\r\n      type: LOGIN_USER_FAILURE,\r\n      payload: signInResponse.message\r\n    })\r\n    return payload.history.push('/auth/signin')\r\n\r\n  }\r\n  //   yield put();\r\n  // console.log(signInResponse)\r\n}\r\n\r\nfunction* signoutUserwithApi() {\r\n\r\n  const signOutResponse = yield call(\r\n    signOutUserwithApiRequest\r\n\r\n  );\r\n  if (signOutResponse.status == 200) {\r\n    yield put({\r\n      type: LOGOUT_USER_SUCCESS,\r\n\r\n    })\r\n    window.location.replace('/auth/signin')\r\n  } else {\r\n    yield put({\r\n      type: LOGOUT_USER_FAILURE\r\n    })\r\n\r\n  }\r\n  //   yield put();\r\n  // console.log(signOutResponse)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Create User\r\n*/\r\n\r\nexport function* signInUser() {\r\n  console.log(\"sign in saga called..\");\r\n  yield takeEvery(SIGNIN_USER, signInUserwithApi);\r\n}\r\n\r\nexport function* signOutUser() {\r\n  console.log(\"sign Out saga called..\");\r\n  yield takeEvery(LOGOUT_USER, signoutUserwithApi);\r\n}\r\n\r\n\r\n\r\n// Theme props \r\n\r\nfunction* themetogglehelper() {\r\n\r\n  yield put({ type: THEME_MODE_TOGGLE_SUCCESS });\r\n\r\n}\r\nexport function* themetoggle() {\r\n\r\n  yield takeLatest(THEME_MODE_TOGGLE, themetogglehelper);\r\n}\r\n\r\n///-------------------------------------------------------------\r\n\r\n/**\r\n * Auth Root Saga\r\n */\r\nexport default function* rootSaga() {\r\n  console.log(\"ooo\");\r\n  yield all([\r\n\r\n    fork(signInUser),\r\n    fork(signOutUser),\r\n    fork(themetoggle),\r\n    \r\n  ]);\r\n}","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\actions\\index.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\actions\\AuthActions.js",["601","602","603","604","605"],"/* eslint-disable no-sequences */\r\n/**\r\n * Auth Actions\r\n * Auth Action With Google, Facebook, Twitter and Github\r\n */\r\n\r\nimport {\r\n  \r\n  LOGIN_USER_SUCCESS,\r\n  LOGIN_USER_FAILURE,\r\n  SIGNIN_USER,\r\n  THEME_MODE_TOGGLE,\r\n  LOGOUT_USER,\r\n  GET_USER_PROFILE_DATA,\r\n  UPDATE_PROFILE_PRIMARY,\r\n  UPDATE_PROFILE_SECONDARY\r\n} from \"./types\";\r\n\r\n/**\r\n * Redux Action To Sigin User With Firebase\r\n */\r\n\r\nexport const signinUser = (user,history) => (\r\n  // console.log(\"skfdsdfjndf\", user),\r\n  {\r\n    type: SIGNIN_USER,\r\n    payload: { user,history }\r\n  }\r\n);\r\n\r\n// SignOut\r\n\r\nexport const signoutUser = () => (\r\n \r\n  {\r\n    type: LOGOUT_USER\r\n  }\r\n);\r\n\r\n/**\r\n* Redux Action Signin User Success\r\n*/\r\n\r\n//log in Action after success\r\n// export const signinUserSuccess = user => ({\r\n//   type: LOGIN_USER_SUCCESS,\r\n//   payload: user\r\n// });\r\n\r\n \r\n/**\r\n* Redux Action Signin User Failure\r\n*/\r\n// export const signinUserFailure = error => ({\r\n//   type: LOGIN_USER_FAILURE,\r\n//   payload: error\r\n// });\r\n\r\n\r\n\r\n\r\n\r\n// End Profile Operations\r\nexport const themodechanger = () => (\r\n\r\n{\r\n  type:THEME_MODE_TOGGLE\r\n})","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\AdminLayout.js",["606","607","608","609","610","611","612","613","614"],"/**\r\n * AdminLayout.js Layout Start Here\r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport { Route, withRouter, Redirect, Switch } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport routerService from '../services/routerService'\r\n\r\nimport AdminHeader from '../components/AdminHeader/AdminHeader'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport { Grid, Box, Container, Typography } from '@material-ui/core';\r\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport { amber } from '@material-ui/core/colors';\r\n\r\nimport {getProfileData} from '../actions/ProfileActions'\r\nimport { bindActionCreators } from 'redux';\r\nimport { ProfileUpdatePrimary } from 'actions';\r\nimport { ProfileUpdateSecondary } from 'actions';\r\nimport { authUserState } from 'reducers/selectors/AuthSelector';\r\nimport { authisAuthenticated } from 'reducers/selectors/AuthSelector';\r\n\r\n\r\n\r\nconst styles = {\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent:'space-between',\r\n      marginBottom:10\r\n\r\n    },\r\n    color:{\r\n        color:'gray'\r\n    }\r\n  };\r\n\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n        type:'light',\r\n        primary: {\r\n            light: '#1282a2',\r\n            main: '#034078',\r\n            dark: '#0a1128',\r\n            contrastText: '#fff',\r\n          },\r\n          secondary: {\r\n            light: '#598392',\r\n            main: amber[500],\r\n            dark: amber[800],\r\n            contrastText: '#000',\r\n          },\r\n      \r\n    },\r\n    typography:{\r\n        fontFamily: \"Lato, sans-serif\"\r\n    }\r\n  });\r\n\r\n\r\n  const darktheme = createMuiTheme({\r\n    palette: {\r\n        type:'dark',\r\n        primary: {\r\n            light: '#1282a2',\r\n            main: '#303030;',\r\n            dark: '#0a1128',\r\n            contrastText: '#fff',\r\n          },\r\n          secondary: {\r\n            light: '#598392',\r\n            main: amber[500],\r\n            dark: amber[800],\r\n            contrastText: '#000',\r\n          },\r\n      \r\n    },\r\n    typography:{\r\n        fontFamily: \"Lato, sans-serif\"\r\n    }\r\n  });\r\n\r\nclass AdminLayout extends Component {\r\n    static propTypes = {\r\n\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            issidebar:false\r\n        }\r\n    \r\n\r\n    }\r\n\r\n\r\n   \r\n\r\n    componentDidMount(){\r\n        // alert('stoppedn in component did mount Admin layout')\r\n        // if(!this.props.isAuthenticated){\r\n        //     return this.props.history.push('/auth/signin')\r\n        // } \r\n\r\n        // alert('checking auth',this.props.isAuthenticated)\r\n        \r\n        // console.log('started component')\r\n        const data ={\r\n            user:51,\r\n            history:this.props.history\r\n          }\r\n          console.log('trigging component did mount')\r\n          if(this.props.isProfile == ''){\r\n            return this.props.getProfileData(data);\r\n          }\r\n          \r\n\r\n    }\r\n    \r\n\r\n\r\n    \r\n   getPageTitle = (location) => {\r\n    var pagetitle = (location.pathname.split('/'))[2].slice(0).charAt(0).toUpperCase() +(location.pathname.split('/'))[2].slice(1)\r\n    if(pagetitle == \"Contentadmin\"){\r\n      pagetitle = \"Explore\";\r\n    }\r\n    return pagetitle\r\n   }\r\n\r\n    \r\n    \r\n    sidebardrawer =()=>{\r\n        this.setState({issidebar: !this.state.issidebar});\r\n    }\r\n    \r\n    render() {\r\n        const {location, classes} = this.props;\r\n       \r\n        \r\n        const width = this.state.issidebar? +window.innerWidth >= 1366?`calc(100% - 80%)`:`calc(100% - 74%)`:`calc(100% - 93%)`;\r\n        \r\n        \r\n    \r\n        \r\n        return (\r\n            <>\r\n            <ThemeProvider theme={this.props.thememode?theme:darktheme}>\r\n            <CssBaseline />\r\n            <AdminHeader sidebardrawer={this.sidebardrawer} />\r\n            <Box style={{marginLeft:width,marginRight:15,overflow:'hidden',marginTop:100,flexGrow:1}}>\r\n                <Box className={classes.root}>\r\n                <Typography className={classes.color}>\r\n                    \r\n                    {this.getPageTitle(location)}\r\n\r\n                </Typography>\r\n                </Box>\r\n            <Switch>\r\n            {routerService && routerService.map((route,key)=>\r\n\t\t\t\t\troute.layout === \"admin\" && <Route key={key} exact path={`/admin/${route.path}`} component={route.component} />\r\n                    \r\n\t\t\t\t)}\r\n                \r\n                \r\n                <Redirect from=\"*\" to=\"/admin/profile\" />\r\n                \r\n                </Switch>\r\n\r\n                </Box>\r\n                </ThemeProvider>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.authUser.isAuthenticated,\r\n    thememode: state.authUser.thememode,\r\n    isProfile:state.profileops.profile.user_ptr.first_name\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({      \r\n        getProfileData\r\n        \r\n    }, dispatch);\r\n  }\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return bindActionCreators({      \r\n        \r\n//         primaryprofileupdate:ProfileUpdatePrimary,\r\n//         secondaryprofileupdate:ProfileUpdateSecondary\r\n//     }, dispatch);\r\n//   }\r\n// export default connect(mapStateToProps,mapDispatchToProps)(withRouter((withStyles(styles)(AdminLayout))));\r\nexport default withStyles(styles)(connect(mapStateToProps,mapDispatchToProps)(withRouter(AdminLayout)));\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\AdminHeader\\AdminHeader.js",["615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639"],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\lib\\reactifyCss.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\services\\routerService.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\AuthLayout.js",["640","641","642"],"/**\r\n * AdminLayout.js Layout Start Here\r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport { Route, withRouter, Redirect, Switch } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport routerService from '../services/routerService'\r\n\r\nimport AdminHeader from '../components/AdminHeader/AdminHeader'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport { Container } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { authUserState } from 'reducers/selectors/AuthSelector';\r\nclass AuthLayout extends Component {\r\n    static propTypes = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.isAuthenticated) {\r\n            return <Redirect to=\"/admin/profile\" />\r\n\r\n        }\r\n        console.log('ended component')\r\n        // const data ={\r\n        //     user:51,\r\n        //     history:this.props.history\r\n        //   }\r\n        //   console.log('trigging component did mount')\r\n        //   return this.props.getProfileData(data);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <>\r\n                <CssBaseline />\r\n                {/* <AdminHeader /> */}\r\n\r\n                <Switch>\r\n                    {routerService && routerService.map((route, key) =>\r\n                        route.layout === \"auth\" &&<Route key={key} path={`/auth/${route.path}`} component={route.component} />\r\n                    )}\r\n\r\n\r\n                    <Redirect from=\"*\" to=\"/auth/signin\" />\r\n\r\n                </Switch>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authUserState(state.authUser)\r\n});\r\nexport default connect(mapStateToProps, null)(withRouter(AuthLayout));\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\Dashboardadmin.js",["643","644","645","646","647","648","649","650","651","652","653","654","655","656","657"],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\Apexchartdemo.js",["658"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  useTheme,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Sales = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: colors.indigo[500],\r\n        data: [18, 5, 19, 27, 29, 19, 20],\r\n        label: 'This year'\r\n      },\r\n      {\r\n        backgroundColor: colors.grey[200],\r\n        data: [11, 20, 12, 29, 30, 25, 13],\r\n        label: 'Last year'\r\n      }\r\n    ],\r\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cornerRadius: 20,\r\n    layout: { padding: 0 },\r\n    legend: { display: false },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 12,\r\n          maxBarThickness: 10,\r\n          barPercentage: 0.5,\r\n          categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        action={(\r\n          <Button\r\n            endIcon={<ArrowDropDownIcon />}\r\n            size=\"small\"\r\n            variant=\"text\"\r\n          >\r\n            Last 7 days\r\n          </Button>\r\n        )}\r\n        title=\"Products and Users\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          height={400}\r\n          position=\"relative\"\r\n        >\r\n          <Bar\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      {/* <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        p={0}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          Overview\r\n        </Button>\r\n      </Box> */}\r\n    </Card>\r\n  );\r\n};\r\n\r\nSales.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Sales;\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\constants\\chart-config.js",[],["659","660"],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\constants\\AppConfig.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\LatestProducts.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\TrafficByDevice.js",["661"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  useTheme\r\n} from '@material-ui/core';\r\n// import LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\n// import PhoneIcon from '@material-ui/icons/Phone';\r\n// import TabletIcon from '@material-ui/icons/Tablet';\r\n\r\nimport GroupAddOutlinedIcon from '@material-ui/icons/GroupAddOutlined';\r\nimport GroupOutlinedIcon from '@material-ui/icons/GroupOutlined';\r\nimport GroupWorkOutlinedIcon from '@material-ui/icons/GroupWorkOutlined';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst TrafficByDevice = ({ className,userdata, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const total_users = ((+userdata.sellers) + (+userdata.buyers)).toFixed(1)\r\n  const percentage_sellers = ((+userdata.sellers/parseInt(total_users)) * 100).toFixed(1)\r\n  const percentage_buyers = ((+userdata.buyers/parseInt(total_users)) * 100).toFixed(1)\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [percentage_sellers, percentage_buyers],\r\n        backgroundColor: [\r\n          colors.indigo[500],\r\n          // colors.red[600],\r\n          colors.orange[600]\r\n        ],\r\n        borderWidth: 8,\r\n        borderColor: colors.common.white,\r\n        hoverBorderColor: colors.common.white\r\n      }\r\n    ],\r\n    labels: ['Sellers', 'Buyers']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    legend: {\r\n      display: false\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n  \r\n  const devices = [\r\n    {\r\n      title: 'Sellers',\r\n      value: percentage_sellers,\r\n      icon: GroupAddOutlinedIcon,\r\n      color: colors.indigo[500]\r\n    },\r\n    {\r\n      title: 'Buyers',\r\n      value: percentage_buyers,\r\n      icon: GroupOutlinedIcon,\r\n      color: colors.red[600]\r\n    },\r\n    // {\r\n    //   title: 'TotalUsers',\r\n    //   value: total_users,\r\n    //   icon: GroupWorkOutlinedIcon,\r\n    //   color: colors.orange[600]\r\n    // }\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader title=\"Users\" />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          height={300}\r\n          position=\"relative\"\r\n        >\r\n          <Doughnut\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          mt={2}\r\n        >\r\n          {devices.map(({\r\n            color,\r\n            icon: Icon,\r\n            title,\r\n            value\r\n          }) => (\r\n            <Box\r\n              key={title}\r\n              p={1}\r\n              textAlign=\"center\"\r\n            >\r\n              <Icon color=\"action\" />\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"body1\"\r\n              >\r\n                {title}\r\n              </Typography>\r\n              <Typography\r\n                style={{ color }}\r\n                variant=\"h5\"\r\n              >\r\n                {value}\r\n                %\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTrafficByDevice.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TrafficByDevice;\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\button\\Custombutton.js",["662","663"],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ForgotPassword.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\formikcontrol\\FormikField.js",["664"],"import React from 'react'\r\nimport { ErrorMessage, Field } from \"formik\";\r\nimport TextField from '@material-ui/core/TextField'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FormikField = ({ name=\"somename\", label=\"somelable\", type = \"text\", required = false, textvariant=false, ...props}) => {\r\n    return (\r\n        <div className=\"FormikField\">\r\n            <Field\r\n                variant={textvariant ? textvariant:null}\r\n                required={required}\r\n                autoComplete=\"off\"\r\n                as={TextField}\r\n                label={label}\r\n                name={name}\r\n                fullWidth\r\n                type={type}\r\n                helperText={<ErrorMessage name={name} style={{color:'red'}} />}\r\n                {...props}\r\n            />         \r\n        </div>\r\n    )\r\n}\r\n\r\n// FormikField.propTypes =  {\r\n//     name: PropTypes.string,\r\n//     label: PropTypes.string,\r\n//     type: PropTypes.string,\r\n//     required: PropTypes.bool,\r\n//   }\r\nexport default FormikField;\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentExplore.js",["665","666","667","668","669","670","671","672","673"],"import { Box, Grid } from '@material-ui/core'\r\nimport React, { useState, useEffect, useCallback } from 'react'\r\nimport ContentExplorecard from '../components/explorecard/ContentExplorecard'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport * as apirequest from './api/api';\r\nimport * as cardapi from './api/cardactionsapi';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst ContentExplore = (props) => {\r\n\r\n    const response = useSelector((state) => state.productSave);\r\n    const profileresponse = useSelector(state => state.profileops.profile)\r\n    const [allproducts, setAllproducts] = useState([])\r\n    const [pageNumber, setPageNumber] = useState(1)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [alertseverity, setAlertseverity] = React.useState('success')\r\n    const [productmessage, setProductmessage] = React.useState('')\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        const setprod = async () => {\r\n\r\n            const allprod = await apirequest.getallproducts({ 'pageNumber': pageNumber })\r\n\r\n            setAllproducts(allprod)\r\n\r\n        }\r\n        setprod()\r\n\r\n        console.log('triggered')\r\n\r\n    }, [pageNumber])\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n\r\n    const handleIsactivemain = async (id, action) => {\r\n\r\n        let response = \"\"\r\n        if (action == \"is_active\") {\r\n            response = await cardapi.isactive(id)\r\n            const updatedproductsactive = allproducts.filter((val, key) => {\r\n                return [...allproducts, +val.id == +id ? val.is_active = !val.is_active : null]\r\n            })\r\n            setAllproducts(updatedproductsactive);\r\n        } else if (action == \"in_stock\") {\r\n            response = await cardapi.instock(id)\r\n            const updatedproductstock = allproducts.filter((val, key) => {\r\n                return [...allproducts, +val.id == +id ? val.in_stock = !val.in_stock : null]\r\n            })\r\n            setAllproducts(updatedproductstock);\r\n        }\r\n\r\n        if (+response.status === 200) {\r\n\r\n            setProductmessage(\"Successfully Changed\")\r\n            setOpen(true);\r\n            setAlertseverity('success')\r\n        } else if (+response.status === 400) {\r\n            setProductmessage(\"Successfully Changed\")\r\n            setOpen(true);\r\n            setAlertseverity('error')\r\n        }\r\n        else {\r\n\r\n            setProductmessage(\"Something is went wrong\")\r\n            setOpen(true);\r\n            setAlertseverity('error')\r\n        }\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     setAllproducts(response.products)\r\n    // }, [])\r\n\r\n    const handlePagechange = (event, number) => {\r\n        // alert(number)\r\n        setPageNumber(number)\r\n    }\r\n\r\n    // SnackBar\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const addlikes = async (e, id) => {\r\n        const response = await apirequest.addlike(id)\r\n        if (+response.status === 200) {\r\n            const updatedproducts = allproducts.filter((val, key) => {\r\n                return [...allproducts, +val.id == +id ? val.isliked = !val.isliked : null]\r\n            })\r\n            setAllproducts(updatedproducts);\r\n            alert(response.message)\r\n\r\n        } else {\r\n            alert('something is went wrong')\r\n        }\r\n\r\n    }\r\n    const addfavorites = async (e, id) => {\r\n        const response = await apirequest.addinterest(id)\r\n\r\n        if (+response.status === 200) {\r\n            const updatedproducts = allproducts.filter((val, key) => {\r\n                return [...allproducts, +val.id == +id ? val.isfavored = !val.isfavored : null]\r\n            })\r\n            setAllproducts(updatedproducts);\r\n            alert(response.message)\r\n\r\n        } else {\r\n            alert('something is went wrong')\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const editProduct = async (id) => {\r\n        // const response = await apirequest.editCreatorproduct(id);\r\n        props.history.push('/admin/contentedit/'+id)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const vertical = \"top\"\r\n    const horizontal = \"right\"\r\n    return (\r\n        <>\r\n            <Snackbar anchorOrigin={{ vertical, horizontal }} open={open} autoHideDuration={4000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={alertseverity}>\r\n                    {productmessage}\r\n                </Alert>\r\n            </Snackbar>\r\n            <Grid container spacing={2}>\r\n                {allproducts.map((val, index) => {\r\n                    return <Grid item md={4} sm={12} xs={12} lg={4} key={index}><ContentExplorecard editProduct={editProduct} val={val} likefun={addlikes} interestfun={addfavorites}\r\n                       profilerestrict={profileresponse}\r\n                    /></Grid>\r\n                })}\r\n            </Grid>\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" mt={5} mb={5}>\r\n                <Pagination onChange={handlePagechange} count={10} color=\"primary\" />\r\n            </Box>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ContentExplore\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentRequest.js",["674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691"],"import { Box, Button, Card, FormControl, FormControlLabel, Grid, Input, Paper, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport CustomizedDate from '../components/ModelDialogue/CustomizedDate'\r\nimport CustomizedInputs from '../components/ModelDialogue/CustomizedInputs'\r\nimport CustomizedSelect from '../components/ModelDialogue/CustomizedSelect'\r\nimport SelectFieldCustom from '../components/SelectFieldCustom/SelectFieldCustom'\r\nimport FileUpload from '../components/button/FileUpload'\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FormikField from \"../components/formikcontrol/FormikField\";\r\nimport Fileuploadbutton from '../components/button/Fileuploadbutton'\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { AlertTitle } from '@material-ui/lab';\r\nimport { addProductwithApiRequest, saverequestProductwithApiRequest } from './api/productapi.js';\r\nconst creatorSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .required(\"Title is should not be empty\"),\r\n    description: Yup.string()\r\n        .required(\"Description is should not be empty\"),\r\n    rights: Yup.string()\r\n        .required(\"Rights is should not be empty\"),\r\n    castncrew: Yup.string()\r\n        .required(\"CastnCrew is should not be empty\"),\r\n    price: Yup.number()\r\n        .required(\"Price is should not be empty\"),\r\n    // createdat:Yup.date().required(\"Date Should not be empty\"),\r\n    // thumbnail:Yup.mixed()\r\n    // .required(\"Thumbnail is should not be empty\"),\r\n    // video:Yup.mixed()\r\n    // .required(\"Videofile is should not be empty\"),\r\n\r\n    // .matches(\r\n    //     /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n    //     \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\r\n    //   )\r\n});\r\n\r\nconst creatorequestschema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .required(\"Title is should not be empty\")\r\n})\r\n\r\nconst initialValues = {\r\n    title: \"\",\r\n    description: \"\",\r\n    rights: \"\",\r\n    castncrew: \"\",\r\n    price: 0\r\n};\r\nconst initialcreatorValues = {\r\n    title: \"\"\r\n\r\n};\r\nconst ContentRequest = (props) => {\r\n    // const [fields, setFields] = React.useState([{ label: 'Cost' }])\r\n    // const [selectFields] = React.useState([{ label: 'SuperAdmin', value: 'superuser' }, { label: 'Admin', value: 'Author' }, { label: 'User', value: 'user' }])\r\n    // const selectcategoryFields = [{ label: 'Creator', value: 'creator' }, { label: 'Producer', value: 'Producer' }, { label: 'Hybrid', value: 'hybrid' }, { label: 'None of the above', value: 'none' }]\r\n    // const [requestfields, setRequestfields] = React.useState([{ label: 'Title' }, { label: 'Description' }, { label: 'Thumbnail' }, { label: 'Video File' }, { label: 'Rights Details' }, { label: 'Cast and Crew' }, { label: 'Cost of the project' }, { label: 'Date of Creation' }, { label: 'Cost' }])\r\n    // const [issubmitting, setIssubmitting] = React.useState(false);\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [alertseverity, setAlertseverity] = React.useState('success')\r\n    const [productmessage, setProductmessage] = React.useState('')\r\n\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n    const [selectedCategory, setSelectedCategory] = React.useState('');\r\n\r\n    const [authortype, setAuthortype] = React.useState('creator')\r\n    const [selectedfile, setSelectedfile] = React.useState({\r\n        thumbnail: '',\r\n        thumbnail1: '',\r\n        thumbnail2: '',\r\n        thumbnail3: '',\r\n        video: ''\r\n    });\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const response = useSelector((state) => state.productSave);\r\n    const userresponse = useSelector((state) => state.profileops.profile);\r\n\r\n    const onCreatorrequestSave = async (values) => {\r\n        const history = props.history\r\n\r\n        const finvalues = {\r\n            ...values,\r\n            author_type: 'producer',\r\n            category: selectedCategory\r\n\r\n        }\r\n\r\n        // return await dispatch(\r\n        //     requestProduct(\r\n        //         finvalues,\r\n        //         history\r\n        //     )\r\n        // );\r\n\r\n    };\r\n\r\n    const onCreatorrequestProducerSave = async (values) => {\r\n\r\n        const history = props.history\r\n\r\n        const finvalues = {\r\n            ...values,\r\n            author_type: 'producer',\r\n            category: selectedCategory\r\n\r\n        }\r\n        const saverequestProductResponse = await saverequestProductwithApiRequest(finvalues)\r\n\r\n        // return dispatch(\r\n        //     requestProduct(\r\n        //         finvalues,\r\n        //         history\r\n        //     )\r\n        // );\r\n\r\n        if (saverequestProductResponse === 200) {\r\n\r\n            setProductmessage(\"Successfully request has been sent.\")\r\n            setOpen(true);\r\n            setAlertseverity('success')\r\n\r\n        } else {\r\n            setProductmessage(\"Something is went wrong\")\r\n            setOpen(true);\r\n            setAlertseverity('success')\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const onProductSave = async (values) => {\r\n\r\n\r\n        console.log('frontend', values)\r\n\r\n        const finvalues = {\r\n            ...values, video: selectedfile.video,\r\n            thumbnail: selectedfile.thumbnail,\r\n            thumbnail1: selectedfile.thumbnail1,\r\n            thumbnail2: selectedfile.thumbnail2,\r\n            thumbnail3: selectedfile.thumbnail3,\r\n            category: selectedCategory,\r\n            createdat: selectedDate\r\n        };\r\n\r\n        const saveProductResponse = await addProductwithApiRequest(finvalues)\r\n\r\n        if (saveProductResponse === 200) {\r\n\r\n            setProductmessage(\"Successfully Created\")\r\n            setOpen(true);\r\n            setAlertseverity('success')\r\n\r\n        } else {\r\n            setProductmessage(\"Something is went wrong\")\r\n            setOpen(true);\r\n            setAlertseverity('success')\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n        console.log(date)\r\n    };\r\n\r\n    // SnackBar\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const handlecategoryChange = (e) => {\r\n        setSelectedCategory(e.target.value)\r\n\r\n    }\r\n\r\n\r\n    const handlefileChange = (e) => {\r\n        setSelectedfile({\r\n            ...selectedfile,\r\n            [e.target.id]: e.target.files[0]\r\n        })\r\n        console.log(e.target.files[0])\r\n\r\n    }\r\n\r\n\r\n\r\n    const vertical = \"top\"\r\n    const horizontal = \"right\"\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar anchorOrigin={{ vertical, horizontal }} open={open} autoHideDuration={4000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={alertseverity}>\r\n                    {productmessage}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            {userresponse.content == \"creator\" && !userresponse.user_ptr.is_superuser ?\r\n                <Grid container spacing={1}>\r\n\r\n                    <Grid item md={6} sm={12} xs={12}>\r\n                        <Card>\r\n                            <Box p={1}>\r\n                                <Typography>\r\n                                    Requirements (Seller)\r\n                   </Typography>\r\n                            </Box>\r\n                            <Box p={2}>\r\n                                <Formik\r\n                                    initialValues={initialcreatorValues}\r\n                                    onSubmit={onCreatorrequestSave}\r\n                                    validationSchema={creatorequestschema}\r\n                                >\r\n                                    {({ dirty, isValid }) => {\r\n                                        return (\r\n                                            <Form>\r\n                                                <FormikField\r\n                                                    name=\"title\"\r\n                                                    label=\"title\"\r\n                                                    type=\"text\"\r\n                                                    required\r\n                                                    textvariant=\"outlined\"\r\n                                                />\r\n                                                <Box style={{ marginLeft: '-1%' }}>\r\n                                                    <CustomizedSelect\r\n                                                        fieldname={'Type'}\r\n                                                        label=\"category\"\r\n                                                        handlecategoryChange={handlecategoryChange}\r\n                                                        selectedCategory={selectedCategory}\r\n                                                    />\r\n                                                </Box>\r\n                                                <Box pl={1} pt={2}>\r\n                                                    <Button\r\n                                                        disabled={!dirty || !isValid}\r\n                                                        type=\"submit\" color=\"primary\" variant=\"contained\">Submit</Button>\r\n                                                </Box>\r\n\r\n                                            </Form>\r\n                                        );\r\n                                    }}\r\n                                </Formik>\r\n                            </Box>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item md={6} sm={12} xs={12}>\r\n                        <Card>\r\n                            <Box p={1}>\r\n                                <Typography>\r\n                                    Submit Content (Seller)\r\n                   </Typography>\r\n                            </Box>\r\n                            <Box p={2}>\r\n                                <Formik\r\n                                    initialValues={initialValues}\r\n                                    onSubmit={onProductSave}\r\n                                    validationSchema={creatorSchema}\r\n                                >\r\n                                    {({ dirty, isValid }) => {\r\n                                        return (\r\n\r\n                                            <Form>\r\n                                                <Grid item md={12} sm={12} lg={12} spacing={2}>\r\n                                                    <FormikField\r\n                                                        name=\"title\"\r\n                                                        label=\"title\"\r\n                                                        type=\"text\"\r\n                                                        required\r\n                                                        textvariant=\"outlined\"\r\n                                                    /><br></br>\r\n                                                    <FormikField\r\n                                                        name=\"description\"\r\n                                                        label=\"description\"\r\n                                                        type=\"text\"\r\n                                                        required\r\n                                                        textvariant=\"outlined\"\r\n                                                    /><br></br>\r\n                                                    <FormikField\r\n                                                        name=\"rights\"\r\n                                                        label=\"rights\"\r\n                                                        type=\"text\"\r\n                                                        required\r\n                                                        textvariant=\"outlined\"\r\n                                                        style={{ backgroundColor: \"#fff\" }}\r\n\r\n\r\n                                                    /><br></br>\r\n                                                    <FormikField\r\n                                                        name=\"castncrew\"\r\n                                                        label=\"castncrew\"\r\n                                                        type=\"text\"\r\n                                                        required\r\n                                                        textvariant=\"outlined\"\r\n                                                    /><br></br>\r\n                                                    <FormikField\r\n                                                        name=\"price\"\r\n                                                        label=\"price\"\r\n                                                        type=\"text\"\r\n                                                        required\r\n                                                        textvariant=\"outlined\"\r\n                                                    /><br></br>\r\n                                                    {/* <Input type=\"file\" id=\"thumbnail\" name=\"thumbnail\" onChange={handlefileChange}></Input>\r\n                                                 <Input type=\"file\" id=\"video\" name=\"video\" onChange={handlefileChange}></Input> */}\r\n\r\n\r\n                                                    <div>\r\n                                                        <input\r\n                                                            accept=\"image/*\"\r\n                                                            style={{ display: 'none' }}\r\n                                                            id=\"thumbnail\"\r\n                                                            name=\"thumbnail\"\r\n                                                            type=\"file\"\r\n                                                            onChange={handlefileChange}\r\n                                                        />\r\n                                                        <label htmlFor=\"thumbnail\">\r\n                                                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                                                Upload Thumbnail &nbsp;<BackupIcon />\r\n                                                            </Button>\r\n                                                        </label>\r\n                                                        {JSON.stringify(selectedfile.thumbnail.name)}\r\n                                                    </div>\r\n\r\n                                                    <br></br>\r\n                                                    <div>\r\n                                                        <Input\r\n                                                            accept=\"video/*\"\r\n                                                            style={{ display: 'none' }}\r\n                                                            id=\"video\"\r\n                                                            name=\"video\"\r\n                                                            type=\"file\"\r\n                                                            onChange={handlefileChange}\r\n                                                        />\r\n                                                        <label htmlFor=\"video\">\r\n                                                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                                                Upload Video &nbsp;<BackupIcon />\r\n                                                            </Button>\r\n                                                        </label>\r\n                                                        {JSON.stringify(selectedfile.video.name)}\r\n                                                    </div>\r\n                                                    <br></br>\r\n                                                    <div>\r\n                                                        <input\r\n                                                            accept=\"image/*\"\r\n                                                            style={{ display: 'none' }}\r\n                                                            id=\"thumbnail1\"\r\n                                                            name=\"thumbnail1\"\r\n                                                            type=\"file\"\r\n                                                            onChange={handlefileChange}\r\n                                                        />\r\n                                                        <label htmlFor=\"thumbnail1\">\r\n                                                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                                                Upload Banner1 &nbsp;<BackupIcon />\r\n                                                            </Button>\r\n                                                        </label>\r\n                                                        {JSON.stringify(selectedfile.thumbnail1.name)}\r\n                                                    </div>\r\n\r\n                                                    <br></br>\r\n\r\n                                                    <div>\r\n                                                        <input\r\n                                                            accept=\"image/*\"\r\n                                                            style={{ display: 'none' }}\r\n                                                            id=\"thumbnail2\"\r\n                                                            name=\"thumbnail2\"\r\n                                                            type=\"file\"\r\n                                                            onChange={handlefileChange}\r\n                                                        />\r\n                                                        <label htmlFor=\"thumbnail2\">\r\n                                                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                                                Upload Banner2 &nbsp;<BackupIcon />\r\n                                                            </Button>\r\n                                                        </label>\r\n                                                        {JSON.stringify(selectedfile.thumbnail2.name)}\r\n                                                    </div>\r\n\r\n                                                    <br></br>\r\n                                                    <div>\r\n                                                        <input\r\n                                                            accept=\"image/*\"\r\n                                                            style={{ display: 'none' }}\r\n                                                            id=\"thumbnail3\"\r\n                                                            name=\"thumbnail3\"\r\n                                                            type=\"file\"\r\n                                                            onChange={handlefileChange}\r\n                                                        />\r\n                                                        <label htmlFor=\"thumbnail3\">\r\n                                                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                                                Upload Banner3 &nbsp;<BackupIcon />\r\n                                                            </Button>\r\n                                                        </label>\r\n                                                        {JSON.stringify(selectedfile.thumbnail3.name)}\r\n                                                    </div>\r\n\r\n                                                    <br></br>\r\n                                                    <Box style={{ marginLeft: '-1%' }}>\r\n                                                        <CustomizedSelect\r\n                                                            fieldname={'Type'}\r\n                                                            label=\"category\"\r\n                                                            handlecategoryChange={handlecategoryChange}\r\n                                                            selectedCategory={selectedCategory}\r\n                                                        />\r\n                                                    </Box>\r\n\r\n                                                    {/* <CustomizedDate\r\n                                                label=\"createdat\"\r\n                                                handleDateChange={handleDateChange}\r\n                                                selectedDate={selectedDate}\r\n                                            /> */}\r\n\r\n                                                    <Box pl={1} pt={2}>\r\n                                                        <Button type=\"submit\" color=\"primary\" variant=\"contained\"\r\n                                                            disabled={!dirty || !isValid}\r\n                                                        >Submit</Button>\r\n                                                    </Box>\r\n\r\n\r\n                                                </Grid>\r\n                                            </Form>\r\n                                        );\r\n                                    }}\r\n                                </Formik>\r\n                            </Box>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n\r\n                : userresponse.content == \"producer\" && !userresponse.user_ptr.is_superuser ?\r\n                    <Grid container spacing={1}>\r\n\r\n                        <Grid item md={6} sm={12} xs={12}>\r\n                            <Card>\r\n                                <Box p={1}>\r\n                                    <Typography>\r\n                                        Requirements (Buyer)\r\n                   </Typography>\r\n                                </Box>\r\n                                <Box p={2}>\r\n                                    <Formik\r\n                                        initialValues={initialcreatorValues}\r\n                                        onSubmit={onCreatorrequestProducerSave}\r\n                                        validationSchema={creatorequestschema}\r\n                                    >\r\n                                        {({ dirty, isValid }) => {\r\n                                            return (\r\n                                                <Form>\r\n                                                    <FormikField\r\n                                                        name=\"title\"\r\n                                                        label=\"title\"\r\n                                                        type=\"text\"\r\n                                                        required\r\n                                                        textvariant=\"outlined\"\r\n                                                    />\r\n                                                    <CustomizedSelect\r\n                                                        fieldname={'Type'}\r\n                                                        label=\"category\"\r\n                                                        handlecategoryChange={handlecategoryChange}\r\n                                                        selectedCategory={selectedCategory}\r\n                                                    />\r\n                                                    <Box pl={1} pt={2}>\r\n                                                        <Button\r\n                                                            disabled={!dirty || !isValid}\r\n                                                            type=\"submit\" color=\"primary\" variant=\"contained\">Submit</Button>\r\n                                                    </Box>\r\n\r\n                                                </Form>\r\n                                            );\r\n                                        }}\r\n                                    </Formik>\r\n                                </Box>\r\n                            </Card>\r\n                        </Grid>\r\n\r\n\r\n                    </Grid>\r\n\r\n\r\n                    : <Alert severity=\"info\">\r\n                        <AlertTitle>Denied!</AlertTitle>\r\n                            User should either creator or producer — <strong>Login with Buyer or Seller!</strong>\r\n                    </Alert>}\r\n\r\n            <br></br>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContentRequest\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\TableMaterial\\TableMaterial.js",["692","693","694"],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\ModelDialogue.js",["695","696","697","698","699"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport CustomizedInputs from './CustomizedInputs';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   \r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  \r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function ModelDialogue() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [fields, setFields] = React.useState([{ label: 'Cost' }])\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Add to library\r\n      </Button>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Sound\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n       \r\n<CustomizedInputs fields={fields} />\r\n\r\n        \r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n",["700","701"],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\CustomizedInputs.js",["702","703","704","705","706","707","708","709","710","711","712"],"import React from 'react';\r\nimport {\r\n  fade,\r\n  ThemeProvider,\r\n  withStyles,\r\n  makeStyles,\r\n  createMuiTheme,\r\n} from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Box } from '@material-ui/core';\r\nimport { ErrorMessage, Field } from \"formik\";\r\nimport FormikField from '../formikcontrol/FormikField';\r\n// const CssTextField = withStyles({\r\n//   root: {\r\n//     '& label.Mui-focused': {\r\n//       color: 'green',\r\n//     },\r\n//     '& .MuiInput-underline:after': {\r\n//       borderBottomColor: 'green',\r\n//     },\r\n//     '& .MuiOutlinedInput-root': {\r\n//       '& fieldset': {\r\n//         borderColor: 'red',\r\n//       },\r\n//       '&:hover fieldset': {\r\n//         borderColor: 'yellow',\r\n//       },\r\n//       '&.Mui-focused fieldset': {\r\n//         borderColor: 'green',\r\n//       },\r\n//     },\r\n//   },\r\n// })(TextField);\r\n\r\n// const BootstrapInput = withStyles((theme) => ({\r\n//   root: {\r\n//     'label + &': {\r\n//       marginTop: theme.spacing(3),\r\n//     },\r\n//   },\r\n//   input: {\r\n//     borderRadius: 4,\r\n//     position: 'relative',\r\n//     backgroundColor: theme.palette.common.white,\r\n//     border: '1px solid #ced4da',\r\n//     fontSize: 16,\r\n//     width: 'auto',\r\n//     padding: '10px 12px',\r\n//     transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n//     // Use the system font instead of the default Roboto font.\r\n//     fontFamily: [\r\n//       '-apple-system',\r\n//       'BlinkMacSystemFont',\r\n//       '\"Segoe UI\"',\r\n//       'Roboto',\r\n//       '\"Helvetica Neue\"',\r\n//       'Arial',\r\n//       'sans-serif',\r\n//       '\"Apple Color Emoji\"',\r\n//       '\"Segoe UI Emoji\"',\r\n//       '\"Segoe UI Symbol\"',\r\n//     ].join(','),\r\n//     '&:focus': {\r\n//       boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n//       borderColor: theme.palette.primary.main,\r\n//     },\r\n//   },\r\n// }))(InputBase);\r\n\r\nconst useStylesReddit = makeStyles((theme) => ({\r\n  root: {\r\n    flex:1,\r\n    position:'relative',    \r\n    border: '1px solid #e2e2e1',\r\n    overflow: 'hidden',\r\n    borderRadius: 4,\r\n    backgroundColor: '#fcfcfb',\r\n    marginBottom:\"2%\",\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    '&:hover': {\r\n      backgroundColor: '#fff',\r\n    },\r\n    '&$focused': {\r\n      backgroundColor: '#fff',\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  focused: {},\r\n}));\r\n\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit();\r\n  // const { name:\"formik\", label:\"formiklable\", type : \"text\", required : false, textvariant:false} = props\r\n  \r\n\r\n  return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    alignContent:'center',\r\n    flexWrap: 'wrap',\r\n    \r\n    \r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n// const ValidationTextField = withStyles({\r\n//   root: {\r\n//     '& input:valid + fieldset': {\r\n//       borderColor: 'green',\r\n//       borderWidth: 2,\r\n//     },\r\n//     '& input:invalid + fieldset': {\r\n//       borderColor: 'red',\r\n//       borderWidth: 2,\r\n//     },\r\n//     '& input:valid:focus + fieldset': {\r\n//       borderLeftWidth: 6,\r\n//       padding: '4px !important', // override inline-style\r\n//     },\r\n//   },\r\n// })(TextField);\r\n\r\n// const theme = createMuiTheme({\r\n//   palette: {\r\n//     primary: green,\r\n//   },\r\n// });\r\n\r\nexport default function CustomizedInputs(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root} noValidate style={{marginTop:\"1%\"}}>\r\n     \r\n     \r\n       \r\n   \r\n    <RedditTextField\r\n      variant='filled'\r\n      required={true}\r\n      autoComplete=\"off\"\r\n      label={props.label}\r\n      name={props.label}\r\n      fullWidth\r\n      type={'text'}\r\n      helperText={<ErrorMessage name={'name'} style={{color:'red'}} />}\r\n /> \r\n\r\n\r\n      \r\n    </Box>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\CustomizedSelect.js",["713"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n  \r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 220,\r\n    // backgroundColor:grey[50],\r\n    // border:'1px solid gray',\r\n    '& .MuiInputLabel-shrink':{\r\n        top:5,\r\n        left:10\r\n    }\r\n    \r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function CustomizedSelect(props) {\r\n  const classes = useStyles();\r\n  \r\n\r\n  return (\r\n    <div>\r\n     \r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"grouped-select\">{props.fieldname}</InputLabel>\r\n        <Select defaultValue=\"\" id=\"grouped-select\" value={props.selectedCategory} variant=\"outlined\" name={props.label} onChange={props.handlecategoryChange}>\r\n          <MenuItem value=\"\">\r\n            <em>Choose Option</em>\r\n          </MenuItem>\r\n          <ListSubheader>Content Type</ListSubheader>\r\n          <MenuItem value={1}>General Video Content</MenuItem>\r\n          <MenuItem value={2}>Youtube Content</MenuItem>\r\n          <MenuItem value={3}>Web series content</MenuItem>\r\n          <MenuItem value={4}>Ott content</MenuItem>\r\n          <MenuItem value={5}>Movie content</MenuItem>\r\n          <MenuItem value={6}>Shortform video content</MenuItem>\r\n          <MenuItem value={7}>Longform video content</MenuItem>    \r\n          <MenuItem value={8}>Music Content</MenuItem>\r\n          <MenuItem value={9}>Others</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\CustomizedDate.js",["714","715","716"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Box } from '@material-ui/core';\r\n\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n  DatePicker,\r\n} from '@material-ui/pickers';\r\n// import { DatePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nconst DatePickers = (props) => {\r\n  const classes = useStyles();\r\n\r\n  \r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n    <Box className={classes.container} pt={2}>\r\n      <KeyboardDatePicker\r\n          disableToolbar\r\n          name={props.label}\r\n          variant=\"inline\"\r\n          format=\"MM/dd/yyyy\"\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          label={props.label}\r\n          value={props.selectedDate}\r\n          onChange={props.handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n      \r\n      \r\n    </Box>\r\n   \r\n    \r\n    </MuiPickersUtilsProvider>\r\n   \r\n  );\r\n}\r\nexport default DatePickers;","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\firebase.utils.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\UsersList.js",["717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736"],"import { Box, Button, Card, FormControl, Grid, InputLabel, MenuItem, Paper, TextareaAutosize, TextField, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nimport TableMaterialuser from '../components/TableMaterial/TableMaterialuser'\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\r\n\r\nimport Select from '@material-ui/core/Select';\r\nimport { grey } from '@material-ui/core/colors'\r\n\r\nimport ChipInput from 'material-ui-chip-input'\r\nimport { getUsernameChips } from './api/authapi';\r\nimport { getProductChips, ProductUserSave, ProductGroupSave } from './api/cardactionsapi'\r\nimport UserlistIcon from '../components/IconList/UserlistIcon';\r\nimport Producticonlist from 'components/IconList/Producticonlist';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n\r\n        \"& .MuiInputBase-input\": {\r\n            backgroundColor: grey[100],\r\n            outline: \"none\",\r\n            borderRadius: 5,\r\n            border: `1px solid ${grey[500]}`,\r\n        },\r\n        \"& .MuiInputLabel-formControl\": {\r\n            color: grey[800],\r\n\r\n        },\r\n        \"& .Mui-disabled\": {\r\n            backgroundColor: theme.palette.primary.main,\r\n            color: \"#fff\",\r\n            cursor: \"no-drop\",\r\n        },\r\n    },\r\n    chiproot: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        padding: theme.spacing(0.5),\r\n        margin: 0,\r\n        marginTop: 20\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5),\r\n    },\r\n\r\n\r\n}));\r\n\r\nconst UsersList = () => {\r\n\r\n    const calsses = useStyles();\r\n    const [usercategory, setUsercategory] = React.useState('creator')\r\n    const [usertype, setUsertype] = React.useState('user')\r\n    const [productlistvalue, setProductlistvalue] = React.useState('')\r\n    const [userlist, setUserlist] = React.useState('')\r\n    const [usergroup, setUsergroup] = React.useState('')\r\n    const [open, setOpen] = React.useState(false)\r\n    const [usercreatedmessage, setUsercreatedmessage] = React.useState('')\r\n    const [alertseverity, setAlertseverity] = React.useState('success')\r\n    const [userslistdata, setUserslistdata] = React.useState([])\r\n    const [usersgroupdata, setUsersgroupdata] = React.useState([])\r\n    const [productlistdata, setProductlistdata] = React.useState([])\r\n\r\n    const [chipuser, setChipuser] = React.useState([])\r\n    const [chipproduct, setChipproduct] = React.useState([])\r\n\r\n\r\n    const [uservalues, setUservalues] = React.useState({\r\n        username: '',\r\n        password: '',\r\n        phone: ''\r\n\r\n    })\r\n\r\n    const [chipData, setChipData] = React.useState([\r\n        // { key: 0, label: 'Angular' },\r\n\r\n        // 'angular',\r\n        // 'jquery'\r\n    ]);\r\n    const [chipDataProduct, setChipDataProduct] = React.useState([]);\r\n\r\n\r\n\r\n    // \r\n    // SnackBar\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    // \r\n\r\n    const handleDeleteChip = (chipToDelete, index) => {\r\n\r\n        setChipData((chips) => chips.filter((chip, chipindex) => chipindex !== index));\r\n\r\n    };\r\n\r\n    const handleDeleteChipProduct = (chipToDelete, index) => {\r\n\r\n        setChipDataProduct((chips) => chips.filter((chip, chipindex) => chipindex !== index));\r\n\r\n    };\r\n\r\n\r\n    // const url = \"http://127.0.0.1:8000/\"\r\n    const url = 'https://app.contentbond.com/'\r\n\r\n\r\n    // Users\r\n\r\n    const getalluserss = async () => {\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.get(url + 'auth/admin/saveuser/', config).then(res => {\r\n            if (!res.data.error) {\r\n\r\n                setUserslistdata(res.data.GETmethodData.splice(5, 30))\r\n\r\n\r\n            }\r\n        }).catch(err => {\r\n\r\n            alert('myalert', err.message)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    const getproductlist = async () => {\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.get(url + 'admin/getProductsall/', config).then(res => {\r\n\r\n            if (res.data.status == 200) {\r\n\r\n                setProductlistdata(res.data.obs)\r\n\r\n\r\n            }\r\n        }).catch(err => {\r\n\r\n            alert(err.message)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    // Users\r\n\r\n    const getallgroups = async () => {\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.get(url + 'admin/getallgroups/', config).then(res => {\r\n            if (!res.data.error) {\r\n\r\n                setUsersgroupdata(res.data.groups)\r\n\r\n\r\n            }\r\n        }).catch(err => {\r\n\r\n            alert(err.message)\r\n\r\n        })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        getalluserss()\r\n        getallgroups()\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n    React.useEffect(() => {\r\n\r\n        getproductlist()\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n\r\n    // Users\r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        let form_data = new FormData()\r\n        form_data.append('username', uservalues.username)\r\n        form_data.append('password', uservalues.password)\r\n        form_data.append('phone', uservalues.phone)\r\n        form_data.append('usertype', usertype)\r\n        form_data.append('usercategory', usercategory)\r\n        await axios.post(url + 'auth/admin/saveuser/', form_data, config).then(res => {\r\n            if (!res.data.error) {\r\n                setUsercreatedmessage(\"User Created Successfully\")\r\n                setOpen(true)\r\n                setAlertseverity('success')\r\n\r\n\r\n            }\r\n        }).catch(err => {\r\n\r\n            setUsercreatedmessage(\"User Creation is Failed\")\r\n            setOpen(true);\r\n            setAlertseverity('error')\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    // Products\r\n    \r\n    const AssignhandleSubmit = async () => {\r\n\r\n        const u = await chipuser.filter((val, index) => chipData.includes(val.username))\r\n        const p = await chipproduct.filter((val, index) => chipDataProduct.includes(val.title))\r\n        // console.log(p.map(val => val.id))\r\n        // console.log(u.map(val => val.id))\r\n        var response = await ProductUserSave({ userdata: u.map(val => val.id), productdata: p.map(val => val.id), action: 'saveuserproducts' })\r\n        if (response.status == 200){\r\n            alert(response.message)\r\n        }\r\n        else if(response.status == 400){\r\n            alert(response.message)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const DeAssignhandleSubmit = async () => {\r\n\r\n        const u = await chipuser.filter((val, index) => chipData.includes(val.username))\r\n        const p = await chipproduct.filter((val, index) => chipDataProduct.includes(val.title))\r\n        // console.log(p.map(val => val.id))\r\n        // console.log(u.map(val => val.id))\r\n        var response = await ProductUserSave({ userdata: u.map(val => val.id), productdata: p.map(val => val.id), action: 'removeuserproducts' })\r\n        if (response.status == 200){\r\n            alert(response.message)\r\n        }\r\n        else if(response.status == 400){\r\n            alert(response.message)\r\n        }\r\n\r\n    }\r\n\r\n    const AssignhandleGroupSubmit = async () => {\r\n\r\n\r\n        const p = await chipproduct.filter((val, index) => chipDataProduct.includes(val.title))\r\n\r\n        var response = await ProductGroupSave({ groupdata: usergroup, productdata: p.map(val => val.id), action: 'savegroupproducts' })\r\n\r\n    }\r\n\r\n    // End Products\r\n    const onhandleChangeusertype = (e) => {\r\n        setUsertype(e.target.value)\r\n\r\n    }\r\n    const onhandleChangecategory = (e) => {\r\n        setUsercategory(e.target.value)\r\n    }\r\n\r\n    const onhandleChange = (e) => {\r\n        setUservalues({\r\n            ...uservalues,\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    const userstatusUpdate = (status) => {\r\n        if (status == \"success\") {\r\n            setUsercreatedmessage(\"User Changed Successfully\")\r\n            setOpen(true)\r\n            setAlertseverity('success')\r\n\r\n        } else {\r\n            setUsercreatedmessage(\"Something is went wrong\")\r\n            setOpen(true)\r\n            setAlertseverity('error')\r\n        }\r\n    }\r\n\r\n    // Chips\r\n\r\n    const handleAddChip = (chips) => {\r\n\r\n        chipData.push(chips)\r\n    }\r\n    const handleAddChipProduct = (chips) => {\r\n\r\n        chipDataProduct.push(chips)\r\n    }\r\n\r\n    const onUpdateInput = async (chip) => {\r\n\r\n        var response = await getUsernameChips({ value: chip.target.value, action: 'Getusername' })\r\n        setChipuser(response.users)\r\n\r\n\r\n\r\n    }\r\n\r\n    const onUpdateInputProduct = async (chip) => {\r\n\r\n        var response = await getProductChips({ value: chip.target.value, action: 'getproduct' })\r\n        setChipproduct(response.products)\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            const cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                const cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n    const vertical = \"top\"\r\n    const horizontal = \"right\"\r\n    return (\r\n        <div>\r\n            {/* <ModelDialogue /> */}\r\n\r\n            <Snackbar anchorOrigin={{ vertical, horizontal }} open={open} autoHideDuration={4000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={alertseverity}>\r\n                    {usercreatedmessage}\r\n                </Alert>\r\n            </Snackbar>\r\n            <Grid container style={{ marginBottom: '2%' }} spacing={2}>\r\n                <Grid item md={6} xs={12} sm={12}>\r\n\r\n                    <Card>\r\n                        <Box p={1}>\r\n                            <Typography>\r\n                                Create User\r\n                            </Typography>\r\n                        </Box>\r\n\r\n                        <Box p={2} className={calsses.root}>\r\n\r\n\r\n                            <TextField id=\"username\" label=\"Username\" variant=\"outlined\"\r\n                                InputLabelProps={{\r\n                                    shrink: uservalues.username ? true : false\r\n                                }}\r\n\r\n                                value={uservalues.username}\r\n                                onChange={onhandleChange}\r\n                                fullWidth\r\n                            />\r\n\r\n\r\n                            <br></br>\r\n                            <TextField id=\"password\" label=\"Password\" variant=\"outlined\"\r\n                                InputLabelProps={{\r\n                                    shrink: uservalues.password ? true : false\r\n                                }}\r\n\r\n                                value={uservalues.password}\r\n                                onChange={onhandleChange}\r\n                                fullWidth\r\n                                style={{ marginTop: '30px' }}\r\n                            />\r\n\r\n\r\n                            <br></br>\r\n\r\n                            <TextField id=\"phone\" label=\"Phone\" variant=\"outlined\"\r\n                                InputLabelProps={{\r\n                                    shrink: uservalues.phone ? true : false\r\n                                }}\r\n\r\n                                value={uservalues.phone}\r\n                                onChange={onhandleChange}\r\n                                fullWidth\r\n                                style={{ marginTop: '30px' }}\r\n                            />\r\n                            <br></br>\r\n\r\n\r\n                            <FormControl fullWidth>\r\n                                <InputLabel value={usertype} id=\"usertype\">Type</InputLabel>\r\n\r\n                                <Select\r\n                                    labelId=\"usertype\"\r\n                                    id=\"usertype\"\r\n                                    variant=\"outlined\"\r\n                                    name=\"usertype\"\r\n                                    value={usertype}\r\n                                    style={{ marginTop: '30px' }}\r\n                                    onChange={onhandleChangeusertype}\r\n\r\n\r\n                                >\r\n                                    <MenuItem value={\"\"}>Choose Type of User</MenuItem>\r\n                                    <MenuItem value={\"user\"}>User</MenuItem>\r\n                                    <MenuItem value={\"admin\"}>Admin</MenuItem>\r\n                                    <MenuItem value={\"superuser\"}>SuperUser</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n\r\n\r\n                            <br></br>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id=\"category\">Category</InputLabel>\r\n                                <Select\r\n                                    labelId=\"category\"\r\n                                    id=\"category\"\r\n                                    variant=\"outlined\"\r\n                                    name=\"category\"\r\n                                    style={{ marginTop: '30px' }}\r\n                                    value={usercategory}\r\n                                    onChange={onhandleChangecategory}\r\n\r\n\r\n\r\n                                >\r\n                                    <MenuItem value={\"\"}>Choose Category of User</MenuItem>\r\n                                    <MenuItem value={\"producer\"}>Seller</MenuItem>\r\n                                    <MenuItem value={\"creator\"}>Buyer</MenuItem>\r\n\r\n                                </Select>\r\n                            </FormControl>\r\n                            <br></br>\r\n\r\n\r\n                            <Box pl={1} pt={2}>\r\n                                <Button\r\n\r\n                                    type=\"button\" onClick={handleSubmit} color=\"primary\" variant=\"contained\">Create</Button>\r\n                            </Box>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </Box>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item md={6} xs={12} sm={12}>\r\n                    <Card style={{ height: '100%' }}>\r\n                        <Box p={1}>\r\n                            <Typography>\r\n                                Create Assign\r\n                            </Typography>\r\n                        </Box>\r\n\r\n                        <Box p={2} className={calsses.root}>\r\n\r\n\r\n\r\n\r\n                            <FormControl fullWidth>\r\n                                {/* <InputLabel id=\"userlist\">Users</InputLabel>\r\n\r\n                                <Select\r\n                                    labelId=\"userlist\"\r\n                                    id=\"userlist\"\r\n                                    variant=\"outlined\"\r\n                                    name=\"userlist\"\r\n                                    value={userlist}\r\n                                    // style={{marginTop:'30px'}}\r\n                                    onChange={(e) => setUserlist(e.target.value)}\r\n\r\n\r\n                                >\r\n                                    <MenuItem value=\"\">Choose User</MenuItem>\r\n                                    {userslistdata.map((val, index) => {\r\n                                        return <MenuItem key={val.id} value={val.id}>{val.username}</MenuItem>\r\n                                    })}\r\n                                </Select> */}\r\n\r\n                                {/* <TextareaAutosize aria-label=\"empty textarea\" placeholder=\"Empty\" /> */}\r\n                            </FormControl>\r\n                            <br></br>\r\n                            Users:\r\n                            <Paper component=\"ul\" className={calsses.chiproot}>\r\n\r\n                                <ChipInput\r\n                                    onUpdateInput={(chip) => onUpdateInput(chip)}\r\n                                    disableUnderline={false}\r\n                                    variant=\"outlined\"\r\n                                    value={chipData}\r\n                                    onAdd={(chip) => handleAddChip(chip)}\r\n                                    onDelete={(chip, index) => handleDeleteChip(chip, index)}\r\n                                />\r\n                                {/* {chipuser.map((val,index) => {\r\n                                return <p key={index}>{JSON.stringify(val.username)}</p>\r\n                            })} */}\r\n                                <Box pt={3} display=\"flex\" justifyContent=\"space-between\">\r\n                                    <UserlistIcon chipuser={chipuser} chipdata={chipData} handleAddChip={handleAddChip} handleDeleteChip={handleDeleteChip} />\r\n                                </Box>\r\n                                {/* {productlistdata.map((val, index) => {\r\n                                        return <MenuItem key={val.id} value={val.id}>{val.title}</MenuItem>\r\n                                    })} */}\r\n                            </Paper>\r\n\r\n\r\n                            <br></br>\r\n                            Products:\r\n                            <Paper component=\"ul\" className={calsses.chiproot}>\r\n\r\n                                <ChipInput\r\n                                    onUpdateInput={(chip) => onUpdateInputProduct(chip)}\r\n                                    disableUnderline={false}\r\n                                    variant=\"outlined\"\r\n                                    value={chipDataProduct}\r\n                                    onAdd={(chip) => handleAddChipProduct(chip)}\r\n                                    onDelete={(chip, index) => handleDeleteChipProduct(chip, index)}\r\n                                />\r\n                                {/* {chipuser.map((val,index) => {\r\n                                return <p key={index}>{JSON.stringify(val.username)}</p>\r\n                                })} */}\r\n                                <Box pt={3} display=\"flex\" justifyContent=\"space-between\">\r\n                                    <Producticonlist chipuser={chipproduct} chipdata={chipDataProduct} handleAddChip={handleAddChipProduct} handleDeleteChip={handleDeleteChipProduct} />\r\n                                </Box>\r\n                                {/* {productlistdata.map((val, index) => {\r\n                                        return <MenuItem key={val.id} value={val.id}>{val.title}</MenuItem>\r\n                                    })} */}\r\n                            </Paper>\r\n                            <br></br>\r\n                            {/* <Paper component=\"ul\" className={calsses.chiproot}>\r\n                                {chipData.map((data) => {\r\n\r\n\r\n                                    return (\r\n                                        <li key={data.key}>\r\n                                            <Chip\r\n                                                icon={<TagFacesIcon />}\r\n                                                label={data.label}\r\n                                                onDelete={data.label === 'React' ? undefined : handleDelete(data)}\r\n                                                className={calsses.chip}\r\n                                            />\r\n                                        </li>\r\n                                    );\r\n                                })}\r\n                            </Paper> */}\r\n                            <br></br>\r\n\r\n\r\n                            <Box pl={1} pt={2}>\r\n                                <Button\r\n\r\n                                    type=\"button\" onClick={AssignhandleSubmit} color=\"primary\" variant=\"contained\">Assign Poroducts</Button>\r\n                                    &nbsp; \r\n\r\n                                    <Button type=\"button\" onClick={DeAssignhandleSubmit} color=\"primary\" variant=\"contained\">\r\n                                        DeAssign Poroducts\r\n                                    </Button>\r\n                                    &nbsp; \r\n                                    \r\n                                    \r\n                                    {/* <Button type=\"button\" onClick={AssignhandleGroupSubmit} color=\"primary\" variant=\"contained\">\r\n                                        Group Assign Poroducts\r\n                                    </Button> */}\r\n                            </Box>\r\n\r\n                            <br></br>\r\n\r\n\r\n                        </Box>\r\n\r\n                    </Card>\r\n\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item md={12} xs={12} sm={12}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"usergroup\">Groups</InputLabel>\r\n\r\n                        <Select\r\n                            labelId=\"usergroup\"\r\n                            id=\"usergroup\"\r\n                            variant=\"outlined\"\r\n                            name=\"usergroup\"\r\n                            value={usergroup}\r\n                            // style={{marginTop:'30px'}}\r\n                            onChange={(e) => setUsergroup(e.target.value)}\r\n\r\n\r\n                        >\r\n                            <MenuItem value=\"\">Choose Group</MenuItem>\r\n                            {usersgroupdata.map((val, index) => {\r\n                                return <MenuItem key={val.id} value={val.id}>{val.groupname}({val.rule})</MenuItem>\r\n                            })}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TableMaterialuser usergroup={usergroup} userstatusupdate={userstatusUpdate} />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersList\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\SelectFieldCustom\\SelectFieldCustom.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\TableMaterial\\TableMaterialuser.js",["737","738","739","740","741","742"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport axios from 'axios';\r\nimport ConfirmModel from '../ModelDialogue/ConfirmModel'\r\nimport UserEditModel from '../ModelDialogue/UserEditModel'\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\r\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\r\n\r\nimport * as authapi from '../../container/api/userapi'\r\n\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from 'react-router';\r\nfunction createData(id,role, category, name, email, created) {\r\n  return { id,role, category, name, email, created };\r\n}\r\n// const url = \"http://127.0.0.1:8000/\"\r\nconst url = 'https://app.contentbond.com/'\r\n\r\nconst getCookie = (name) => {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nconst getToken = () => {\r\n  \r\n  try{\r\n    var unparsedtoken = localStorage.getItem('access_token');\r\n    var parsedtoken = JSON.parse(unparsedtoken);\r\n    return parsedtoken.access_token\r\n\r\n  }catch{\r\n    return 'sdfsdfonfsdfsd'\r\n  }\r\n  \r\n}\r\nconst config = {\r\n  headers: {\r\n      'content-type': 'multipart/form-data',          \r\n      'X-CSRFToken': getCookie('csrftoken'),\r\n      'Authorization': 'Token '+getToken()\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const rows = [\r\n//   createData(1,'Admin', 'Producer',faker.name.findName(),faker.internet.email(), faker.date.future().toLocaleString()),\r\n//   createData(2,'User','Creator',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(3,'User','Hybrid',faker.name.findName(),faker.internet.email(),  faker.date.future().toLocaleString()),\r\n//   createData(4,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(5,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(6,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(7,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n  \r\n// ];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'role', numeric: false, disablePadding: true, label: 'Role' },\r\n  { id: 'category', numeric: false, disablePadding: false, label: 'Category' },\r\n  { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n  { id: 'email', numeric: false, disablePadding: false, label: 'Email' },\r\n  { id: 'is_active', numeric: false, disablePadding: false, label: 'Status' },\r\n  { id: 'created', numeric: false, disablePadding: false, label: 'Created' },\r\n  { id: 'group', numeric: false, disablePadding: false, label: 'Group' },\r\n  { id: 'id', numeric: false, disablePadding: false, label: 'Profile' },\r\n  \r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n \r\n\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            style={{fontWeight:800}}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          All Users\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <>\r\n \r\n        <Tooltip title=\"Activate\">\r\n          <IconButton aria-label=\"activate\" onClick={() =>props.handleuserClickActivateStatus('activate')}>\r\n            <Brightness1Icon />            \r\n          </IconButton>\r\n        </Tooltip>\r\n\r\n        <Tooltip title=\"Deactivate\">\r\n          <IconButton aria-label=\"delete\" onClick={() =>props.handleuserClickActivateStatus('deactivate')}>\r\n            <Brightness3Icon />            \r\n          </IconButton>\r\n        </Tooltip>\r\n\r\n        <Tooltip title=\"Edit\">\r\n          <IconButton aria-label=\"edit\" onClick={props.handleuserClickOpen}>\r\n            <CreateIcon />            \r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\" onClick={props.deleteUsersclick}>\r\n            <DeleteIcon />            \r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title=\"Assign\">\r\n          <IconButton aria-label=\"assign\" onClick={props.assignuserstogroupclick}>\r\n            <AssignmentIndIcon />            \r\n          </IconButton>\r\n        </Tooltip>\r\n        </>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\" onClick = {props.handleClickOpen}>\r\n            <FilterListIcon />            \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function TableMaterialuser(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [queryfromodel, setQueryfromodel] = React.useState('');\r\n  const history = useHistory()\r\n\r\n      // backend operations\r\n\r\n    const [rows,setRows] = React.useState([])\r\n    \r\n    const [modelopen, setModelopen] = React.useState(false);\r\n    const [usereditmodelopen, setUsereditmodelopen] = React.useState(false);\r\n\r\n    const [userupdateform,setUserupdateform] = React.useState({\r\n      role:'user',\r\n      category:'producer'\r\n    })\r\n\r\n    \r\n\r\n    const handleChangeeditForm = (e) => {\r\n      setUserupdateform({\r\n          ...userupdateform,\r\n          [e.target.name]:e.target.value\r\n      })\r\n  };\r\n    \r\n\r\n      const handleClickOpen = () => {\r\n        setModelopen(true);\r\n      };\r\n\r\n      const handleClose = () => {\r\n        setModelopen(false);\r\n      };\r\n\r\n\r\n      const handleuserClickOpen = (e) => {\r\n        \r\n        console.log(selected[0]);\r\n        if (selected.length > 1){\r\n           return alert('select one only')\r\n        }\r\n        var updated = rows.filter((val) => +val.id === +(selected[0]));\r\n        setUsereditmodelopen(true);\r\n        updated.map(val=> {\r\n          return setUserupdateform({\r\n            ...userupdateform,\r\n            role:val.is_staff? val.is_superuser? 'superuser':'admin':'user',\r\n            category:val.content?val.content:'creator'\r\n        })\r\n        })\r\n       \r\n\r\n      };\r\n\r\n      const handleuserClickActivateStatus = (status) => {\r\n        alert('Activate status : '+status)\r\n        const form_data = new FormData();\r\n        form_data.append('itemlist',selected)\r\n        form_data.append('status',status)\r\n        var statusbool = false\r\n        if(status == \"activate\"){\r\n          statusbool = true\r\n        }\r\n        \r\n        axios.post(url+'auth/useractiveordeactivate/',form_data,config).then(res=>{\r\n\r\n          var rowsupdateuser = rows.filter((val,key) =>{\r\n            return [...rows, selected.includes(val.id) ? val.is_active=statusbool:val]\r\n           \r\n           });\r\n           setRows(rowsupdateuser)\r\n          // if(!res.data.error){\r\n              \r\n          //   setRows(res.data.GETmethodData)\r\n            \r\n          // }\r\n          alert('Success')\r\n      }).catch(err=>{\r\n          \r\n          alert(err.message)\r\n          \r\n      })\r\n\r\n\r\n      }\r\n\r\n      const handleuserClose = () => {\r\n        setUsereditmodelopen(false);\r\n      };\r\n\r\n    const getallusers = async() => {\r\n      axios.get(url+'auth/admin/saveuser/',config).then(res=>{\r\n        if(!res.data.error){\r\n            \r\n          setRows(res.data.GETmethodData)\r\n          \r\n        }\r\n    }).catch(err=>{\r\n        \r\n        alert(err.message)\r\n        \r\n    })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n      getallusers()\r\n    }, [])\r\n\r\n    const handleSearchsubmit = async (e) => {\r\n\r\n        setModelopen(false)\r\n        axios.get(url+'auth/admin/getsingleuser/?username='+(queryfromodel),config).then(res=>{\r\n          if(!res.data.error){\r\n              \r\n            setRows(res.data.GETmethodData)\r\n            \r\n          }\r\n      }).catch(err=>{\r\n          \r\n          alert(err.message)\r\n          \r\n      })\r\n      \r\n\r\n    }\r\n\r\n    const handleUpdateSubmit = async (e) => {\r\n\r\n    //   setModelopen(false)\r\n     \r\n    const payload = {\r\n      id:selected[0],\r\n      role:userupdateform.role,\r\n      category:userupdateform.category\r\n    }\r\n    var response = await authapi.userupdate(payload)\r\n    setUsereditmodelopen(false)\r\n    if(response.status == 200){\r\n      const updatedusers = rows.filter((val,key) =>{\r\n        return [...rows, +val.id == +payload.id ? payload.role===\"superuser\"?(val.is_superuser=true,val.is_staff=true,val.is_active=true,val.content=payload.category):payload.role===\"admin\"?(val.is_superuser=false,val.is_staff=true,val.is_active=true,val.content=payload.category):(val.is_superuser=false,val.is_staff=false,val.is_active=true,val.content=payload.category):null]\r\n    })\r\n    setRows(updatedusers);\r\n      return props.userstatusupdate('success')\r\n    }else{\r\n      return props.userstatusupdate('error')\r\n    }\r\n    \r\n    \r\n\r\n  }\r\n\r\n\r\n    \r\n\r\n    const deleteUsers = async () => {\r\n\r\n      const form_data = new FormData();\r\n      form_data.append('itemlist',selected)\r\n      \r\n        axios.post(url+'auth/admin/deleteusers/',form_data,config).then(res=>{\r\n          if(!res.data.error){\r\n              \r\n            alert('Successfully Deleted')\r\n            \r\n          }\r\n      }).catch(err=>{\r\n          \r\n          alert(err.message)\r\n          \r\n      })\r\n\r\n    }\r\n\r\n    \r\n\r\n    const assignuserstoGroup = async () => {\r\n\r\n      const form_data = new FormData();\r\n      form_data.append('itemlist',selected)\r\n      form_data.append('groupname',props.usergroup)\r\n      \r\n      \r\n        axios.post(url+'admin/assignedtogroup/',form_data,config).then(res=>{\r\n          if(!res.data.error){\r\n              \r\n            alert('Successfully assigned')\r\n            \r\n          }\r\n      }).catch(err=>{\r\n          \r\n          alert(err.message)\r\n          \r\n      })\r\n\r\n    }\r\n\r\n\r\n    // backedn operations\r\n  \r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  \r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ConfirmModel setQueryfromodel = {setQueryfromodel} modelopen={modelopen} \r\n        handleSearchsubmit={handleSearchsubmit} handleClickOpen={handleClickOpen} \r\n        handleClose={handleClose} \r\n      />\r\n      <UserEditModel \r\n        usereditmodelopen={usereditmodelopen} \r\n        handleuserClose = {handleuserClose}\r\n        userupdateform={userupdateform}\r\n        handleChangeeditForm={handleChangeeditForm}\r\n        handleUpdateSubmit={handleUpdateSubmit}\r\n        \r\n      \r\n      />\r\n\r\n      \r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar \r\n        assignuserstogroupclick={assignuserstoGroup} \r\n        deleteUsersclick={deleteUsers} \r\n        numSelected={selected.length} \r\n        handleClickOpen={handleClickOpen}\r\n        handleuserClickOpen={handleuserClickOpen}\r\n        handleuserClickActivateStatus = {handleuserClickActivateStatus}\r\n        \r\n        />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                     selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.is_staff?row.is_superuser? 'Superuser':'Admin':'User'}\r\n                      </TableCell>\r\n                      {/* <TableCell align=\"left\">{row.role}</TableCell> */}\r\n                      <TableCell align=\"left\">{row.content?row.content ==\"creator\"?\"seller\":\"buyer\":'-------'}</TableCell>\r\n                      <TableCell align=\"left\">{row.username}</TableCell>\r\n                      <TableCell align=\"left\">{row.email?row.email:'-----------'}</TableCell>\r\n                      <TableCell align=\"left\">{row.is_active?'active':'deactivte'}</TableCell>\r\n                      <TableCell align=\"left\"><Moment format=\"YYYY/MM/DD\">{row.date_joined}</Moment></TableCell>\r\n                      <TableCell align=\"left\">{row.group?row.group:'---------'}</TableCell>\r\n                      <TableCell align=\"left\" onClick={(e) => history.push(`/admin/profile/${row.id}`)}>View Profile</TableCell>\r\n                     \r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      {/* <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\explorecard\\ContentExplorecard.js",["743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\r\nimport { Box, Menu, MenuItem } from '@material-ui/core';\r\nimport { useHistory } from 'react-router';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport Moment from 'react-moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 'auto',\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function ContentExplorecard(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n \r\n\r\n\r\n  const options = [\r\n    'in_stock',\r\n    'is_active',\r\n    \r\n\r\n  ];\r\n\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleIsactive =async (e,id,action) => {\r\n    setAnchorEl(null);\r\n    await props.handleIsactivemain(id,action)\r\n\r\n  };\r\n\r\n  const detailPagenavigator = async(id) => {\r\n    history.push('/admin/section/'+id)\r\n  }\r\n\r\n  // const handleInstock = (e,id) => {\r\n  //   setAnchorEl(null);\r\n  //   const response = cardapi.instock(id)\r\n  //   if(response.status===200){\r\n  //     alert('Success')\r\n  //   }else{\r\n  //     alert('Fail')\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        // avatar={\r\n        //   <Avatar aria-label=\"recipe\" className={classes.avatar} src={`https://app.contentbond.com/media/${props.val.thumbnail}`}>\r\n        //     R\r\n        //   </Avatar>\r\n        // }\r\n        // action={\r\n        //   <>\r\n        //     <IconButton aria-label=\"settings\" onClick={handleClick} >\r\n        //       <MoreVertIcon />\r\n        //     </IconButton>\r\n        //     <Menu\r\n        //       id=\"long-menu\"\r\n        //       anchorEl={anchorEl}\r\n        //       keepMounted\r\n        //       open={open}              \r\n        //       onClose={handleClose}\r\n        //       PaperProps={{\r\n        //         style: {\r\n        //           maxHeight: 48 * 4.5,\r\n        //           width: '20ch',\r\n        //         },\r\n        //       }}\r\n        //     >\r\n        //       {options.map((val,index) => {\r\n        //         return (\r\n        //         <MenuItem key={index} onClick={(e)=>handleIsactive(e,props.val.id,val)}>\r\n        //         {val == \"is_active\"?props.val[val]?'Deactivate':'Activate':props.val.in_stock?'Private':'Public'}\r\n        //       </MenuItem>\r\n        //       // <MenuItem key={index+1} onClick={(e) => handleInstock(e,props.val.id,'stock')}>\r\n        //       //     {props.val.in_stock?'Private':'Public'}\r\n        //       // </MenuItem>\r\n            \r\n            \r\n        //       )\r\n        //       })\r\n                \r\n               \r\n              \r\n        // }\r\n              \r\n        //     </Menu>\r\n        //   </>\r\n        // }\r\n        title={props.val.title}\r\n        subheader={<Moment>{props.val.created}</Moment>}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={`https://app.contentbond.com/media/${props.val.thumbnail}`}\r\n        title={props.val.title}\r\n        onClick={(e)=>detailPagenavigator(props.val.id)}\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {props.val.title}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\"}}>\r\n      {props.profilerestrict.content == \"producer\" && \r\n      <>\r\n        <IconButton color={props.val.isliked?'primary':'secondary'} aria-label=\"add to favorites\" onClick={(e) => props.likefun(e,props.val.id)}>\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\" color={props.val.isfavored?'primary':'secondary'} onClick={(e) => props.interestfun(e,props.val.id)}>\r\n          <LocalMallIcon />\r\n        </IconButton>\r\n        </>\r\n      }\r\n        {props.profilerestrict.content == \"creator\" && \r\n        <>\r\n        \r\n        <CreateIcon onClick={() => props.editProduct(props.val.id)} />\r\n       \r\n        <DeleteOutlineIcon />\r\n       \r\n        \r\n        \r\n        </>\r\n        }\r\n      </CardActions>\r\n\r\n    </Card>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ListSimple\\SimpleList.js",["759","760","761","762","763","764"],"import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {getchatmessages}  from '../../container/api/message'\r\nimport axios from 'axios';\r\n\r\n\r\nconst SimpleList = React.forwardRef((props,ref) => {\r\nconst [chat,setChat] = React.useState([]);\r\nconst [pagenumber,setPagenumber] = React.useState(1);\r\n\r\nconst getToken = () => {\r\n  \r\n  try{\r\n    var unparsedtoken = localStorage.getItem('access_token');\r\n    var parsedtoken = JSON.parse(unparsedtoken);\r\n    return parsedtoken.access_token\r\n\r\n  }catch{\r\n    return 'sdfsdfonfsdfsd'\r\n  }\r\n  \r\n}\r\n  React.useEffect(() => {\r\n\r\n    \r\n\r\n    const config = {\r\n      headers: {\r\n          'content-type': 'application/json',\r\n          'Authorization': 'Token '+getToken()   \r\n          // 'X-CSRFToken': getCookie('csrftoken')\r\n      }\r\n    }\r\n    \r\n\r\n\r\n    const url = 'https://app.contentbond.com/'\r\n    const params = {\r\n      currentpage:pagenumber\r\n    }\r\n\r\n    axios\r\n    .get(url+\"admin/chat/savemessage/\",{params},config)\r\n    .then(resp => {  \r\n      setChat(resp.data.mesgs)\r\n    \r\n    })\r\n    .catch(error => error);\r\n\r\n  }, [])\r\n \r\n\r\n  return (\r\n    <div>\r\n{chat.map((val,index) => {\r\n\r\n\r\nreturn <List key={index} style={{width: '100%',\r\n    maxWidth: '36ch'}}>\r\n      <ListItem alignItems=\"flex-start\">\r\n        {/* <ListItemAvatar>\r\n          <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n        </ListItemAvatar> */}\r\n        <ListItemText\r\n          primary={val.msg}\r\n          // secondary={\r\n          //   <React.Fragment>\r\n          //     {/* <Typography\r\n          //       component=\"span\"\r\n          //       variant=\"body2\"\r\n          //       style={{display:'inline'}}\r\n          //       color=\"textPrimary\"\r\n          //     >\r\n          //       Nagendra\r\n          //     </Typography> */}\r\n          //     {val.msg}\r\n          //   </React.Fragment>\r\n          // }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n    \r\n    </List>\r\n\r\n\r\n\r\n})}\r\n    \r\n    </div>\r\n  );\r\n})\r\nexport default SimpleList;","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\button\\FileUpload.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\actions\\ProductActions.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\sagas\\Product.js",["765","766"],"/**\r\n * Auth Sagas\r\n */\r\nimport { all, call, fork, put, takeEvery, takeLatest } from \"redux-saga/effects\";\r\nimport axios from 'axios';\r\nimport {\r\n  SAVE_PRODUCT,\r\n  SAVE_PRODUCT_SUCCESS,\r\n  SAVE_PRODUCT_FAIL,\r\n  CREATOR_SAVE_PRODUCT,\r\n  GET_REQUEST_DATA,\r\n  GET_PRODUCT_FAIL,\r\n  GET_PRODUCT_SUCCESS\r\n\r\n} from '../actions/types'\r\n\r\n// const url = 'http://127.0.0.1:8000/'\r\nconst url = 'https://app.contentbond.com/'\r\nconst getCookie = (name) => {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nconst addProductwithApiRequest = async (payload) => {\r\n  let productData = payload.values;\r\n  let statuscode = ''\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data',\r\n      'X-CSRFToken': getCookie('csrftoken')\r\n    }\r\n  }\r\n\r\n  const form_data = new FormData();\r\n  form_data.append('title', productData.title)\r\n  form_data.append('castncrew', productData.castncrew)\r\n  form_data.append('category', productData.category)\r\n  form_data.append('description', productData.description)\r\n  form_data.append('price', productData.price)\r\n  form_data.append('rights', productData.rights)\r\n  form_data.append('thumbnail', productData.thumbnail)\r\n  form_data.append('thumbnail1', productData.thumbnail1)\r\n  form_data.append('thumbnail2', productData.thumbnail2)\r\n  form_data.append('thumbnail3', productData.thumbnail3)\r\n  form_data.append('videofile', productData.video)\r\n\r\n  await axios\r\n    .post(url + \"admin/saveproduct/\", form_data, config)\r\n    .then(resp => { statuscode = resp.data.status })\r\n    .catch(error => error);\r\n\r\n  return statuscode\r\n}\r\n\r\n\r\nconst saverequestProductwithApiRequest = async (payload) => {\r\n  let productData = payload.values;\r\n  let statuscode = ''\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data',\r\n      'X-CSRFToken': getCookie('csrftoken')\r\n    }\r\n  }\r\n\r\n  const form_data = new FormData();\r\n  form_data.append('title', productData.title)\r\n  form_data.append('category', productData.category)\r\n  form_data.append('authortype', productData.author_type)\r\n  form_data.append('in_stock', true)\r\n  form_data.append('is_active', true)\r\n  form_data.append('action', 'creatorrequest')\r\n\r\n\r\n  await axios\r\n    .post(url + \"admin/requestsaveproduct/\", form_data, config)\r\n    .then(resp => { statuscode = resp.data.status })\r\n    .catch(error => error);\r\n\r\n  return statuscode\r\n}\r\n\r\nfunction* addProductwithApi({ payload }) {\r\n\r\n\r\n\r\n  console.log(\"consoling here in product success saga: \", payload.history);\r\n  \r\n  const saveProductResponse = yield call(\r\n    addProductwithApiRequest,\r\n    payload\r\n  );\r\n\r\n  if (saveProductResponse === 200) {\r\n    yield put({\r\n      type: SAVE_PRODUCT_SUCCESS,\r\n      payload: payload.values\r\n    });\r\n\r\n\r\n  } else {\r\n    yield put({\r\n      type: SAVE_PRODUCT_FAIL,\r\n      payload: payload.values\r\n    });\r\n  }\r\n}\r\n\r\n\r\nfunction* saverequestProductwithApi({ payload }) {\r\n\r\n\r\n\r\n  console.log(\"consoling creator request: \", payload.history);\r\n  const saveProductResponse = yield call(\r\n    saverequestProductwithApiRequest,\r\n    payload\r\n  );\r\n\r\n  if (saveProductResponse === 200) {\r\n    // yield put(saveProductSuccess(payload.values));\r\n    yield put({ type: SAVE_PRODUCT_SUCCESS })\r\n  } else {\r\n    // yield put(saveProductFail(payload.values));\r\n    yield put({ type: SAVE_PRODUCT_FAIL })\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Create Product\r\n*/\r\n\r\nexport function* add_Product() {\r\n  console.log(\"product saga called..\");\r\n  yield takeLatest(SAVE_PRODUCT, addProductwithApi);\r\n}\r\n\r\nexport function* request_creator() {\r\n  console.log(\"request saga called..\");\r\n  yield takeLatest(CREATOR_SAVE_PRODUCT, saverequestProductwithApi);\r\n\r\n}\r\n\r\n// Retrieve Products\r\n\r\nconst getProductswithApiRequest = async (payload) => {\r\n\r\n  let statuscode = ''\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data',\r\n      'X-CSRFToken': getCookie('csrftoken')\r\n    }\r\n  }\r\n\r\n\r\n  console.log('i got second payload', payload.pageNumber)\r\n  return await axios\r\n    .get(`${url}admin/getProductsall/?page=${payload.pageNumber}`, config)\r\n    .then(resp => resp)\r\n    .catch(error => error);\r\n\r\n\r\n}\r\n\r\nfunction* getProductswithApi({ payload }) {\r\n\r\n  console.log('igot payload', payload)\r\n  const saveProductResponse = yield call(\r\n    getProductswithApiRequest,\r\n    payload.pageNumber\r\n  );\r\n\r\n  if (saveProductResponse.data.status === 200) {\r\n    // yield put(saveProductSuccess(payload.values));\r\n    yield put({ type: GET_PRODUCT_SUCCESS, payload: saveProductResponse.data.obs })\r\n  } else {\r\n    // yield put(saveProductFail(payload.values));\r\n    yield put({ type: GET_PRODUCT_FAIL })\r\n  }\r\n}\r\n\r\nexport function* get_all_Products() {\r\n  console.log(\"Get product saga called..\");\r\n  yield takeLatest(GET_REQUEST_DATA, getProductswithApi);\r\n}\r\n\r\n\r\n/**\r\n * Product Root Saga\r\n */\r\nexport default function* rootSaga() {\r\n  console.log(\"productooo\");\r\n  yield all([\r\n\r\n    fork(add_Product),\r\n    fork(request_creator),\r\n    fork(get_all_Products)\r\n  ]);\r\n}\r\n\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\reducers\\ProductReducer.js",["767","768","769","770","771"],"import {\r\n    SAVE_PRODUCT,\r\n    SAVE_PRODUCT_SUCCESS,\r\n    SAVE_PRODUCT_FAIL,\r\n    UPDATE_PRODUCT,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_FAIL,\r\n    GET_PRODUCT_SUCCESS\r\n\r\n} from '../actions/types'\r\n\r\nimport {\r\n    saveProductSuccess,\r\n    \r\n} from '../actions'\r\n\r\n/**\r\n * initial auth user\r\n */\r\nconst INIT_STATE = {\r\n    productissubmitting:false,\r\n    isproductsaved: null,\r\n    products:[]\r\n\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state = INIT_STATE, action) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case SAVE_PRODUCT_SUCCESS:\r\n            return { ...state, \r\n                isproductsaved: true \r\n            };   \r\n        case SAVE_PRODUCT_FAIL:\r\n            return { ...state,\r\n                isproductsaved: false \r\n            };     \r\n        case GET_PRODUCT_SUCCESS:\r\n            return { ...state,\r\n                    products:action.payload\r\n            }\r\n\r\n        default:\r\n            return { ...state };\r\n    }\r\n};","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\button\\Fileuploadbutton.js",["772","773"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nexport default function Fileuploadbutton() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <input\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id=\"contained-button-file\"\r\n        multiple\r\n        type=\"file\"\r\n      />\r\n      <label htmlFor=\"contained-button-file\">\r\n        <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n          Upload\r\n        </Button>\r\n      </label>\r\n     \r\n    </div>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\useContentExplore.js",["774","775","776","777","778","779"],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentExploreAdmin.js",["780","781","782","783","784","785","786","787","788"],"import { Box, Grid } from '@material-ui/core'\r\nimport React, { useState, useEffect, useCallback } from 'react'\r\nimport ContentExplorecardAdmin from '../components/explorecard/ContentExplorecardAdmin'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport * as apirequest from './api/api';\r\nimport * as cardapi from './api/cardactionsapi';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst ContentExploreAdmin = () => {\r\n\r\n    const response = useSelector((state) => state.productSave);\r\n    const [allproducts, setAllproducts] = useState([])\r\n    const [pageNumber, setPageNumber] = useState(1)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [alertseverity, setAlertseverity] = React.useState('success')\r\n    const [productmessage, setProductmessage] = React.useState('')\r\n\r\n    useEffect(() => {\r\n        const setprod = async () => {\r\n\r\n            const allprod = await apirequest.getallproducts({ 'pageNumber': pageNumber })\r\n\r\n            setAllproducts(allprod)\r\n            console.log(allprod)\r\n\r\n        }\r\n        setprod()\r\n\r\n\r\n\r\n    }, [pageNumber])\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n\r\n    const handleIsactivemain = async (id, action) => {\r\n\r\n        let response = \"\"\r\n        if (action == \"is_active\") {\r\n            response = await cardapi.isactive(id)\r\n            const updatedproductsactive = allproducts.filter((val, key) => {\r\n                return [...allproducts, +val.id == +id ? val.is_active = !val.is_active : null]\r\n            })\r\n            setAllproducts(updatedproductsactive);\r\n        } else if (action == \"in_stock\") {\r\n            response = await cardapi.instock(id)\r\n            const updatedproductstock = allproducts.filter((val, key) => {\r\n                return [...allproducts, +val.id == +id ? val.in_stock = !val.in_stock : null]\r\n            })\r\n            setAllproducts(updatedproductstock);\r\n        }\r\n\r\n        if (+response.status === 200) {\r\n\r\n            setProductmessage(\"Successfully Changed\")\r\n            setOpen(true);\r\n            setAlertseverity('success')\r\n        } else if (+response.status === 400) {\r\n            setProductmessage(\"Successfully Changed\")\r\n            setOpen(true);\r\n            setAlertseverity('error')\r\n        }\r\n        else {\r\n\r\n            setProductmessage(\"Something is went wrong\")\r\n            setOpen(true);\r\n            setAlertseverity('error')\r\n        }\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     setAllproducts(response.products)\r\n    // }, [])\r\n\r\n    const handlePagechange = (event, number) => {\r\n        alert(number)\r\n    }\r\n\r\n    // SnackBar\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const addlikes = async (e, id) => {\r\n        const response = await apirequest.addlike(id)\r\n        if (+response.status === 200) {\r\n            const updatedproducts = allproducts.filter((val, key) => {\r\n                return [...allproducts, +val.id == +id ? val.isliked = !val.isliked : null]\r\n            })\r\n            setAllproducts(updatedproducts);\r\n            alert(response.message)\r\n\r\n        } else {\r\n            alert('something is went wrong')\r\n        }\r\n\r\n    }\r\n    const addfavorites = async (e, id) => {\r\n        const response = await apirequest.addinterest(id)\r\n\r\n        if (+response.status === 200) {\r\n            const updatedproducts = allproducts.filter((val, key) => {\r\n                return [...allproducts, +val.id == +id ? val.isfavored = !val.isfavored : null]\r\n            })\r\n            setAllproducts(updatedproducts);\r\n            alert(response.message)\r\n\r\n        } else {\r\n            alert('something is went wrong')\r\n        }\r\n\r\n\r\n    }\r\n    const vertical = \"top\"\r\n    const horizontal = \"right\"\r\n    return (\r\n        <>\r\n            <Snackbar anchorOrigin={{ vertical, horizontal }} open={open} autoHideDuration={4000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={alertseverity}>\r\n                    {productmessage}\r\n                </Alert>\r\n            </Snackbar>\r\n            <Grid container spacing={2}>\r\n                {allproducts.map((val, index) => {\r\n                    return <Grid item md={4} sm={12} xs={12} lg={4} key={index}><ContentExplorecardAdmin val={val} likefun={addlikes} interestfun={addfavorites}\r\n                        handleIsactivemain={handleIsactivemain}\r\n                    /></Grid>\r\n                })}\r\n            </Grid>\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" mt={5} mb={5}>\r\n                <Pagination onChange={handlePagechange} count={10} color=\"primary\" />\r\n            </Box>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ContentExploreAdmin\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\ConfirmModel.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\Profile.js",["789"],"import { Box, Button, Card, CardContent, CardHeader, Divider, Grid, ListItem, ListItemIcon, ListItemText, TextField, Typography } from '@material-ui/core'\r\n\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { ProfileUpdatePrimary, ProfileUpdateSecondary, getProfileData } from '../actions/ProfileActions'\r\nimport { bindActionCreators } from 'redux';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { Link } from 'react-router-dom';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\r\nimport DynamicFeedIcon from '@material-ui/icons/DynamicFeed';\r\nimport { adminProfileState } from 'reducers/selectors/ProfileSelector';\r\nimport { adminProfileUpdateState } from 'reducers/selectors/ProfileSelector';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { updateSecondaryProfile } from './api/userapi'\r\nexport class Profile extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      email: \"\",\r\n      address: \"\",\r\n      postalcode: \"\",\r\n      phone: \"\",\r\n      city: \"\",\r\n      country: \"\",\r\n      content: \"\"\r\n    }\r\n  }\r\n\r\n \r\n\r\n  componentDidMount() {\r\n    // console.log('didmount',this.props.data)\r\n    // getProfileData({user:'nagendra',history:this.props.history})\r\n    // alert('stoppedn in component did mount')\r\n\r\n    const LoadStatedata = async() => {\r\n      let dataprops = this.props.data\r\n\r\n\r\n    return await this.setState(() => ({\r\n\r\n      first_name: dataprops.user_ptr.first_name,\r\n      last_name: dataprops.user_ptr.last_name,\r\n      email: dataprops.user_ptr.email,\r\n      address: dataprops.address,\r\n      postalcode: dataprops.postalcode,\r\n      phone: dataprops.phone,\r\n      city: dataprops.city,\r\n      country: dataprops.country,\r\n      content: dataprops.content\r\n    })\r\n    )\r\n\r\n    }\r\n    \r\n    LoadStatedata()\r\n\r\n    // if (this.state.email == \"\"){\r\n    //   this.props.history.push('/admin/dashboard')\r\n    // }\r\n\r\n\r\n\r\n  }\r\n\r\n  // shouldComponentUpdate(nextProps,nextState) {\r\n  //   // Rendering the component only if \r\n  //   // passed props value is changed\r\n\r\n  //   // if (nextProps.profileloading !== this.props.profileloading) {\r\n  //   //   return true;\r\n  //   // } else {\r\n  //   //   return false;\r\n  //   // }\r\n  //   console.log('should update')\r\n  //   return true\r\n  // }\r\n\r\n  // componentDidUpdate(){\r\n  //   console.log('did update')\r\n  //   // getProfileData({user:'nagendra',history:this.props.history})\r\n\r\n\r\n\r\n\r\n  // }\r\n\r\n\r\n\r\n\r\n  handleChange = (e) => {\r\n    this.setState((state, props) => ({\r\n      [e.target.name]: e.target.value\r\n    }));\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    return await this.props.primaryprofileupdate({\r\n      data: this.state,\r\n      payload: this.props.history\r\n    })\r\n  }\r\n\r\n  handleSubmit2 = async (event) => {\r\n    event.preventDefault();\r\n    await updateSecondaryProfile(this.state)\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Grid container spacing={2}>\r\n        {this.props.profileloading === true ? <CircularProgress /> : <>\r\n          <Grid item md={8}>\r\n\r\n            <Card>\r\n\r\n              {this.props.updateprops.updatestatus &&\r\n                <Alert severity=\"success\">Successfully Updated!</Alert>\r\n              }\r\n              {this.props.updateprops.updaterror &&\r\n                <Alert severity=\"error\">Update is Failed!</Alert>\r\n              }\r\n              <CardHeader title=\"Profile\">\r\n\r\n              </CardHeader>\r\n              <CardContent>\r\n\r\n\r\n                <form noValidate autoComplete=\"off\" method=\"post\" onSubmit={this.handleSubmit}>\r\n                  <Box display=\"flex\" p={2} pl={4} flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <TextField onChange={this.handleChange} name=\"first_name\" style={{ margin: 3 }} id=\"filled-basic\" label=\"FirstName\" variant=\"outlined\" fullWidth value={this.state.first_name} />\r\n                    <TextField onChange={this.handleChange} name=\"last_name\" style={{ margin: 3 }} id=\"filled-basic\" label=\"LastName\" variant=\"outlined\" fullWidth value={this.state.last_name} />\r\n                  </Box>\r\n                  <Box p={2} pl={4} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <TextField onChange={this.handleChange} style={{ margin: 3 }} name=\"email\" id=\"filled-basic\" label=\"Email\" variant=\"outlined\" fullWidth value={this.state.email} />\r\n                  </Box>\r\n                  <Box p={2} pl={4} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <Button color=\"primary\" variant=\"contained\" type=\"submit\">Update</Button>\r\n                  </Box>\r\n                </form>\r\n                <Box pt={4}>\r\n                  <Divider />\r\n\r\n                </Box>\r\n\r\n                <Box pt={2}>\r\n                  {this.props.updateprops.updatestatus &&\r\n                    <Alert severity=\"success\">Successfully Updated!</Alert>\r\n                  }\r\n                  {this.props.updateprops.updaterror &&\r\n                    <Alert severity=\"error\">Update is Failed!</Alert>\r\n                  }\r\n                  <Typography component='h3' variant='body2'>\r\n                    Contact Information\r\n                </Typography>\r\n                </Box>\r\n                <Box>\r\n                  <form noValidate autoComplete=\"off\" method=\"post\" onSubmit={this.handleSubmit2}>\r\n                    <Box p={4} alignItems=\"center\">\r\n                      <TextField id=\"filled-basic\" onChange={this.handleChange} name=\"address\" label=\"Address\" variant=\"outlined\" fullWidth value={this.state.address} />\r\n                      <TextField id=\"filled-basic\" onChange={this.handleChange} name=\"postalcode\" label=\"PostalCode\" variant=\"outlined\" fullWidth style={{ marginTop: 40 }} value={this.state.postalcode} />\r\n                      <TextField style={{ margin: 3, marginTop: 40 }} onChange={this.handleChange} name=\"phone\" id=\"filled-basic\" label=\"Phone\" variant=\"outlined\" fullWidth value={this.state.phone} />\r\n                    </Box>\r\n\r\n                    <Box p={4} pt={1} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"flex-start\">\r\n                      <TextField style={{ margin: 3 }} onChange={this.handleChange} name=\"city\" id=\"filled-basic\" label=\"City\" variant=\"outlined\" fullWidth value={this.state.city} />\r\n                      <TextField style={{ margin: 3 }} onChange={this.handleChange} name=\"country\" id=\"filled-basic\" label=\"Country\" variant=\"outlined\" fullWidth value={this.state.country} />\r\n                    </Box>\r\n\r\n                    <Box pl={4}>\r\n                      <Button type=\"submit\" color=\"primary\" variant=\"contained\">Update</Button>\r\n                    </Box>\r\n                  </form>\r\n                </Box>\r\n\r\n              </CardContent>\r\n\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader title=\"Collections\"></CardHeader>\r\n              <CardContent>\r\n                <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\r\n                  <Link to=\"/admin/favorite\">\r\n                    <ListItem button>\r\n                      <ListItemIcon>\r\n                        <FavoriteIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Favorites\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to=\"/admin/interested\">\r\n\r\n\r\n\r\n                    <ListItem button>\r\n                      <ListItemIcon>\r\n                        <LocalMallIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Interests\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to=\"/admin/recommended\">\r\n\r\n\r\n                    <ListItem button>\r\n                      <ListItemIcon>\r\n                        <DynamicFeedIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Assigned\" />\r\n                    </ListItem>\r\n\r\n                  </Link>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={4} xs={12} sm={12}>\r\n\r\n            <Card>\r\n              <CardHeader subheader={\r\n                <Box display=\"flex\" justifyContent=\"space-between\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n\r\n                  >\r\n                    Connect\r\n                    </Button>\r\n                  <Link to=\"/admin/messages\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n\r\n                    >\r\n                      Message\r\n                    </Button>\r\n                  </Link>\r\n                </Box>\r\n              }>\r\n\r\n              </CardHeader>\r\n              <CardContent>\r\n                <Box display=\"flex\" justifyContent=\"center\" style={{ position: 'relative' }}>\r\n                  <Box component=\"img\" alt=\"profile\" src={require('../assets/img/user-4.jpg').default} style={{ borderRadius: '50%', height: '150px', width: '150px' }} />\r\n                </Box>\r\n                <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" p={3}>\r\n                  <Typography component='p' variant='body2' >Joined On:  <br></br>{JSON.stringify(Date())}</Typography>\r\n                  <Typography component='p' variant='body2' >Category:  {this.state.content}</Typography>\r\n\r\n                </Box>\r\n\r\n              </CardContent>\r\n\r\n            </Card>\r\n          </Grid>\r\n        </>\r\n        }\r\n\r\n      </Grid>\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  // data: adminProfileState(state),\r\n  data: state.profileops.profile,\r\n  updateprops: adminProfileUpdateState(state.profileops),\r\n  profileloading: state.profileops.profileloading\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({\r\n    getProfileData,\r\n    primaryprofileupdate: ProfileUpdatePrimary,\r\n    secondaryprofileupdate: ProfileUpdateSecondary\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\assets\\theme\\box-shadow.js",[],["790","791"],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\assets\\theme\\views\\admin\\profile.js",[],["792","793"],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\assets\\theme\\colors.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\assets\\theme\\hex-to-rgb.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\assets\\theme\\theme.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\UserGroups.js",["794","795"],"import { Button, Card, CardContent, CardHeader, Grid, TextField, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport TableMaterialgroup from '../components/TableMaterial/TableMaterialgroup'\r\nimport axiosInstance from '../axiosinstance'\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '../components/alertcustom/alertcustom'\r\nconst UserGroups = () => {\r\n\r\n    const [groupname,setGroupname] = React.useState('')\r\n    const [rule,setRule] = React.useState('')\r\n\r\n    const [open,setOpen] =  React.useState(false)\r\n    const [usercreatedmessage,setUsercreatedmessage] =  React.useState('')\r\n    const [alertseverity,setAlertseverity] =  React.useState('success')\r\n\r\n\r\n    // SnackBar\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setOpen(false);\r\n      };\r\n\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      const body = new FormData();\r\n      body.append('groupname',groupname)\r\n      body.append('rule',rule)\r\n      \r\n      await axiosInstance.post('admin/creategroup/',body).then(res=> {\r\n         \r\n\r\n          if(res.data.status==200){\r\n            setUsercreatedmessage(\"Group created successfully\")\r\n            setOpen(true)\r\n            setAlertseverity('success')\r\n           \r\n           \r\n        }else{\r\n            setUsercreatedmessage(\"Group Creation is Failed\")\r\n          setOpen(false);\r\n          setAlertseverity('error')\r\n\r\n        }\r\n      }).catch(err=> {\r\n          console.log(err.message)\r\n          setUsercreatedmessage(\"Group Creation is Failed\")\r\n          setOpen(false);\r\n          setAlertseverity('error')\r\n\r\n      })\r\n      \r\n\r\n\r\n    }\r\n    const vertical = \"top\"\r\n    const horizontal = \"right\"\r\n    return (\r\n        <div>\r\n            <Snackbar anchorOrigin={{ vertical, horizontal }} open={open} autoHideDuration={4000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={alertseverity}>\r\n                {usercreatedmessage}\r\n                </Alert>\r\n            </Snackbar>\r\n            <Grid container spacing={2}>\r\n                <Grid item md={12}>\r\n                    <Card>\r\n                        <CardHeader title=\"Groups\">\r\n\r\n                        </CardHeader>\r\n                        <CardContent>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item md={12} xs={12} sm={12}>\r\n                                    <TextField\r\n                                        id=\"group\"\r\n                                        label=\"GroupName\"\r\n                                        variant=\"outlined\"\r\n                                        value={groupname}\r\n                                        onChange = {(e) => setGroupname(e.target.value)}                                        \r\n\r\n                                    />\r\n                                    \r\n                                </Grid>\r\n                                <Grid item md={12} xs={12} sm={12}>\r\n                                <TextField\r\n                                        id=\"rule\"\r\n                                        label=\"Rule\"\r\n                                        variant=\"outlined\"\r\n                                        value={rule}\r\n                                        onChange = {(e) => setRule(e.target.value)}                                        \r\n\r\n                                    />\r\n\r\n                                </Grid>\r\n\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Create Group</Button>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                </Grid>\r\n\r\n\r\n                <Grid item md={12}>\r\n                    <Card>\r\n                        <CardHeader title=\"Groups\">\r\n\r\n                        </CardHeader>\r\n                        <CardContent>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item md={12} xs={12} sm={12}>\r\n\r\n                                <TableMaterialgroup />\r\n\r\n\r\n                                    \r\n                                </Grid>\r\n\r\n                               \r\n\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n\r\n            </Grid>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserGroups\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\TableMaterial\\TableMaterialgroup.js",["796","797","798","799","800","801"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport faker from 'faker';\r\nimport axios from 'axios';\r\nimport ConfirmModel from '../ModelDialogue/ConfirmModel'\r\nimport { Button } from '@material-ui/core';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nfunction createData(id,groupname, rule, users) {\r\n  return { id,groupname, rule, users };\r\n}\r\n// const url = \"http://127.0.0.1:8000/\"\r\nconst url = 'https://app.contentbond.com/'\r\n\r\nconst getCookie = (name) => {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nconst getToken = () => {\r\n  \r\n  try{\r\n    var unparsedtoken = localStorage.getItem('access_token');\r\n    var parsedtoken = JSON.parse(unparsedtoken);\r\n    return parsedtoken.access_token\r\n\r\n  }catch{\r\n    return 'sdfsdfonfsdfsd'\r\n  }\r\n  \r\n}\r\n\r\nconst config = {\r\n  headers: {\r\n      'content-type': 'multipart/form-data',          \r\n      'X-CSRFToken': getCookie('csrftoken'),\r\n      'Authorization': 'Token '+getToken()\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const rows = [\r\n//   createData(1,'Admin', 'Producer',faker.name.findName(),faker.internet.email(), faker.date.future().toLocaleString()),\r\n//   createData(2,'User','Creator',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(3,'User','Hybrid',faker.name.findName(),faker.internet.email(),  faker.date.future().toLocaleString()),\r\n//   createData(4,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(5,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(6,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(7,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n  \r\n// ];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'groupname', numeric: false, disablePadding: true, label: 'GroupName' },\r\n  { id: 'rule', numeric: false, disablePadding: false, label: 'Rule' },\r\n  { id: 'users', numeric: true, disablePadding: false, label: 'TotalUsers' },\r\n  \r\n  \r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n \r\n\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            style={{fontWeight:800}}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          All Users\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <>\r\n        <Tooltip title=\"Edit\">\r\n          <IconButton aria-label=\"edit\">\r\n            <CreateIcon />            \r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\" onClick={props.deleteUsersclick}>\r\n            <DeleteIcon />            \r\n          </IconButton>\r\n        </Tooltip>\r\n        </>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          {/* <IconButton aria-label=\"filter list\" onClick = {props.handleClickOpen}> */}\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />            \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function TableMaterialgroup() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [queryfromodel, setQueryfromodel] = React.useState('');\r\n\r\n      // backend operations\r\n\r\n    const [rows,setRows] = React.useState([])\r\n    \r\n    const [modelopen, setModelopen] = React.useState(false);\r\n\r\n      const handleClickOpen = () => {\r\n        setModelopen(true);\r\n      };\r\n\r\n      const handleClose = () => {\r\n        setModelopen(false);\r\n      };\r\n\r\n    const getallgroups = async() => {\r\n      axios.get(url+'admin/getallgroups/',config).then(res=>{\r\n        if(!res.data.error){\r\n            \r\n          setRows(res.data.groups)\r\n          \r\n        }\r\n    }).catch(err=>{\r\n        \r\n        alert(err.message)\r\n        \r\n    })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n      getallgroups()\r\n    }, [])\r\n\r\n    const handleSearchsubmit = async (e) => {\r\n\r\n        setModelopen(false)\r\n        axios.get(url+'auth/admin/getsingleuser/?username='+(queryfromodel),config).then(res=>{\r\n          if(!res.data.error){\r\n              \r\n            setRows(res.data.GETmethodData)\r\n            \r\n          }\r\n      }).catch(err=>{\r\n          \r\n          alert(err.message)\r\n          \r\n      })\r\n      \r\n\r\n    }\r\n\r\n    const deleteUsers = async () => {\r\n\r\n      const form_data = new FormData();\r\n      form_data.append('itemlist',selected)\r\n      \r\n        axios.post(url+'admin/deletegroups/',form_data,config).then(res=>{\r\n          if(!res.data.error){\r\n              \r\n            alert('Successfully Deleted')\r\n            \r\n          }\r\n      }).catch(err=>{\r\n          \r\n          alert(err.message)\r\n          \r\n      })\r\n\r\n    }\r\n\r\n\r\n    // backedn operations\r\n  \r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  \r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ConfirmModel setQueryfromodel = {setQueryfromodel} modelopen={modelopen} handleSearchsubmit={handleSearchsubmit} handleClickOpen={handleClickOpen} handleClose={handleClose} />\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar deleteUsersclick={deleteUsers} numSelected={selected.length} handleClickOpen={handleClickOpen} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                     selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.groupname}\r\n                      </TableCell>\r\n                      {/* <TableCell align=\"left\">{row.role}</TableCell> */}\r\n                      <TableCell align=\"left\">{row.rule?row.rule:'-------'}</TableCell>\r\n                      <TableCell align=\"right\">{row.users?row.users:\"--------\"}</TableCell>\r\n                      \r\n                     \r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      {/* <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\axiosinstance.js",["802"],"import axios from 'axios';\r\nconst baseURL = \"http://127.0.0.1:8000/\";\r\n\r\nconst getCookie = (name) => {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n        const cookie = cookies[i].trim();\r\n        // Does this cookie string begin with the name we want?\r\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  }\r\nconst config = {\r\n    headers: {\r\n        'content-type': 'multipart/form-data',          \r\n        'X-CSRFToken': getCookie('csrftoken')\r\n    }\r\n  }\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL:baseURL,\r\n    // timeout: 5000,\r\n    headers: {\r\n        'content-type': 'multipart/form-data',          \r\n        'X-CSRFToken': getCookie('csrftoken')\r\n    }\r\n    // cancelToken: new axios.CancelToken(c => cancel = c)\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n    (response) => {\r\n        return response;\r\n    })\r\n\r\nexport default axiosInstance;","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\alertcustom\\alertcustom.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\api\\api.js",["803","804","805","806","807","808","809","810"],"import axios from 'axios';\r\n\r\n// const url = 'http://127.0.0.1:8000/'\r\nconst url = 'https://app.contentbond.com/'\r\nconst getCookie = (name) => {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n        const cookie = cookies[i].trim();\r\n        // Does this cookie string begin with the name we want?\r\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  }\r\n  const getToken = () => {\r\n  \r\n    try{\r\n      var unparsedtoken = localStorage.getItem('access_token');\r\n      var parsedtoken = JSON.parse(unparsedtoken);\r\n      return parsedtoken.access_token\r\n  \r\n    }catch{\r\n      return 'sdfsdfonfsdfsd'\r\n    }\r\n    \r\n  }\r\n\r\n export const addlike = async (payload) =>{\r\n         \r\n    let statuscode = ''\r\n    const config = {\r\n      headers: {\r\n          'content-type': 'multipart/form-data',          \r\n          'X-CSRFToken': getCookie('csrftoken')\r\n      }\r\n    }\r\n  \r\n    const form_data = new FormData();\r\n    form_data.append('id', payload)\r\n    \r\n \r\n    await axios\r\n      .post(url+\"admin/addliketoproduct/\", form_data,config)\r\n      .then(resp => {statuscode=resp.data})\r\n      .catch(error => error);\r\n\r\n      return statuscode\r\n      }\r\n\r\n\r\nexport const addinterest = async (payload) =>{\r\n    let statuscode = ''\r\n    const config = {\r\n      headers: {\r\n          'content-type': 'multipart/form-data',          \r\n          'X-CSRFToken': getCookie('csrftoken')\r\n      }\r\n    }\r\n  \r\n    const form_data = new FormData();\r\n    form_data.append('id', payload)\r\n    \r\n \r\n    await axios\r\n      .post(url+\"admin/addboughtproduct/\", form_data,config)\r\n      .then(resp => {statuscode=resp.data})\r\n      .catch(error => error);\r\n\r\n      return statuscode\r\n    }\r\n\r\n    \r\nexport const getallproducts = async (payload) =>{\r\n  \r\n        let statuscode = ''\r\n        const config = {\r\n          headers: {\r\n              'content-type': 'multipart/form-data',          \r\n              'X-CSRFToken': getCookie('csrftoken'),\r\n              'Authorization': 'Token '+getToken()\r\n          }\r\n        }\r\n      \r\n        \r\n        console.log('pagenumber',payload.pageNumber)\r\n        return await axios\r\n          .get(`${url}admin/getProductsall/?page=${payload.pageNumber}`,config)\r\n          .then(resp => resp.data.obs)\r\n          .catch(error => error);\r\n      \r\n          \r\n          }\r\n\r\n\r\nexport const getalllikedproducts = async (payload) =>{\r\n\r\n        let statuscode = ''\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',          \r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n\r\n        console.log('pagenumber',payload.pageNumber)\r\n        return await axios\r\n            .get(`${url}admin/getproductsallliked/?page=${payload.pageNumber}`,config)\r\n            .then(resp => resp.data.obs)\r\n            .catch(error => error);\r\n\r\n    \r\n    }\r\n\r\n\r\n    export const getallbaggedproducts = async (payload) =>{\r\n\r\n        let statuscode = ''\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',          \r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n\r\n        console.log('pagenumber',payload.pageNumber)\r\n        return await axios\r\n            .get(`${url}admin/getproductsallbagged/?page=${payload.pageNumber}`,config)\r\n            .then(resp => resp.data.obs)\r\n            .catch(error => error);\r\n\r\n    \r\n    }\r\n\r\n    export const getallrecommendedproducts = async (payload) =>{\r\n\r\n      let statuscode = ''\r\n      const config = {\r\n          headers: {\r\n              'content-type': 'application/json',          \r\n              'X-CSRFToken': getCookie('csrftoken'),\r\n              'Authorization': 'Token '+getToken()\r\n          }\r\n      }\r\n\r\n\r\n      console.log('pagenumber',payload.pageNumber)\r\n      return await axios\r\n          .get(`${url}admin/getproductsallbyusers/?page=${payload.pageNumber}`,config)\r\n          .then(resp => resp.data.obs)\r\n          .catch(error => error);\r\n\r\n  \r\n  }\r\n\r\n\r\n// Admin Dyno DataFetching\r\n\r\nexport const getalllikedproductsadmin = async (payload) =>{\r\n\r\n  let statuscode = ''\r\n  const config = {\r\n      headers: {\r\n          'content-type': 'application/json',          \r\n          'X-CSRFToken': getCookie('csrftoken')\r\n      }\r\n  }\r\n\r\n\r\n \r\n  return await axios\r\n      .get(`${url}admin/getproductsalllikedbyid/?page=${payload.pageNumber}&id=${payload.dynoid}`,config)\r\n      .then(resp => resp.data.obs)\r\n      .catch(error => error);\r\n\r\n\r\n}\r\n\r\n\r\nexport const getallbaggedproductsadmin = async (payload) =>{\r\n\r\n  let statuscode = ''\r\n  const config = {\r\n      headers: {\r\n          'content-type': 'application/json',          \r\n          'X-CSRFToken': getCookie('csrftoken')\r\n      }\r\n  }\r\n\r\n\r\n  return await axios\r\n      .get(`${url}admin/getproductsallbaggedbyid/?page=${payload.pageNumber}&id=${payload.dynoid}`,config)\r\n      .then(resp => resp.data.obs)\r\n      .catch(error => error);\r\n\r\n\r\n}\r\n\r\n\r\nexport const getallrecommendedproductsadmin = async (payload) =>{\r\n\r\n  let statuscode = ''\r\n  const config = {\r\n      headers: {\r\n          'content-type': 'application/json',          \r\n          'X-CSRFToken': getCookie('csrftoken')\r\n      }\r\n  }\r\n\r\n\r\n  console.log('pagenumber',payload.pageNumber)\r\n  return await axios\r\n      .get(`${url}admin/getproductsallbyusersbyid/?page=${payload.pageNumber}&id=${payload.dynoid}`,config)\r\n      .then(resp => resp.data.obs)\r\n      .catch(error => error);\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const getalluploadedproductsadmin = async (payload) =>{\r\n\r\n  let statuscode = ''\r\n  const config = {\r\n      headers: {\r\n          'content-type': 'application/json',          \r\n          'X-CSRFToken': getCookie('csrftoken')\r\n      }\r\n  }\r\n\r\n\r\n  console.log('pagenumber',payload.pageNumber)\r\n  return await axios\r\n      .get(`${url}admin/getuploadsallbyusersbyid/?page=${payload.pageNumber}&id=${payload.dynoid}`,config)\r\n      .then(resp => resp.data.obs)\r\n      .catch(error => error);\r\n\r\n\r\n}","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentExploreAdminBagged.js",["811","812","813"],"import { Box, Grid } from '@material-ui/core'\r\nimport React,{useState,useEffect} from 'react'\r\nimport ContentExplorecard from '../components/explorecard/ContentExplorecardBagged'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport * as apirequest from './api/api';\r\nimport * as cardapi from './api/cardactionsapi';\r\n\r\n// import { useSelector } from 'react-redux';\r\n\r\n\r\nconst ContentExploreAdminBagged = () => {    \r\n    \r\n    // const response = useSelector((state) => state.productSave);\r\n    const [allproducts,setAllproducts] = useState([])    \r\n    const [pageNumber, setPageNumber] = useState(1)\r\n    // const [alertseverity, setAlertseverity] = React.useState('success')\r\n    // const [productmessage, setProductmessage] = React.useState('')\r\n    // const [open, setOpen] = React.useState(false)\r\n\r\n    useEffect(() => {\r\n        const setprod = async() =>{\r\n\r\n            const allprod = await apirequest.getallbaggedproducts({'pageNumber':pageNumber})\r\n            \r\n            setAllproducts(allprod)\r\n\r\n        }\r\n        setprod()\r\n        \r\n\r\n        \r\n    }, [pageNumber])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     setAllproducts(response.products)\r\n    // }, [])\r\n\r\n    const addfavorites = async (e, id) => {\r\n        const response = await apirequest.addinterest(id)\r\n\r\n        if (+response.status === 200) {\r\n            const updatedproducts = allproducts.filter((val, key) => {\r\n                return [...allproducts, +val.id == +id ? val.isfavored = !val.isfavored : null]\r\n            })\r\n            setAllproducts(updatedproducts);\r\n            alert(response.message)\r\n\r\n        } else {\r\n            alert('something is went wrong')\r\n        }\r\n    }\r\n\r\n    return (\r\n       <>\r\n            <Grid container spacing={2}>\r\n            {allproducts.map((val,index) => {\r\n                return <Grid item md={4} sm={12} xs={12} lg={4} key={index}><ContentExplorecard val={val} interestfun={addfavorites} /></Grid>\r\n            })}\r\n            </Grid>\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" mt={5} mb={5}>\r\n                <Pagination count={10} color=\"primary\" />\r\n            </Box>\r\n            \r\n</>\r\n           \r\n        \r\n    )\r\n}\r\n\r\nexport default ContentExploreAdminBagged\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentExploreFavorite.js",["814","815"],"import { Box, Grid } from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport ContentExplorecard from '../components/explorecard/ContentExplorecardFavorite'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport * as apirequest from './api/api';\r\n\r\n// import { useSelector } from 'react-redux';\r\n\r\n\r\nconst ContentExploreFavorite = () => {\r\n\r\n    // const response = useSelector((state) => state.productSave);\r\n    const [allproducts, setAllproducts] = useState([])\r\n    const [pageNumber, setPageNumber] = useState(1)\r\n\r\n    useEffect(() => {\r\n        const setprod = async () => {\r\n\r\n            const allprod = await apirequest.getalllikedproducts({ 'pageNumber': pageNumber })\r\n\r\n            setAllproducts(allprod)\r\n\r\n        }\r\n        setprod()\r\n\r\n\r\n\r\n    }, [pageNumber])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     setAllproducts(response.products)\r\n    // }, [])\r\n\r\n    const addlikes = async (e, id) => {\r\n        const response = await apirequest.addlike(id)\r\n        if (+response.status === 200) {\r\n            const updatedproducts = allproducts.filter((val, key) => {\r\n                return [...allproducts, +val.id == +id ? val.isliked = !val.isliked : null]\r\n            })\r\n            setAllproducts(updatedproducts);\r\n            alert(response.message)\r\n\r\n        } else {\r\n            alert('something is went wrong')\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={2}>\r\n                {allproducts.map((val, index) => {\r\n                    return <Grid item md={4} sm={12} xs={12} lg={4} key={index}><ContentExplorecard val={val} likefun={addlikes} /></Grid>\r\n                })}\r\n            </Grid>\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" mt={5} mb={5}>\r\n                <Pagination count={10} color=\"primary\" />\r\n            </Box>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ContentExploreFavorite\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\api\\cardactionsapi.js",["816","817","818"],"import axios from 'axios';\r\n\r\n// const url = 'http://127.0.0.1:8000/'\r\nconst url = 'https://app.contentbond.com/'\r\nconst getCookie = (name) => {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nconst getToken = () => {\r\n  \r\n  try{\r\n    var unparsedtoken = localStorage.getItem('access_token');\r\n    var parsedtoken = JSON.parse(unparsedtoken);\r\n    return parsedtoken.access_token\r\n\r\n  }catch{\r\n    return 'sdfsdfonfsdfsd'\r\n  }\r\n  \r\n}\r\n\r\nexport const isactive = async (payload) => {\r\n\r\n  let statuscode = ''\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data',\r\n      'X-CSRFToken': getCookie('csrftoken')\r\n    }\r\n  }\r\n\r\n  const form_data = new FormData();\r\n  form_data.append('id', payload)\r\n  form_data.append('action', 'isactive')\r\n\r\n\r\n  await axios\r\n    .post(url + \"admin/productstatus/\", form_data, config)\r\n    .then(resp => { statuscode = resp.data })\r\n    .catch(error => error);\r\n\r\n  return statuscode\r\n}\r\n\r\nexport const instock = async (payload) => {\r\n\r\n  let statuscode = ''\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data',\r\n      'X-CSRFToken': getCookie('csrftoken')\r\n    }\r\n  }\r\n\r\n  const form_data = new FormData();\r\n  form_data.append('id', payload)\r\n  form_data.append('action', 'instock')\r\n\r\n\r\n  await axios\r\n    .post(url + \"admin/productstatus/\", form_data, config)\r\n    .then(resp => { statuscode = resp.data })\r\n    .catch(error => error);\r\n\r\n  return statuscode\r\n}\r\n\r\n\r\nexport const getProductChips = async (payload) => {\r\n\r\n  let statuscode = ''\r\n  let cancel\r\n  // cancelToken.source()\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data',\r\n      'X-CSRFToken': getCookie('csrftoken')\r\n    },\r\n    cancelToken: new axios.CancelToken(c => cancel = c)\r\n  }\r\n\r\n  const form_data = new FormData();\r\n\r\n  Object.entries(payload).forEach(([key, value]) => form_data.append(key, value));\r\n\r\n\r\n  await axios\r\n    .post(url + \"admin/getproductchip/\", form_data, config)\r\n    .then(resp => { statuscode = resp.data })\r\n    .catch(e => {\r\n      if (axios.isCancel(e)) return\r\n\r\n    })\r\n\r\n  return statuscode\r\n}\r\n\r\n\r\nexport const ProductUserSave = async (payload) => {\r\n\r\n  let statuscode = ''\r\n  let cancel\r\n  // cancelToken.source()\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data',\r\n      'X-CSRFToken': getCookie('csrftoken'),\r\n      'Authorization': 'Token '+getToken()\r\n    },\r\n    cancelToken: new axios.CancelToken(c => cancel = c)\r\n  }\r\n\r\n  const form_data = new FormData();\r\n\r\n  Object.entries(payload).forEach(([key, value]) => form_data.append(key, value));\r\n\r\n\r\n  await axios\r\n    .post(url + \"admin/saveproductsforusers/\", form_data, config)\r\n    .then(resp => { statuscode = resp.data })\r\n    .catch(e => {\r\n      if (axios.isCancel(e)) return\r\n\r\n    })\r\n\r\n  return statuscode\r\n}\r\n\r\nexport const ProductGroupSave = async (payload) => {\r\n\r\n  let statuscode = ''\r\n  let cancel\r\n  // cancelToken.source()\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data',\r\n      'X-CSRFToken': getCookie('csrftoken')\r\n    },\r\n    cancelToken: new axios.CancelToken(c => cancel = c)\r\n  }\r\n\r\n  const form_data = new FormData();\r\n\r\n  Object.entries(payload).forEach(([key, value]) => form_data.append(key, value));\r\n\r\n\r\n  await axios\r\n    .post(url + \"admin/saveproductsforgroups/\", form_data, config)\r\n    .then(resp => { statuscode = resp.data })\r\n    .catch(e => {\r\n      if (axios.isCancel(e)) return\r\n\r\n    })\r\n\r\n  return statuscode\r\n}","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\explorecard\\ContentExplorecardAdmin.js",["819","820","821","822","823","824"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\r\nimport { Box, Menu, MenuItem } from '@material-ui/core';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 'auto',\r\n    minHeight: '520px'\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport default function ContentExplorecardAdminRequests(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n\r\n\r\n\r\n  const options = [\r\n    'in_stock',\r\n    'is_active',\r\n\r\n\r\n  ];\r\n\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleIsactive = async (e, id, action) => {\r\n    setAnchorEl(null);\r\n    await props.handleIsactivemain(id, action)\r\n\r\n  };\r\n\r\n  const detailPagenavigator = async(id,isinterested) => {\r\n    history.push('/admin/section/'+id+'?interest='+isinterested)\r\n  }\r\n\r\n  // const handleInstock = (e,id) => {\r\n  //   setAnchorEl(null);\r\n  //   const response = cardapi.instock(id)\r\n  //   if(response.status===200){\r\n  //     alert('Success')\r\n  //   }else{\r\n  //     alert('Fail')\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        \r\n        action={\r\n          <>\r\n            <IconButton aria-label=\"settings\" onClick={handleClick} >\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"long-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={open}\r\n              onClose={handleClose}\r\n              PaperProps={{\r\n                style: {\r\n                  maxHeight: 48 * 4.5,\r\n                  width: '20ch',\r\n                },\r\n              }}\r\n            >\r\n              {options.map((val, index) => {\r\n                return (\r\n                  <MenuItem key={index} onClick={(e) => handleIsactive(e, props.val.id, val)}>\r\n                    {val == \"is_active\" ? props.val[val] ? 'Deactivate' : 'Activate' : props.val.in_stock ? 'Private' : 'Public'}\r\n                  </MenuItem>\r\n                  // <MenuItem key={index+1} onClick={(e) => handleInstock(e,props.val.id,'stock')}>\r\n                  //     {props.val.in_stock?'Private':'Public'}\r\n                  // </MenuItem>\r\n\r\n\r\n                )\r\n              })\r\n\r\n\r\n\r\n              }\r\n\r\n            </Menu>\r\n          </>\r\n        }\r\n        title={props.val.title.substring(0,48)}\r\n        subheader={<Moment format=\"YYYY/MM/DD HH:MM:SS\">{props.val.created.toLocaleString()}</Moment>}\r\n        onClick={(e)=>detailPagenavigator(props.val.id,props.val.isfavored)}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={`https://app.contentbond.com/media/${props.val.thumbnail}`}\r\n        title={props.val.title}\r\n        onClick={(e)=>detailPagenavigator(props.val.id,props.val.isfavored)}\r\n      />\r\n      <CardContent>\r\n        <Box display=\"flex\" justifyContent=\"flex-start\">\r\n          \r\n        <Link to={`/admin/profile/${props.val.author_id}`}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\r\n            {props.val.customauthor}\r\n\r\n          </Typography>\r\n          </Link>\r\n \r\n        </Box>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\r\n          {props.val.title.substring(0,130)}\r\n\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\r\n          {props.val.likedbyname}\r\n\r\n        </Typography>\r\n\r\n\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton color={props.val.isliked ? 'primary' : 'secondary'} aria-label=\"add to favorites\" onClick={(e) => props.likefun(e, props.val.id)}>\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\" color={props.val.isfavored ? 'primary' : 'secondary'} onClick={(e) => props.interestfun(e, props.val.id)}>\r\n          <LocalMallIcon />\r\n        </IconButton>\r\n\r\n      </CardActions>\r\n\r\n    </Card>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\explorecard\\ContentExplorecardFavorite.js",["825","826","827","828","829","830","831","832","833","834","835","836","837","838"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 'auto',\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function ContentExplorecard(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory()\r\n \r\n\r\n\r\n  const options = [\r\n    'in_stock',\r\n    'is_active',\r\n    \r\n\r\n  ];\r\n\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleIsactive =async (e,id,action) => {\r\n    setAnchorEl(null);\r\n    await props.handleIsactivemain(id,action)\r\n\r\n  };\r\n\r\n  const detailPagenavigator = async(id) => {\r\n    history.push('/admin/section/'+id)\r\n  }\r\n\r\n  // const handleInstock = (e,id) => {\r\n  //   setAnchorEl(null);\r\n  //   const response = cardapi.instock(id)\r\n  //   if(response.status===200){\r\n  //     alert('Success')\r\n  //   }else{\r\n  //     alert('Fail')\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        // avatar={\r\n        //   <Avatar aria-label=\"recipe\" className={classes.avatar} src={`https://app.contentbond.com/media/${props.val.thumbnail}`}>\r\n        //     R\r\n        //   </Avatar>\r\n        // }\r\n        // action={\r\n        //   <>\r\n        //     <IconButton aria-label=\"settings\" onClick={handleClick} >\r\n        //       <MoreVertIcon />\r\n        //     </IconButton>\r\n        //     <Menu\r\n        //       id=\"long-menu\"\r\n        //       anchorEl={anchorEl}\r\n        //       keepMounted\r\n        //       open={open}              \r\n        //       onClose={handleClose}\r\n        //       PaperProps={{\r\n        //         style: {\r\n        //           maxHeight: 48 * 4.5,\r\n        //           width: '20ch',\r\n        //         },\r\n        //       }}\r\n        //     >\r\n        //       {options.map((val,index) => {\r\n        //         return (\r\n        //         <MenuItem key={index} onClick={(e)=>handleIsactive(e,props.val.id,val)}>\r\n        //         {val == \"is_active\"?props.val[val]?'Deactivate':'Activate':props.val.in_stock?'Private':'Public'}\r\n        //       </MenuItem>\r\n        //       // <MenuItem key={index+1} onClick={(e) => handleInstock(e,props.val.id,'stock')}>\r\n        //       //     {props.val.in_stock?'Private':'Public'}\r\n        //       // </MenuItem>\r\n            \r\n            \r\n        //       )\r\n        //       })\r\n                \r\n               \r\n              \r\n        // }\r\n              \r\n        //     </Menu>\r\n        //   </>\r\n        // }\r\n        title={props.val.title}\r\n        subheader={props.val.created.toLocaleString()}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={`https://app.contentbond.com/media/${props.val.thumbnail}`}\r\n        title={props.val.title}\r\n        onClick={(e)=>detailPagenavigator(props.val.id)}\r\n      />\r\n      \r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {props.val.title}\r\n        </Typography>\r\n      </CardContent>\r\n\r\n      <CardActions disableSpacing>\r\n        <IconButton color={props.val.isliked?'primary':'secondary'} aria-label=\"add to favorites\" onClick={(e) => props.likefun(e,props.val.id)}>\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        {/* <IconButton aria-label=\"share\" color={props.val.isfavored?'primary':'secondary'} onClick={(e) => props.interestfun(e,props.val.id)}>\r\n          <LocalMallIcon />\r\n        </IconButton> */}\r\n\r\n      </CardActions>\r\n\r\n    </Card>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\explorecard\\ContentExplorecardBagged.js",["839","840","841","842","843","844","845","846","847","848","849","850","851","852"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 'auto',\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function ContentExplorecard(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n \r\n\r\n\r\n  const options = [\r\n    'in_stock',\r\n    'is_active',\r\n    \r\n\r\n  ];\r\n\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleIsactive =async (e,id,action) => {\r\n    setAnchorEl(null);\r\n    await props.handleIsactivemain(id,action)\r\n\r\n  };\r\n\r\n  const detailPagenavigator = async(id) => {\r\n    history.push('/admin/section/'+id)\r\n  }\r\n\r\n  // const handleInstock = (e,id) => {\r\n  //   setAnchorEl(null);\r\n  //   const response = cardapi.instock(id)\r\n  //   if(response.status===200){\r\n  //     alert('Success')\r\n  //   }else{\r\n  //     alert('Fail')\r\n  //   }\r\n  // };\r\n\r\n  \r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        // avatar={\r\n        //   <Avatar aria-label=\"recipe\" className={classes.avatar} src={`https://app.contentbond.com/media/${props.val.thumbnail}`}>\r\n        //     R\r\n        //   </Avatar>\r\n        // }\r\n        // action={\r\n        //   <>\r\n        //     <IconButton aria-label=\"settings\" onClick={handleClick} >\r\n        //       <MoreVertIcon />\r\n        //     </IconButton>\r\n        //     <Menu\r\n        //       id=\"long-menu\"\r\n        //       anchorEl={anchorEl}\r\n        //       keepMounted\r\n        //       open={open}              \r\n        //       onClose={handleClose}\r\n        //       PaperProps={{\r\n        //         style: {\r\n        //           maxHeight: 48 * 4.5,\r\n        //           width: '20ch',\r\n        //         },\r\n        //       }}\r\n        //     >\r\n        //       {options.map((val,index) => {\r\n        //         return (\r\n        //         <MenuItem key={index} onClick={(e)=>handleIsactive(e,props.val.id,val)}>\r\n        //         {val == \"is_active\"?props.val[val]?'Deactivate':'Activate':props.val.in_stock?'Private':'Public'}\r\n        //       </MenuItem>\r\n        //       // <MenuItem key={index+1} onClick={(e) => handleInstock(e,props.val.id,'stock')}>\r\n        //       //     {props.val.in_stock?'Private':'Public'}\r\n        //       // </MenuItem>\r\n            \r\n            \r\n        //       )\r\n        //       })\r\n                \r\n               \r\n              \r\n        // }\r\n              \r\n        //     </Menu>\r\n        //   </>\r\n        // }\r\n        title={props.val.title}\r\n        subheader={props.val.created.toLocaleString()}\r\n      />\r\n      \r\n      <CardMedia\r\n        className={classes.media}\r\n        image={`https://app.contentbond.com/media/${props.val.thumbnail}`}\r\n        title={props.val.title}\r\n        onClick={(e)=>detailPagenavigator(props.val.id)}\r\n      />\r\n\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {props.val.title}\r\n        </Typography>\r\n      </CardContent>\r\n\r\n      {\r\n      <CardActions disableSpacing>\r\n        {/* <IconButton color={props.val.isliked?'primary':'secondary'} aria-label=\"add to favorites\" onClick={(e) => props.likefun(e,props.val.id)}>\r\n          <FavoriteIcon />\r\n        </IconButton> */}\r\n        <IconButton aria-label=\"share\" color={props.val.isfavored?'primary':'secondary'} onClick={(e) => props.interestfun(e,props.val.id)}>\r\n          <LocalMallIcon />\r\n        </IconButton>\r\n\r\n      </CardActions>\r\n      }\r\n\r\n    </Card>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\UserEditModel.js",["853"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\nexport default function UserEditModel(props) {\r\n\r\n    const classes = useStyles();\r\n   \r\n    \r\n\r\n    // const handleChange = (e) => {\r\n    //     setUserupdateform({\r\n    //         ...userupdateform,\r\n    //         [e.target.name]:e.target.value\r\n    //     })\r\n    // };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open form dialog\r\n      </Button> */}\r\n            <Dialog open={props.usereditmodelopen} onClose={props.handleuserClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Edit</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        User Details\r\n          </DialogContentText>\r\n\r\n\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"demo-simple-select-label\">Role</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            name=\"role\"\r\n                            value={props.userupdateform.role}\r\n                            onChange={props.handleChangeeditForm}\r\n                        >\r\n                            <MenuItem value='user'>User</MenuItem>\r\n                            <MenuItem value='admin'>Admin</MenuItem>\r\n                            <MenuItem value='superuser'>SuperAdmin</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"demo-simple-select-label2\">Category</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label2\"\r\n                            id=\"demo-simple-select2\"\r\n                            name=\"category\"\r\n                            value={props.userupdateform.category}\r\n                            onChange={props.handleChangeeditForm}\r\n                        >\r\n                            <MenuItem value='creator'>Creator</MenuItem>\r\n                            <MenuItem value='producer'>Producer</MenuItem>\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={props.handleuserClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={props.handleUpdateSubmit} color=\"primary\">\r\n                        Update\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\api\\userapi.js",["854"],"import axios from 'axios';\r\n\r\n// const url = 'http://127.0.0.1:8000/'\r\nconst url = 'https://app.contentbond.com/'\r\n\r\nconst getCookie = (name) => {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\n\r\nconst getToken = () => {\r\n  var unparsedtoken = localStorage.getItem('access_token');\r\n  try{\r\n      var parsedtoken = JSON.parse(unparsedtoken);\r\n      return parsedtoken.access_token\r\n  }catch{\r\n      return null\r\n\r\n  }\r\n  \r\n}\r\n\r\nexport const isactive = async (payload) => {\r\n\r\n  let statuscode = ''\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data',\r\n      'X-CSRFToken': getCookie('csrftoken'),\r\n      'Authorization': 'Token '+getToken()\r\n      \r\n    }\r\n  }\r\n\r\n  const form_data = new FormData();\r\n  form_data.append('id', payload)\r\n  form_data.append('action', 'isactive')\r\n\r\n\r\n  await axios\r\n    .post(url + \"auth/admin/userupdate/\", form_data, config)\r\n    .then(resp => { statuscode = resp.data })\r\n    .catch(error => error);\r\n\r\n  return statuscode\r\n}\r\n\r\nexport const userupdate = async (payload) => {\r\n\r\n  let statuscode = ''\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data',\r\n      'X-CSRFToken': getCookie('csrftoken'),\r\n      'Authorization': 'Token '+getToken()\r\n    }\r\n  }\r\n\r\n  const form_data = new FormData();\r\n  form_data.append('id', payload.id)\r\n  form_data.append('role', payload.role)\r\n  form_data.append('category', payload.category)\r\n  form_data.append('action', 'userupdate')\r\n\r\n  await axios\r\n    .post(url + \"auth/admin/userupdate/\", form_data, config)\r\n    .then(resp => { statuscode = resp.data })\r\n    .catch(error => error);\r\n\r\n  return statuscode\r\n}\r\n\r\n\r\nexport const updateSecondaryProfile = async (payload) => {\r\n\r\n  let statuscode = ''\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'X-CSRFToken': getCookie('csrftoken'),\r\n      'Authorization': 'Token '+getToken()\r\n    }\r\n  }\r\n\r\n\r\n  const body = JSON.stringify({ user: payload, action: 'profileupdate' })\r\n\r\n  await axios\r\n    .post(url + \"auth/aboutme/\", body, config)\r\n    .then(resp => { statuscode = resp.data })\r\n    .catch(error => error);\r\n\r\n  return statuscode\r\n}\r\n\r\n\r\nexport const getdynoProfile = async (payload) => {\r\n\r\n  let statuscode = ''\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'X-CSRFToken': getCookie('csrftoken'),\r\n      'Authorization': 'Token '+getToken()\r\n    }\r\n  }\r\n\r\n\r\n  const params = {\r\n    profileid: payload,\r\n    action: 'get'\r\n  }\r\n\r\n  await axios\r\n    .get(url + \"auth/aboutmebyid/\", { params }, config)\r\n    .then(resp => { statuscode = resp.data })\r\n    .catch(error => error);\r\n\r\n  return statuscode\r\n}\r\n\r\n\r\n\r\nexport const primaryprofileupdate = async (payload) => {\r\n    \r\n  \r\n  let statuscode = ''\r\n  let cancel\r\n  // cancelToken.source()\r\n\r\n  const config = {\r\n      headers: {\r\n          'content-type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n          'Authorization': 'Token '+getToken()\r\n      },\r\n      cancelToken: new axios.CancelToken(c => cancel = c)\r\n  }\r\n\r\n\r\n  const body = JSON.stringify({ user: payload.data, action: 'update' })\r\n\r\n  await axios\r\n      .post(url + \"auth/whoamiprofileupdateid/\", body, config)\r\n      .then(resp => { statuscode = resp.data })\r\n      .catch(e => {\r\n          if (axios.isCancel(e)) return\r\n\r\n      })\r\n\r\n  return statuscode\r\n\r\n}\r\n\r\nexport const updateSecondaryProfilebyadmin = async (payload) => {\r\n\r\n  let statuscode = ''\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'X-CSRFToken': getCookie('csrftoken'),\r\n      'Authorization': 'Token '+getToken()\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  const body = JSON.stringify({ user: payload, action: 'profileupdate' })\r\n\r\n  await axios\r\n    .post(url + \"auth/whoamiprofileupdateid/\", body, config)\r\n    .then(resp => { statuscode = resp.data })\r\n    .catch(error => error);\r\n\r\n  return statuscode\r\n}","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\api\\authapi.js",["855","856","857"],"import axios from 'axios';\r\n\r\n// const url = 'http://127.0.0.1:8000/'\r\nconst url = 'https://app.contentbond.com/'\r\nconst getCookie = (name) => {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n        const cookie = cookies[i].trim();\r\n        // Does this cookie string begin with the name we want?\r\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  }\r\n\r\nexport const RegisterAccount = async (payload) =>{\r\n         \r\n    let statuscode = ''\r\n    const config = {\r\n      headers: {\r\n          'content-type': 'multipart/form-data',          \r\n          'X-CSRFToken': getCookie('csrftoken')\r\n      }\r\n    }\r\n  \r\n    const form_data = new FormData();\r\n\r\n    Object.entries(payload).forEach(([key, value]) =>  form_data.append(key, value));\r\n\r\n    form_data.append('action', 'isactive')\r\n    \r\n    \r\n \r\n    await axios\r\n      .post(url+\"auth/registeruser/\", form_data,config)\r\n      .then(resp => {statuscode=resp.data})\r\n      .catch(error => error);\r\n        \r\n      return statuscode\r\n      }\r\n\r\nexport const validatingUsername = async (payload) =>{\r\n         \r\n    let statuscode = ''\r\n    let cancel\r\n    // cancelToken.source()\r\n    const config = {\r\n      headers: {\r\n          'content-type': 'multipart/form-data',          \r\n          'X-CSRFToken': getCookie('csrftoken')\r\n      },\r\n      cancelToken: new axios.CancelToken(c => cancel = c)\r\n    }\r\n  \r\n    const form_data = new FormData();\r\n\r\n    Object.entries(payload).forEach(([key, value]) =>  form_data.append(key, value));\r\n\r\n    \r\n    \r\n    \r\n \r\n    await axios\r\n      .post(url+\"auth/registervalidation/\", form_data,config)\r\n      .then(resp => {statuscode=resp.data})\r\n      .catch(e => {\r\n      if (axios.isCancel(e)) return\r\n      \r\n        })\r\n        \r\n      return statuscode\r\n      }\r\n\r\nexport const getUsernameChips = async (payload) =>{\r\n    \r\n  let statuscode = ''\r\n  let cancel\r\n  // cancelToken.source()\r\n  const config = {\r\n    headers: {\r\n        'content-type': 'multipart/form-data',          \r\n        'X-CSRFToken': getCookie('csrftoken')\r\n    },\r\n    cancelToken: new axios.CancelToken(c => cancel = c)\r\n  }\r\n\r\n  const form_data = new FormData();\r\n\r\n  Object.entries(payload).forEach(([key, value]) =>  form_data.append(key, value));\r\n\r\n  \r\n  \r\n  \r\n\r\n  await axios\r\n    .post(url+\"auth/getuserchip/\", form_data,config)\r\n    .then(resp => {statuscode=resp.data})\r\n    .catch(e => {\r\n    if (axios.isCancel(e)) return\r\n    \r\n      })\r\n      \r\n    return statuscode\r\n    }\r\n\r\nexport const passwordReset =async (payload) => {\r\n  let statuscode = ''\r\n  let cancel\r\n  // cancelToken.source()\r\n  console.log(payload)\r\n  const config = {\r\n    headers: {\r\n        'content-type': 'application/json',          \r\n        'X-CSRFToken': getCookie('csrftoken')\r\n    },\r\n    cancelToken: new axios.CancelToken(c => cancel = c)\r\n  }\r\n\r\n  const form_data = new FormData();\r\n\r\n  Object.entries(payload).forEach(([key, value]) =>  form_data.append(key, value));\r\n\r\n  \r\n  \r\n  \r\n\r\n  await axios\r\n    .post(url+\"auth/password_reset/\", form_data,config)\r\n    .then(resp => {statuscode=resp.data})\r\n    .catch(e => {\r\n    if (axios.isCancel(e)) return\r\n    \r\n      })\r\n      \r\n    return statuscode\r\n    }\r\n\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\sagas\\api\\api.js",["858","859","860"],"import axios from 'axios';\r\n// const url = 'http://127.0.0.1:8000/'\r\nconst url = 'https://app.contentbond.com/'\r\nconst getCookie = (name) => {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nconst getToken = () => {\r\n  \r\n    try{\r\n      var unparsedtoken = localStorage.getItem('access_token');\r\n      var parsedtoken = JSON.parse(unparsedtoken);\r\n      return parsedtoken.access_token\r\n  \r\n    }catch{\r\n      return 'sdfsdfonfsdfsd'\r\n    }\r\n    \r\n  }\r\n\r\nexport const getUserProfilewithApiRequest = async (payload) => {\r\n\r\n    let statuscode = ''\r\n    let cancel\r\n    // cancelToken.source()\r\n    const config = {\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'X-CSRFToken': getCookie('csrftoken'),\r\n            'Authorization': 'Token '+getToken()\r\n            \r\n        },\r\n        // cancelToken: new axios.CancelToken(c => cancel = c)\r\n    }\r\n\r\n\r\n    const body = JSON.stringify({ user: payload.user, action: 'get' })\r\n\r\n    await axios\r\n        .post(url + \"auth/aboutme/\", body, config)\r\n        .then(resp => { statuscode = resp.data })\r\n        .catch(e => {\r\n            if (axios.isCancel(e)) return\r\n\r\n        })\r\n\r\n    return statuscode\r\n}\r\n\r\n\r\nexport const updateUserProfilewithApiRequest = async (payload) => {\r\n    \r\n    console.log(\"UpdateProfile api step saga called..\");\r\n    let statuscode = ''\r\n    let cancel\r\n    // cancelToken.source()\r\n\r\n    const config = {\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'X-CSRFToken': getCookie('csrftoken'),\r\n            'Authorization': 'Token '+getToken()\r\n        },\r\n        cancelToken: new axios.CancelToken(c => cancel = c)\r\n    }\r\n\r\n\r\n    const body = JSON.stringify({ user: payload.data, action: 'update' })\r\n\r\n    await axios\r\n        .post(url + \"auth/aboutme/\", body, config)\r\n        .then(resp => { statuscode = resp.data })\r\n        .catch(e => {\r\n            statuscode = 400\r\n            if (axios.isCancel(e)) return\r\n\r\n        })\r\n\r\n    return statuscode\r\n\r\n}\r\n\r\nexport const getProductById = async (payload) => {\r\n    \r\n    \r\n    let statuscode = ''\r\n    let cancel\r\n    // cancelToken.source()\r\n\r\n    const config = {\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'X-CSRFToken': getCookie('csrftoken'),\r\n            'Authorization': 'Token '+getToken()\r\n            // 'Authorization':'Token ae2e376c0781973c42fc3e261d854ea6b9532cb3'\r\n        },\r\n        cancelToken: new axios.CancelToken(c => cancel = c)\r\n    }\r\n\r\n\r\n    const body = JSON.stringify({ productid: payload, action: 'all' })\r\n\r\n    await axios\r\n        .post(url + \"admin/getproductbyid/\", body, config)\r\n        .then(resp => { statuscode = resp.data })\r\n        .catch(e => {\r\n            if (axios.isCancel(e)) return\r\n\r\n        })\r\n\r\n    return statuscode\r\n\r\n}\r\n\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\sagas\\Profile.js",["861","862","863","864"],"/**\r\n * Auth Sagas\r\n */\r\nimport { all, call, fork, put, takeEvery, takeLatest, takeLeading } from \"redux-saga/effects\";\r\n\r\nimport axios from 'axios';\r\nimport {\r\n\r\n    UPDATE_PROFILE_PRIMARY,\r\n    UPDATE_PROFILE_PRIMARY_SUCCESS,\r\n    UPDATE_PROFILE_PRIMARY_FAILURE,\r\n    GET_USER_PROFILE_DATA,\r\n    GET_USER_PROFILE_DATA_SUCCESS,\r\n    GET_USER_PROFILE_DATA_FAIL\r\n\r\n} from \"../actions/types\";\r\nimport {updateUserProfilewithApiRequest,getUserProfilewithApiRequest} from './api/api'\r\n\r\n\r\nfunction* updateUserProfilewithApi({ payload }) {\r\n    debugger;\r\n    try {\r\n        const ProfileResponse = yield call(\r\n            updateUserProfilewithApiRequest,\r\n            payload\r\n\r\n        );\r\n\r\n        if (ProfileResponse.status == 200) {\r\n            yield put({\r\n                type: UPDATE_PROFILE_PRIMARY_SUCCESS,\r\n                payload: ProfileResponse.response\r\n\r\n            })\r\n\r\n        }else{\r\n            yield put({\r\n                type: UPDATE_PROFILE_PRIMARY_FAILURE,\r\n                payload: ProfileResponse.response\r\n\r\n            })\r\n        }\r\n        \r\n    }\r\n    catch (error) {\r\n        yield put({\r\n            type: UPDATE_PROFILE_PRIMARY_FAILURE\r\n\r\n\r\n        })\r\n\r\n    }\r\n    console.log(\"UpdateProfile 2nd  gen step saga called..\");\r\n    //   yield put();\r\n    // console.log(signOutResponse)\r\n}\r\n\r\n\r\nfunction* getUserProfilewithApi({ payload }) {\r\n\r\n    const ProfileResponse = yield call(\r\n      getUserProfilewithApiRequest,\r\n      payload\r\n  \r\n    );\r\n  \r\n    if (ProfileResponse.status == 200) {\r\n      yield put({\r\n        type: GET_USER_PROFILE_DATA_SUCCESS,\r\n        payload: ProfileResponse.response\r\n  \r\n      })\r\n  \r\n    } else {\r\n        yield put({\r\n            type: GET_USER_PROFILE_DATA_FAIL,\r\n            payload: ProfileResponse.response\r\n      \r\n          })\r\n    }\r\n    //   yield put();\r\n    // console.log(signOutResponse)\r\n  }\r\n\r\nexport function* profileUpdateSage() {\r\n    console.log(\"UpdateProfile saga called..\");\r\n    debugger;\r\n    \r\n    yield takeLeading(UPDATE_PROFILE_PRIMARY, updateUserProfilewithApi);\r\n}\r\n\r\n\r\n\r\n// Profile Operations\r\n\r\nexport function* getuserProfile() {\r\n    console.log(\"GetProfile saga called..\");\r\n    yield takeEvery(GET_USER_PROFILE_DATA, getUserProfilewithApi);\r\n  }\r\n  \r\n  \r\n  \r\n  // End Profile Operations\r\n\r\n/**\r\n * Profile Root Saga\r\n */\r\nexport default function* rootSaga() {\r\n    console.log(\"Profile Saga Completed\");\r\n    yield all([\r\n\r\n        fork(profileUpdateSage),\r\n        fork(getuserProfile)\r\n    ]);\r\n}","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\reducers\\ProfileReducer.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\actions\\ProfileActions.js",["865"],"import {    \r\n    GET_USER_PROFILE_DATA,\r\n    UPDATE_PROFILE_PRIMARY,\r\n    UPDATE_PROFILE_SECONDARY\r\n} from \"./types\";\r\n\r\n\r\nexport const ProfileUpdatePrimary = (data) => (\r\n    console.log('update Profile action called'),\r\n    {\r\n        type: UPDATE_PROFILE_PRIMARY,\r\n        payload: data\r\n    }\r\n);\r\n\r\nexport const ProfileUpdateSecondary = () => (\r\n\r\n    {\r\n        type: UPDATE_PROFILE_SECONDARY\r\n    }\r\n);\r\n\r\n// Profile Operations\r\nexport const getProfileData = (data) => (\r\n \r\n    {\r\n      type: GET_USER_PROFILE_DATA,\r\n      payload:data\r\n    }\r\n  );","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\autocomplete\\Autocompletetags.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\IconList\\UserlistIcon.js",["866"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { FaceRounded } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function UserlistIcon(props) {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  const handleToggle = (value,chiplable) => () => {\r\n    const currentIndex = props.chipdata.indexOf(chiplable);\r\n    console.log(currentIndex)\r\n    const newChecked = [...props.chipdata];\r\n\r\n    if (currentIndex === -1) {        \r\n      newChecked.push(value);\r\n      props.handleAddChip(chiplable)\r\n      \r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n      props.handleDeleteChip(chiplable,currentIndex)\r\n      \r\n    }\r\n\r\n    setChecked(newChecked);\r\n    // setChecked((chips) => chips.filter((chip, chipindex) => chipindex !== index));\r\n    \r\n    \r\n  };\r\n\r\n  return (\r\n    <List dense className={classes.root}>\r\n      {props.chipuser.map((value,index) => {\r\n        const labelId = `checkbox-list-secondary-label-${value.username}`;\r\n        return (\r\n          <ListItem key={index} button>\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                alt={`Avatar n°${index + 1}`}\r\n                src={'https://i.pinimg.com/originals/7c/c7/a6/7cc7a630624d20f7797cb4c8e93c09c1.png'}\r\n              ><FaceRounded />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText id={value.id} primary={value.username} />\r\n            <ListItemSecondaryAction>\r\n              <Checkbox\r\n                edge=\"end\"\r\n                onChange={handleToggle(value.id,value.username)}\r\n                checked={props.chipdata.indexOf(value.username) !== -1}\r\n                inputProps={{ 'aria-labelledby': labelId }}\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\IconList\\Producticonlist.js",["867"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { FaceRounded } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Producticonlist(props) {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  const handleToggle = (value,chiplable) => () => {\r\n    const currentIndex = props.chipdata.indexOf(chiplable);\r\n    console.log(currentIndex)\r\n    const newChecked = [...props.chipdata];\r\n\r\n    if (currentIndex === -1) {        \r\n      newChecked.push(value);\r\n      props.handleAddChip(chiplable)\r\n      \r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n      props.handleDeleteChip(chiplable,currentIndex)\r\n      \r\n    }\r\n\r\n    setChecked(newChecked);\r\n    // setChecked((chips) => chips.filter((chip, chipindex) => chipindex !== index));\r\n    \r\n    \r\n  };\r\n\r\n  return (\r\n    <List dense className={classes.root}>\r\n      {props.chipuser.map((value,index) => {\r\n        const labelId = `checkbox-list-secondary-label-${value.title}`;\r\n        return (\r\n          <ListItem key={index} button>\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                alt={`Avatar n°${index + 1}`}\r\n                src={'https://cdn2.iconfinder.com/data/icons/product-packaging-color-line/48/product_packaging_pixel_perfect_color_line_icons_2-cardboard-512.png'}\r\n              ><FaceRounded />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText id={value.id} primary={value.title} />\r\n            <ListItemSecondaryAction>\r\n              <Checkbox\r\n                edge=\"end\"\r\n                onChange={handleToggle(value.id,value.title)}\r\n                checked={props.chipdata.indexOf(value.title) !== -1}\r\n                inputProps={{ 'aria-labelledby': labelId }}\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\Recommended.js",["868"],"import { Box, Grid } from '@material-ui/core'\r\nimport React,{useState,useEffect} from 'react'\r\nimport RecommendExplorecard from '../components/explorecard/RecommendExplorecard'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport * as apirequest from './api/api';\r\n\r\n// import { useSelector } from 'react-redux';\r\n\r\n\r\nconst Recommended = () => {    \r\n    \r\n    // const response = useSelector((state) => state.productSave);\r\n    const [allproducts,setAllproducts] = useState([])    \r\n    const [pageNumber, setPageNumber] = useState(1)\r\n\r\n    useEffect(() => {\r\n        const setprod = async() =>{\r\n\r\n            const allprod = await apirequest.getallrecommendedproducts({'pageNumber':pageNumber})\r\n            \r\n            setAllproducts(allprod)\r\n\r\n        }\r\n        setprod()\r\n        \r\n\r\n        \r\n    }, [pageNumber])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     setAllproducts(response.products)\r\n    // }, [])\r\n    \r\n\r\n    return (\r\n       <>\r\n            <Grid container spacing={2}>\r\n            {allproducts.map((val,index) => {\r\n                return <Grid item md={4} sm={12} xs={12} lg={4} key={index}><RecommendExplorecard val={val} /></Grid>\r\n            })}\r\n            </Grid>\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" mt={5} mb={5}>\r\n                <Pagination count={10} color=\"primary\" />\r\n            </Box>\r\n            \r\n</>\r\n           \r\n        \r\n    )\r\n}\r\n\r\nexport default Recommended\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ConfirmPassword.js",["869","870"],"import React from \"react\";\r\nimport {\r\n  Button,\r\n  Paper,\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\n\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport HttpsOutlinedIcon from \"@material-ui/icons/HttpsOutlined\";\r\nimport { Link } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    height: \"100vh\",\r\n    padding: 10,\r\n    backgroundColor: \"#fff\",\r\n    label: {\r\n      textTransform: \"capitalize\",\r\n    },\r\n    signinform: {},\r\n    \"& .MuiInputBase-input\": {\r\n      backgroundColor: grey[100],\r\n      outline: \"none\",\r\n      borderRadius: 5,\r\n    },\r\n    \"& .MuiInputLabel-formControl\": {\r\n      color: grey[800],\r\n    },\r\n  },\r\n  bordertopcolor: {\r\n    borderTop: `8px solid ${theme.palette.primary.main}`,\r\n    borderRadius: 10,\r\n  },\r\n  pageTitle: {\r\n    position: \"absolute\",\r\n    left: \"44vw\",\r\n    top: 80,\r\n    // height:'4vh',\r\n    // padding:10\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      top: 100,\r\n      left: \"28vw\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ConfirmPassword = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Box className={classes.pageTitle}>\r\n        {/* <Typography component=\"h4\" variant=\"h4\">\r\n          MoviePlex\r\n        </Typography> */}\r\n      </Box>\r\n      <Box component=\"section\" className={classes.root}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={8}\r\n          md={4}\r\n          component={Paper}\r\n          elevation={6}\r\n          square\r\n          className={classes.bordertopcolor}\r\n        >\r\n          {/* <LinearProgress value={40} /> */}\r\n          <Box display=\"flex\" flexDirection=\"column\" p={3}>\r\n            <Box\r\n              display=\"flex\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Typography\r\n                component=\"h5\"\r\n                variant=\"h5\"\r\n                style={{ marginBottom: \"5%\" }}\r\n              >\r\n                Change New Password\r\n              </Typography>\r\n              <HttpsOutlinedIcon style={{ marginBottom: \"5%\" }} />\r\n            </Box>\r\n\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"New Passowrd\"\r\n              type=\"password\"\r\n              style={{ marginBottom: \"5%\" }}\r\n              required\r\n            />\r\n             \r\n\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              classes={{ label: classes.root.label }}\r\n              style={{ marginTop: \"3%\" }}\r\n            >\r\n              Reset\r\n            </Button>\r\n            <Box\r\n              display=\"flex\"\r\n              alignContent=\"center\"\r\n              justifyContent=\"space-between\"\r\n              mt={3}\r\n            >\r\n              <Typography component=\"h5\" variant=\"body2\">\r\n                Don't have an account ?{\" \"}\r\n                <Link\r\n                  to=\"/auth/signup\"\r\n                  style={{ textDecorationColor: \"none\", color: \"inherit\" }}\r\n                >\r\n                  Sign up\r\n                </Link>\r\n              </Typography>\r\n              <Typography component=\"h5\" variant=\"body2\">\r\n                <Link\r\n                  to=\"/auth/signin\"\r\n                  style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                >\r\n                  Back\r\n                </Link>\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConfirmPassword;\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\explorecard\\RecommendExplorecard.js",["871","872","873","874","875","876","877","878","879","880","881","882","883"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 'auto',\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function RecommendExplorecard(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n \r\n\r\n\r\n  const options = [\r\n    'in_stock',\r\n    'is_active',\r\n    \r\n\r\n  ];\r\n\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleIsactive =async (e,id,action) => {\r\n    setAnchorEl(null);\r\n    await props.handleIsactivemain(id,action)\r\n\r\n  };\r\n\r\n  const detailPagenavigator = async(id) => {\r\n    history.push('/admin/section/'+id)\r\n  }\r\n\r\n  // const handleInstock = (e,id) => {\r\n  //   setAnchorEl(null);\r\n  //   const response = cardapi.instock(id)\r\n  //   if(response.status===200){\r\n  //     alert('Success')\r\n  //   }else{\r\n  //     alert('Fail')\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        // avatar={\r\n        //   <Avatar aria-label=\"recipe\" className={classes.avatar} src={`https://app.contentbond.com${props.val.thumbnail}`}>\r\n        //     R\r\n        //   </Avatar>\r\n        // }\r\n        // action={\r\n        //   <>\r\n        //     <IconButton aria-label=\"settings\" onClick={handleClick} >\r\n        //       <MoreVertIcon />\r\n        //     </IconButton>\r\n        //     <Menu\r\n        //       id=\"long-menu\"\r\n        //       anchorEl={anchorEl}\r\n        //       keepMounted\r\n        //       open={open}              \r\n        //       onClose={handleClose}\r\n        //       PaperProps={{\r\n        //         style: {\r\n        //           maxHeight: 48 * 4.5,\r\n        //           width: '20ch',\r\n        //         },\r\n        //       }}\r\n        //     >\r\n        //       {options.map((val,index) => {\r\n        //         return (\r\n        //         <MenuItem key={index} onClick={(e)=>handleIsactive(e,props.val.id,val)}>\r\n        //         {val == \"is_active\"?props.val[val]?'Deactivate':'Activate':props.val.in_stock?'Private':'Public'}\r\n        //       </MenuItem>\r\n        //       // <MenuItem key={index+1} onClick={(e) => handleInstock(e,props.val.id,'stock')}>\r\n        //       //     {props.val.in_stock?'Private':'Public'}\r\n        //       // </MenuItem>\r\n            \r\n            \r\n        //       )\r\n        //       })\r\n                \r\n               \r\n              \r\n        // }\r\n              \r\n        //     </Menu>\r\n        //   </>\r\n        // }\r\n        title={props.val.title}\r\n        subheader={props.val.created.toLocaleString()}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={`https://app.contentbond.com${props.val.thumbnail}`}\r\n        title={props.val.title}\r\n        onClick={(e)=>detailPagenavigator(props.val.id)}\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {props.val.title}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton color={props.val.isliked?'primary':'secondary'} aria-label=\"add to favorites\" onClick={(e) => props.likefun(e,props.val.id)}>\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\" color={props.val.isfavored?'primary':'secondary'} onClick={(e) => props.interestfun(e,props.val.id)}>\r\n          <LocalMallIcon />\r\n        </IconButton>\r\n\r\n      </CardActions>\r\n\r\n    </Card>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\chat\\nav\\Nav.js",["884"],"import React, { Component } from \"react\";\nimport \"./nav.css\";\nimport logo from \"../../../assets/img/invoice-logo.png\";\n\nexport default class Nav extends Component {\n  render() {\n    return (\n      <div className=\"nav\">\n        {/* <div className=\"nav__blocks\">\n          <img src={logo}></img>\n          \n        </div> */}\n        <div className=\"nav__blocks\"></div>\n        <div className=\"nav__blocks\"></div>\n      </div>\n    );\n  }\n}\n",["885","886"],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\chat\\chatBody\\ChatBody.js",["887"],"import React, { Component } from \"react\";\nimport \"./chatBody.css\";\nimport ChatList from \"../chatList/ChatList\";\nimport ChatContent from \"../chatContent/ChatContent\";\nimport UserProfile from \"../userProfile/UserProfile\";\n\nexport default class ChatBody extends Component {\n  render() {\n    return (\n      <div className=\"main__chatbody\">\n        <ChatList />\n        <ChatContent />\n        {/* <UserProfile /> */}\n      </div>\n    );\n  }\n}\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\chat\\userProfile\\UserProfile.js",["888"],"import React, { Component } from \"react\";\nimport \"./userProfile.css\";\nimport logo from \"../../../assets/img/user-4.jpg\";\n\nexport default class UserProfile extends Component {\n  toggleInfo = (e) => {\n    e.target.parentNode.classList.toggle(\"open\");\n  };\n  render() {\n    return (\n      <div className=\"main__userprofile\">\n        <div className=\"profile__card user__profile__image\">\n          <div className=\"profile__image\">\n            <img src={logo} />\n          </div>\n          <h4>Fernando Faucho</h4>\n          <p>CEO & Founder at Highly Inc</p>\n        </div>\n        <div className=\"profile__card\">\n          <div className=\"card__header\" onClick={this.toggleInfo}>\n            <h4>Information</h4>\n            <i className=\"fa fa-angle-down\"></i>\n          </div>\n          <div className=\"card__content\">\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla\n            ultrices urna a imperdiet egestas. Donec in magna quis ligula\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\chat\\chatContent\\ChatContent.js",["889","890","891","892","893"],"import React, { Component, useState, createRef, useEffect } from \"react\";\n\nimport \"./chatContent.css\";\nimport Avatar from \"../chatList/Avatar\";\nimport ChatItem from \"./ChatItem\";\nimport profilepic from \"../../../assets/img/user-4.jpg\";\nimport {getchatmessages} from '../../../container/api/message'\nimport axios from \"axios\";\n\n\n\nexport default class ChatContent extends Component {\n  messagesEndRef = createRef(null);\n  chatItms = [\n    {\n      key: 1,\n      image:profilepic,\n      type: \"\",\n      msg: \"Hi Tim, How are you?\",\n    },\n    \n  ];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      chat: this.chatItms,\n      msg: \"\",\n      pagenumber:1\n    };\n  }\n\n  scrollToBottom = () => {\n    this.messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  componentDidMount() {\n\n    window.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode == 13) {\n        if (this.state.msg != \"\") {\n          this.chatItms.push({\n            key: 1,\n            type: \"\",\n            msg: this.state.msg,\n            image:\n              \"https://pbs.twimg.com/profile_images/1116431270697766912/-NfnQHvh_400x400.jpg\",\n          });\n          this.setState({ chat: [...this.chatItms] });\n          this.scrollToBottom();\n          this.setState({ msg: \"\" });\n        }\n      }\n    });\n    this.scrollToBottom();\n\n\n    // const getCookie = (name) => {\n    //   let cookieValue = null;\n    //   if (document.cookie && document.cookie !== '') {\n    //     const cookies = document.cookie.split(';');\n    //     for (let i = 0; i < cookies.length; i++) {\n    //       const cookie = cookies[i].trim();\n    //       // Does this cookie string begin with the name we want?\n    //       if (cookie.substring(0, name.length + 1) === (name + '=')) {\n    //         cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n    //         break;\n    //       }\n    //     }\n    //   }\n    //   return cookieValue;\n    // }\n    \n    const config = {\n      headers: {\n          'content-type': 'application/json',\n          'Authorization':'Token 22cab19ad1b1ed66a1d69bcb849ceb9af0f6ac54'          \n          // 'X-CSRFToken': getCookie('csrftoken')\n      }\n    }\n    \n\n\n    const url = 'https://app.contentbond.com/'\n    const params = {\n      currentpage:this.state.pagenumber\n    }\n\n    axios\n    .get(url+\"admin/chat/savemessage/\",{params},config)\n    .then(resp => {\n     this.setState({\n      chat: resp.data.mesgs\n     })\n    })\n    .catch(error => error);\n\n  }\n\n\n\n  paginateUsersnext(pn) {\n    const url = 'https://app.contentbond.com/'\n      const params = {\n        currentpage: pn + 1\n      }\n\n      axios\n      .get(url+\"admin/chat/savemessage/\",{params},this.config)\n      .then(resp => {\n       this.setState({\n        chat: resp.data.mesgs,\n        pagenumber:this.state.pagenumber + 1\n       })\n      })\n      .catch(error => error);\n\n  }\n\n  paginateUsersback(pn) {\n    const url = 'https://app.contentbond.com/'\n      const params = {\n        currentpage: pn - 1\n      }\n\n      axios\n      .get(url+\"admin/chat/savemessage/\",{params},this.config)\n      .then(resp => {\n       this.setState({\n        chat: resp.data.mesgs,\n        pagenumber:this.state.pagenumber - 1\n       })\n      })\n      .catch(error => error);\n\n  }\n\n\n\n  onStateChange = (e) => {\n    this.setState({ msg: e.target.value });\n  };\n\n\n\n  render() {\n    return (\n      <div className=\"main__chatcontent\">\n        <div className=\"content__header\">\n          <div className=\"blocks\">\n            <div className=\"current-chatting-user\">\n              <Avatar\n                isOnline=\"active\"\n                image=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTA78Na63ws7B7EAWYgTr9BxhX_Z8oLa1nvOA&usqp=CAU\"\n              />\n              <p>Tim Hover</p>\n            </div>\n          </div>\n\n          <div className=\"blocks\">\n            <div className=\"settings\">\n              <button className=\"btn-nobg\">\n                <i className=\"fa fa-cog\"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"content__body\">\n          <div className=\"chat__items\">\n            {this.state.chat.map((itm, index) => {\n              return (\n                <ChatItem\n                  animationDelay={index + 2}\n                  key={itm.key}\n                  user={itm.type ? itm.type : \"me\"}\n                  msg={itm.msg}\n                  timedate={itm.created}\n                  image={'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTA78Na63ws7B7EAWYgTr9BxhX_Z8oLa1nvOA&usqp=CAU'}\n                />\n              );\n            })}\n            <div ref={this.messagesEndRef} />\n          </div>\n          <div style={{display:'flex', flexDireaction:'row', justifyContent:'space-between',marginTop:'10%',alignItems:'center'}}>\n          <button className=\"btn\" style={{margin:'5px',textAlign:'center'}} onClick={() =>this.paginateUsersback(this.state.pagenumber)}>{'< Back'}</button>\n          <button className=\"btn\" style={{margin:'5px',textAlign:'center'}} onClick={() => this.paginateUsersnext(this.state.pagenumber)}>{'Next >'}</button>\n          </div>\n        </div>\n        <div className=\"content__footer\">\n          <div className=\"sendNewMessage\">\n            <button className=\"addFiles\">\n              <i className=\"fa fa-plus\"></i>\n            </button>\n            <input\n              type=\"text\"\n              placeholder=\"Type a message here\"\n              onChange={this.onStateChange}\n              value={this.state.msg}\n            />\n            <button className=\"btnSendMsg\" id=\"sendMsgBtn\">\n              <i className=\"fa fa-paper-plane\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\chat\\chatList\\ChatList.js",["894","895","896","897"],"import { getchatusers } from \"container/api/message\";\nimport React, { Component } from \"react\";\nimport \"./chatList.css\";\nimport ChatListItems from \"./ChatListItems\";\nimport axios from 'axios';\n\n\nconst getCookie = (name) => {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nconst config = {\n  headers: {\n      'content-type': 'application/json',\n      'Authorization':'Token 22cab19ad1b1ed66a1d69bcb849ceb9af0f6ac54'          \n      // 'X-CSRFToken': getCookie('csrftoken')\n  }\n}\n\nexport default class ChatList extends Component {\n \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pagenumber:1,\n      allChats: [{\n            image: \"https://pbs.twimg.com/profile_images/770394499/female.png\",\n            id: 10,\n            name: \"Manpreet David\",\n            active: false,\n            isOnline: true,\n          }],\n      \n    };\n  }\n\n  \n\n  componentDidMount(){\n      const url = 'https://app.contentbond.com/'\n      const params = {\n        currentpage:this.state.pagenumber\n      }\n\n      axios\n      .get(url+\"admin/chat/users/\",{params},this.config)\n      .then(resp => {\n       this.setState({\n        allChats: resp.data.users\n       })\n      })\n      .catch(error => error);\n      \n\n\n\n  }\n\n  paginateUsersnext(pn) {\n    const url = 'https://app.contentbond.com/'\n      const params = {\n        currentpage: pn + 1\n      }\n\n      axios\n      .get(url+\"admin/chat/users/\",{params},this.config)\n      .then(resp => {\n       this.setState({\n        allChats: resp.data.users,\n        pagenumber:this.state.pagenumber + 1\n       })\n      })\n      .catch(error => error);\n\n  }\n\n  paginateUsersback(pn) {\n    const url = 'https://app.contentbond.com/'\n      const params = {\n        currentpage: pn - 1\n      }\n\n      axios\n      .get(url+\"admin/chat/users/\",{params},this.config)\n      .then(resp => {\n       this.setState({\n        allChats: resp.data.users,\n        pagenumber:this.state.pagenumber - 1\n       })\n      })\n      .catch(error => error);\n\n  }\n\n  render() {\n    return (\n      \n      <div className=\"main__chatlist\">\n        \n        {/* <button className=\"btn\">\n          <i className=\"fa fa-plus\"></i>\n          <span>New conversation</span>\n        </button> */}\n\n\n        <div className=\"chatlist__heading\">\n          <h2>Chats</h2>\n          <button className=\"btn-nobg\">\n            <i className=\"fa fa-ellipsis-h\"></i>\n          </button>\n        </div>\n\n        {/* Search Bar */}\n        {/* <div className=\"chatList__search\">\n          <div className=\"search_wrap\">\n            <input type=\"text\" placeholder=\"Search Here\" required />\n            <button className=\"search-btn\">\n              <i className=\"fa fa-search\"></i>\n            </button>\n          </div>\n        </div> */}\n        {/* Search Bar */}\n        <div className=\"chatlist__items\">\n          \n          {this.state.allChats != undefined && this.state.allChats.map((item, index) => {\n            return (\n              <ChatListItems\n                name={item.email}\n                key={item.first_name}\n                animationDelay={index + 1}\n                active={\"active\"}\n                isOnline={\"active\"}\n                image={\"https://pbs.twimg.com/profile_images/770394499/female.png\"}\n              />\n            );\n          })}\n         \n        </div>\n        <div style={{display:'flex', flexDireaction:'row', justifyContent:'space-between',marginTop:'10%',alignItems:'center'}}>\n          <button className=\"btn\" style={{margin:'5px',textAlign:'center'}} onClick={() =>this.paginateUsersback(this.state.pagenumber)}>{'< Back'}</button>\n          <button className=\"btn\" style={{margin:'5px',textAlign:'center'}} onClick={() => this.paginateUsersnext(this.state.pagenumber)}>{'Next >'}</button>\n          </div>\n      </div>\n    );\n  }\n}\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\chat\\chatContent\\ChatItem.js",["898"],"import React, { Component } from \"react\";\nimport Avatar from \"../chatList/Avatar\";\nimport Moment from 'react-moment';\n\nexport default class ChatItem extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div\n        style={{ animationDelay: `0.8s` }}\n        className={`chat__item ${this.props.user ? this.props.user : \"\"}`}\n      >\n        <div className=\"chat__item__content\">\n          <div className=\"chat__msg\">{this.props.msg}</div>\n          <div className=\"chat__meta\">\n            \n            <span><Moment fromNow>{this.props.timedate}</Moment></span>\n            \n          </div>\n        </div>\n        <Avatar isOnline=\"active\" image={this.props.image} />\n      </div>\n    );\n  }\n}\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\chat\\chatList\\Avatar.js",["899"],"import React, { Component } from \"react\";\n\nexport default class Avatar extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div className=\"avatar\">\n        <div className=\"avatar-img\">\n          <img src={this.props.image} alt=\"#\" />\n        </div>\n        <span className={`isOnline ${this.props.isOnline}`}></span>\n      </div>\n    );\n  }\n}\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\chat\\chatList\\ChatListItems.js",["900"],"import React, { Component } from \"react\";\nimport Avatar from \"./Avatar\";\n\nexport default class ChatListItems extends Component {\n  constructor(props) {\n    super(props);\n  }\n  selectChat = (e) => {\n    for (\n      let index = 0;\n      index < e.currentTarget.parentNode.children.length;\n      index++\n    ) {\n      e.currentTarget.parentNode.children[index].classList.remove(\"active\");\n    }\n    e.currentTarget.classList.add(\"active\");\n  };\n\n  render() {\n    return (\n      <div\n        style={{ animationDelay: `0.${this.props.animationDelay}s` }}\n        onClick={this.selectChat}\n        className={`chatlist__item ${\n          this.props.active ? this.props.active : \"\"\n        } `}\n      >\n        <Avatar\n          image={\n            this.props.image ? this.props.image : \"http://placehold.it/80x80\"\n          }\n          isOnline={this.props.isOnline}\n        />\n\n        <div className=\"userMeta\">\n          <p>{this.props.name}</p>\n          <span className=\"activeTime\">32 mins ago</span>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\api\\productapi.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\reducers\\selectors\\AuthSelector.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\reducers\\selectors\\ProfileSelector.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\Detailcard\\Detailcard.js",["901","902","903","904","905","906","907","908","909","910","911","912","913"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport { Box, Button, Card, CardContent, Chip, Grid, Typography } from '@material-ui/core';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport { getProductById } from 'sagas/api/api';\r\nimport ReactPlayer from 'react-player/lazy'\r\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\r\n// import * as apirequest from '../../../api/api';\r\nimport * as apirequest from '../../container/api/api';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-between',\r\n    overflow: 'hidden',\r\n    // backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    flexWrap: 'nowrap',\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: 'translateZ(0)',\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n  imgcls:{\r\n    width: '100%',\r\n    height: 'auto'\r\n  }\r\n}));\r\n\r\n\r\n\r\nconst tileData = [\r\n  {\r\n    img: 'https://material-ui.com/static/images/grid-list/star.jpg',\r\n    title: 'Image Title',\r\n    author: 'Nagendra',\r\n  },\r\n  {\r\n    img: 'https://material-ui.com/static/images/grid-list/bike.jpg',\r\n    title: 'Image Title',\r\n    author: 'Nagendra',\r\n  },\r\n  {\r\n    img: 'https://material-ui.com/static/images/grid-list/olive.jpg',\r\n    title: 'Image Title',\r\n    author: 'Nagendra',\r\n  }\r\n\r\n];\r\n\r\nconst Detailcard = (props) => {\r\n  const classes = useStyles();\r\n  const [post, setPost] = React.useState([]);  \r\n  const gethist = new URLSearchParams(props.location.search)\r\n  const isinterest = gethist.get('interest')\r\n  const [favorite, setFavorite] = React.useState(null);\r\n\r\n\r\n  React.useEffect(() => {\r\n\r\n    const getsingleproduct = async () => {\r\n      const data = await getProductById(props.match.params.id)     \r\n      setFavorite(isinterest)\r\n      if (data.obs.length > 0) {\r\n        setPost(data.obs[0])\r\n      }\r\n\r\n    }\r\n    \r\n    getsingleproduct()\r\n\r\n\r\n\r\n\r\n  }, [])\r\n\r\n  const addfavorites = async (e, id) => {\r\n    const response = await apirequest.addinterest(id)\r\n\r\n    if (+response.status === 200) {\r\n      \r\n      if(response.message == \"removedbuy\"){\r\n        setFavorite('false')\r\n      }\r\n      if(response.message == \"addedbuy\"){\r\n        setFavorite('true')\r\n      }\r\n        alert(response.message)\r\n\r\n    } else {\r\n      \r\n        alert('something is went wrong')\r\n    }\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={2}>\r\n\r\n\r\n        <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\r\n          <Card style={{padding:\"2%\"}}>\r\n            <Typography variant=\"h5\" component=\"h3\">Title: {post.title}</Typography><br></br>\r\n            <Typography component=\"p\" variant=\"subtitle1\"><Chip size=\"small\" color=\"primary\" label=\"Description : \"></Chip> {post.description}</Typography>\r\n            <br></br>\r\n            <Typography component=\"p\" variant=\"subtitle1\"><Chip size=\"small\" color=\"primary\" label={\"Language : \"}></Chip>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {post.language}</Typography>\r\n            <br></br>\r\n            <Typography component=\"p\" variant=\"subtitle1\"><Chip size=\"small\" color=\"primary\" label=\"Country : \"></Chip>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {post.country}</Typography>\r\n            <br></br>\r\n            <Typography component=\"p\" variant=\"subtitle1\"><Chip size=\"small\" color=\"primary\" label=\"Rights : \"></Chip>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {post.rights}</Typography>\r\n            <br></br>\r\n            <Typography component=\"p\" variant=\"subtitle1\"><Chip size=\"small\" color=\"primary\" label=\"Category : \"></Chip>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {post.category}</Typography>\r\n            <br></br>\r\n            <Typography component=\"p\" variant=\"subtitle1\"><Chip size=\"small\" color=\"primary\" label=\"Genere : \"></Chip>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {post.genre}</Typography>\r\n            <br></br>\r\n            <Typography component=\"p\" variant=\"subtitle1\"><Chip size=\"small\" color=\"primary\" label=\"Keywords : \"></Chip>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {post.keywords}</Typography>\r\n            <br></br>\r\n            <Typography component=\"p\" variant=\"subtitle1\"><Chip size=\"small\" color=\"primary\" label=\"Region : \"></Chip>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {post.rightsregion}</Typography>\r\n            <br></br>\r\n            <Typography component=\"p\" variant=\"subtitle1\"><Chip size=\"small\" color=\"primary\" label=\"Runtime(minuts) : \"></Chip>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {post.runtime}</Typography>\r\n            <br></br>\r\n            <Typography component=\"p\" variant=\"subtitle1\"><Chip size=\"small\" color=\"primary\" label=\"No.of Videos : \"></Chip>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {post.numbofvideos}</Typography>\r\n            <br></br>\r\n            <Typography component=\"p\" variant=\"subtitle1\"><Chip size=\"small\" color=\"primary\" label=\"Terms & Conditions : \"></Chip>&nbsp;{post.termsconditions}</Typography>\r\n            <br></br><Typography component=\"p\" variant=\"subtitle1\"><Chip size=\"small\" color=\"primary\" label=\"Cost : \"></Chip>&nbsp;{post.price} USD</Typography>\r\n            <IconButton aria-label=\"share\" color={favorite==\"true\"?'primary':'secondary'} onClick={(e) => addfavorites(e,post.id)}>\r\n          <LocalMallIcon />\r\n        </IconButton>\r\n\r\n          {favorite == \"true\" ?\"Added to list\":\"Add to list\"}\r\n\r\n          \r\n          \r\n            \r\n            {/* <Button variant=\"outlined\" color=\"primary\" size=\"small\" onClick={() => props.history.goBack()}>Back</Button> */}\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n          <div>\r\n            <ReactPlayer className='reactplayer' playIcon playing={false} controls={true} url={`https://app.contentbond.com/media/uploads/58339943_276469819969410_211101138701778944_n_XhFjQT5.mp4`} />\r\n          </div>\r\n          <br></br>\r\n          <Chip color=\"secondary\" size=\"small\" label=\"Thumbnail:\" />\r\n          <div>\r\n            <br></br>           \r\n           \r\n          <img className={classes.imgcls} src={`https://app.contentbond.com/media/${post.thumbnail}`} alt=\"thumbnail\" />\r\n          </div>\r\n\r\n        </Grid>\r\n\r\n\r\n      </Grid>\r\n\r\n      <Grid container spacing={1}>\r\n      \r\n\r\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <Card>\r\n            <CardContent>\r\n            <Chip color=\"secondary\" size=\"small\" label=\"Banner1:\" />\r\n              <img src={`https://app.contentbond.com/media/${post.thumbnail1}`} alt=\"thumbnail\" style={{ width: '100%', height: 'auto' }} />\r\n            </CardContent>\r\n          </Card>\r\n          <Card>\r\n            <CardContent>\r\n            <Chip color=\"secondary\" size=\"small\" label=\"Banner2:\" />\r\n              <img src={`https://app.contentbond.com/media/${post.thumbnail2}`} alt=\"thumbnail\" style={{ width: '100%', height: 'auto' }} />\r\n            </CardContent>\r\n          </Card>\r\n          <Card>\r\n            <CardContent>\r\n            <Chip color=\"secondary\" size=\"small\" label=\"Banner3:\" />\r\n              <img src={`https://app.contentbond.com/media/${post.thumbnail3}`} alt=\"thumbnail\" style={{ width: '100%', height: 'auto' }} />\r\n            </CardContent>\r\n          </Card>\r\n         \r\n \r\n        </Grid>\r\n    </Grid>\r\n\r\n      {/* <GridList className={classes.gridList} cols={2.5}>\r\n\r\n\r\n        <GridListTile>\r\n          <img src={`https://app.contentbond.com/media/${post.thumbnail1}`} alt={post.title} />\r\n          <GridListTileBar\r\n            title={post.title}\r\n            classes={{\r\n              root: classes.titleBar,\r\n              title: classes.title,\r\n            }}\r\n            actionIcon={\r\n              <IconButton aria-label={`star ${post.title}`}>\r\n                <StarBorderIcon className={classes.title} />\r\n              </IconButton>\r\n            }\r\n          />\r\n        </GridListTile>\r\n\r\n\r\n        <GridListTile>\r\n          <img src={`https://app.contentbond.com/media/${post.thumbnail2}`} alt={post.title} />\r\n          <GridListTileBar\r\n            title={post.title}\r\n            classes={{\r\n              root: classes.titleBar,\r\n              title: classes.title,\r\n            }}\r\n            actionIcon={\r\n              <IconButton aria-label={`star ${post.title}`}>\r\n                <StarBorderIcon className={classes.title} />\r\n              </IconButton>\r\n            }\r\n          />\r\n        </GridListTile>\r\n\r\n        <GridListTile>\r\n          <img src={`https://app.contentbond.com/media/${post.thumbnail3}`} alt={post.title} />\r\n          <GridListTileBar\r\n            title={post.title}\r\n            classes={{\r\n              root: classes.titleBar,\r\n              title: classes.title,\r\n            }}\r\n            actionIcon={\r\n              <IconButton aria-label={`star ${post.title}`}>\r\n                <StarBorderIcon className={classes.title} />\r\n              </IconButton>\r\n            }\r\n          />\r\n        </GridListTile>\r\n\r\n\r\n      </GridList> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Detailcard\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\api\\message.js",["914"],"import axios from 'axios';\r\n\r\n// const url = 'http://127.0.0.1:8000/'\r\nconst url = 'https://app.contentbond.com/'\r\n\r\nconst getCookie = (name) => {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n        const cookie = cookies[i].trim();\r\n        // Does this cookie string begin with the name we want?\r\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  }\r\n\r\n  const config = {\r\n    headers: {\r\n        'content-type': 'application/json',\r\n        'Authorization':'Token 22cab19ad1b1ed66a1d69bcb849ceb9af0f6ac54'          \r\n        // 'X-CSRFToken': getCookie('csrftoken')\r\n    }\r\n  }\r\n\r\n  export const getchatusers = async (payload) =>{\r\n         \r\n    let statuscode = ''\r\n    \r\n  \r\n    // const form_data = new FormData();\r\n    // form_data.append('id', payload)\r\n    // form_data.append('action', 'getusers')\r\n    \r\n \r\n    await axios\r\n      .get(url+\"admin/chat/users/\",config)\r\n      .then(resp => {statuscode=resp.data})\r\n      .catch(error => error);\r\n        \r\n      return statuscode\r\n      }\r\n\r\nexport const getchatmessages = async (payload) =>{\r\n    \r\n  let statuscode = ''\r\n  \r\n\r\n  // const form_data = new FormData();\r\n  // form_data.append('id', payload)\r\n  // form_data.append('action', 'getusers')\r\n  \r\n\r\n  await axios\r\n    .get(url+\"admin/chat/savemessage/\",config)\r\n    .then(resp => {statuscode=resp.data})\r\n    .catch(error => error);\r\n      \r\n    return statuscode\r\n    }\r\n    \r\n\r\nexport const postchatmessages = async (payload) =>{\r\n\r\n  let statuscode = ''\r\n  \r\n\r\n  const form_data = new FormData();\r\n  form_data.append('msg', payload.msg)\r\n  form_data.append('category', payload.category)\r\n  \r\n\r\n  await axios\r\n    .post(url+\"admin/chat/savemessage/\",form_data,config)\r\n    .then(resp => {statuscode=resp.data})\r\n    .catch(error => error);\r\n      \r\n    return statuscode\r\n    }","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\Dashboardseller.js",["915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932"],"import React from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Avatar, Box, Chip, Typography } from '@material-ui/core';\r\nimport AttachMoneyOutlinedIcon from '@material-ui/icons/AttachMoneyOutlined';\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { amber, green, red, pink } from '@material-ui/core/colors';\r\nimport { Doughnut, Bar } from 'react-chartjs-2';\r\nimport Apexchartdemo from './Apexchartdemo'\r\nimport TrafficByDevice from './TrafficByDevice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link,useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        display: 'flex',\r\n        padding: theme.spacing(2, 3),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        height: '100%'\r\n\r\n    },\r\n    avatarcolor: {\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    headingtext: {\r\n        fontSize: '12px',\r\n        fontWeight: 'bold',\r\n        textTransform: 'uppercase'\r\n    },\r\n    pricetext: {\r\n        color: \"#000\",\r\n        fontSize: '18px',\r\n        fontWeight: 'bold',\r\n        textTransform: 'uppercase'\r\n    },\r\n    chipnumber: {\r\n        borderRadius: 5,\r\n        padding: theme.spacing(0.8, 0.5),\r\n        fontSize: '12px'\r\n\r\n    }\r\n}));\r\nconst data = {\r\n    datasets: [{\r\n        barPercentage: 0.5,\r\n        barThickness: 6,\r\n        maxBarThickness: 8,\r\n        minBarLength: 2,\r\n        data: [10, 20, 30, 40, 50, 60, 70]\r\n    }]\r\n};\r\n\r\n\r\nconst Dashboardseller = () => {\r\n    const classes = useStyles();\r\n\r\n    const [responsedata,setResponsedata] = React.useState({\r\n        sellerenquiries:0,\r\n        likedcount:0,\r\n        interestcount:0,\r\n        totaluploads:0\r\n    })\r\n\r\n    const dispatch = useDispatch()\r\n    const response = useSelector(state => state.profileops.profile.user_ptr)\r\n    const profileresponse = useSelector(state => state.profileops.profile)\r\n    const history = useHistory();\r\n\r\n\r\n    // const url = 'http://127.0.0.1:8000/'\r\n    const url = 'https://app.contentbond.com/'\r\n\r\n    const getToken = () => {\r\n        \r\n        try{\r\n            var unparsedtoken = localStorage.getItem('access_token');\r\n            var parsedtoken = JSON.parse(unparsedtoken);\r\n            return parsedtoken.access_token\r\n        }catch{\r\n            return 'sdfsdfsdfsdf'\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    const config = {\r\n        headers: {\r\n          'content-type': 'application/json',\r\n          'Authorization': 'Token '+ getToken()\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        // if(profileresponse.content != \"creator\"){\r\n        //     return history.push('/admin/profile')\r\n        // }\r\n\r\n        const loadDashboard = async() => {\r\n            await axios\r\n            .get(url + \"admin/dashboardviewseller/\", config)\r\n            .then(resp => { \r\n\r\n                setResponsedata({\r\n                    ...responsedata,\r\n                    \r\n                    sellerenquiries:resp.data.sellerenquiries,\r\n                    likedcount:resp.data.likedcount,\r\n                    interestcount:resp.data.interestcount,\r\n                    totaluploads:resp.data.totaluploads\r\n\r\n                })\r\n                \r\n             })\r\n            .catch(error => {\r\n                alert(error.message)\r\n            });\r\n    \r\n      \r\n\r\n        }\r\n\r\n        loadDashboard();\r\n        \r\n        \r\n    }, [])\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={3}>\r\n\r\n                <Grid item xs={12} sm={3}>\r\n                    <Paper className={classes.paper}>\r\n                        <Box display=\"flex\" alignItems=\"flex-start\" flexDirection=\"column\">\r\n                            <Typography component='p' className={classes.headingtext}>\r\n                                TOTAL UPLOADS\r\n                        </Typography>\r\n                            <Box component='div' className={classes.pricetext}>\r\n                                {responsedata.totaluploads} \r\n\r\n                                {/* <Box component=\"p\"\r\n                                    className={classes.chipnumber}\r\n                                    style={{\r\n                                        color: green[800],\r\n                                        backgroundColor: green[100],\r\n                                    }}>\r\n                                    +4%\r\n                                </Box> */}\r\n\r\n                            </Box>\r\n                        </Box>\r\n                        <Avatar className={classes.avatarcolor}>\r\n                            <PeopleIcon />\r\n                        </Avatar>\r\n\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                    <Paper className={classes.paper}>\r\n                        <Box display=\"flex\" alignItems=\"flex-start\" flexDirection=\"column\">\r\n                            <Typography component='p' className={classes.headingtext}>\r\n                                INTERESTS\r\n                        </Typography>\r\n                            <Box component='div' className={classes.pricetext}>\r\n                            {responsedata.interestcount}    \r\n                            {/* <Box component=\"p\"\r\n                                    className={classes.chipnumber}\r\n                                    style={{\r\n                                        color: red[800],\r\n                                        backgroundColor: red[100],\r\n                                    }}>\r\n                                    +4%\r\n                            </Box> */}\r\n                            </Box>\r\n                        </Box>\r\n                        <Avatar className={classes.avatarcolor}>\r\n                            <PeopleIcon />\r\n                        </Avatar>\r\n\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                    <Paper className={classes.paper}>\r\n                        <Box display=\"flex\" alignItems=\"flex-start\" flexDirection=\"column\">\r\n                            <Typography component='p' className={classes.headingtext}>\r\n                               SELLER ENQUIRIES\r\n                        </Typography>\r\n                            <Box component='div' className={classes.pricetext}>\r\n                            {responsedata.sellerenquiries} \r\n                                {/* <Box component=\"div\"\r\n                                    className={classes.chipnumber}\r\n                                    style={{\r\n                                        color: pink[800],\r\n                                        backgroundColor: pink[100],\r\n                                    }}>\r\n                                    +4%\r\n                                </Box> */}\r\n                            </Box>\r\n                        </Box>\r\n                        <Avatar className={classes.avatarcolor}>\r\n                            <InsertChartIcon />\r\n                        </Avatar>\r\n\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={3}>\r\n                    <Paper className={classes.paper}>\r\n                        <Box display=\"flex\" alignItems=\"flex-start\" flexDirection=\"column\">\r\n                            <Typography component='p' className={classes.headingtext}>\r\n                            FAVORITES\r\n                        </Typography>\r\n                            <Box component='div' className={classes.pricetext}>\r\n                            {responsedata.likedcount} \r\n                                {/* <Box component=\"div\"\r\n                                    className={classes.chipnumber}\r\n                                    style={{\r\n                                        color: pink[800],\r\n                                        backgroundColor: pink[100],\r\n                                    }}>\r\n                                    +4%\r\n                                </Box> */}\r\n                            </Box>\r\n                        </Box>\r\n                        <Avatar className={classes.avatarcolor}>\r\n                            <MoneyIcon />\r\n                        </Avatar>\r\n\r\n                    </Paper>\r\n                </Grid>\r\n\r\n\r\n            </Grid>\r\n               \r\n\r\n            {/* <Grid container spacing={3}>\r\n\r\n                <Grid item xs={12} sm={8}>\r\n                    <Apexchartdemo />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n\r\n                    <TrafficByDevice />\r\n\r\n                </Grid>\r\n\r\n            </Grid> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboardseller\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\Dashboardbuyer.js",["933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950"],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentEdit.js",["951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973"],"import { Box, Button, Card, FormControl, FormControlLabel, Grid, Input, Paper, TextField, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport CustomizedDate from '../components/ModelDialogue/CustomizedDate'\r\nimport CustomizedInputs from '../components/ModelDialogue/CustomizedInputs'\r\nimport CustomizedSelect from '../components/ModelDialogue/CustomizedSelect'\r\nimport SelectFieldCustom from '../components/SelectFieldCustom/SelectFieldCustom'\r\nimport FileUpload from '../components/button/FileUpload'\r\nimport * as Yup from \"yup\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FormikField from \"../components/formikcontrol/FormikField\";\r\nimport Fileuploadbutton from '../components/button/Fileuploadbutton'\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { AlertTitle } from '@material-ui/lab';\r\nimport { addProductwithApiRequest, saverequestProductwithApiRequest,editProductsave } from './api/productapi.js';\r\nimport { getProductById } from 'sagas/api/api';\r\n\r\nconst ContentEdit = (props) => {\r\n    // const [fields, setFields] = React.useState([{ label: 'Cost' }])\r\n    // const [selectFields] = React.useState([{ label: 'SuperAdmin', value: 'superuser' }, { label: 'Admin', value: 'Author' }, { label: 'User', value: 'user' }])\r\n    // const selectcategoryFields = [{ label: 'Creator', value: 'creator' }, { label: 'Producer', value: 'Producer' }, { label: 'Hybrid', value: 'hybrid' }, { label: 'None of the above', value: 'none' }]\r\n    // const [requestfields, setRequestfields] = React.useState([{ label: 'Title' }, { label: 'Description' }, { label: 'Thumbnail' }, { label: 'Video File' }, { label: 'Rights Details' }, { label: 'Cast and Crew' }, { label: 'Cost of the project' }, { label: 'Date of Creation' }, { label: 'Cost' }])\r\n    // const [issubmitting, setIssubmitting] = React.useState(false);\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [alertseverity, setAlertseverity] = React.useState('success')\r\n    const [productmessage, setProductmessage] = React.useState('')\r\n\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n    const [selectedCategory, setSelectedCategory] = React.useState('');\r\n\r\n    const [authortype, setAuthortype] = React.useState('creator')\r\n   \r\n    const [post, setPost] = React.useState({\r\n        author_id: 0,\r\n        castncrew: \"\",\r\n        created: \"\",\r\n        customauthor: \"\",\r\n        description: \"\",\r\n        id: 0,\r\n        in_stock: true,\r\n        is_active: true,\r\n        isfavored: false,\r\n        isliked: false,\r\n        price: 0,\r\n        rights: \"\",\r\n        slug: \"\",\r\n        thumbnail: \"\",\r\n        thumbnail1: \"\",\r\n        thumbnail2: \"\",\r\n        thumbnail3: \"\",\r\n        title: \"\",\r\n        videofile: \"\",\r\n    })\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const response = useSelector((state) => state.productSave);\r\n    const userresponse = useSelector((state) => state.profileops.profile);\r\n\r\n\r\n\r\n \r\n\r\n    React.useEffect(() => {\r\n        const getsingleproduct = async () => {\r\n            const data = await getProductById(props.match.params.id)\r\n        \r\n            if(data.obs.length > 0){\r\n                setPost({\r\n\r\n                    ...post,\r\n                    id: data.obs[0].id,\r\n                    thumbnail: data.obs[0].thumbnail,\r\n                    thumbnail1: data.obs[0].thumbnail1,\r\n                    thumbnail2:data.obs[0].thumbnail2,\r\n                    thumbnail3: data.obs[0].thumbnail3,\r\n                    title: data.obs[0].title,\r\n                    description:data.obs[0].description,\r\n                    videofile: data.obs[0].videofile,\r\n                    rights:data.obs[0].rights,\r\n                    castncrew:data.obs[0].castncrew,\r\n                    price:data.obs[0].price\r\n                    \r\n\r\n                })\r\n            }\r\n\r\n        }\r\n        getsingleproduct()\r\n        console.log(post)\r\n\r\n        \r\n    }, [])\r\n\r\n    \r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n        console.log(date)\r\n    };\r\n\r\n    // SnackBar\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const handlecategoryChange = (e) => {\r\n        setSelectedCategory(e.target.value)\r\n\r\n    }\r\n\r\n\r\n    const handlefileChange = (e) => {\r\n        setPost({\r\n            ...post,\r\n            [e.target.id]: e.target.files[0]\r\n        })\r\n       \r\n\r\n    }\r\n\r\n \r\n    const handleChnage = (e) => {\r\n        setPost({\r\n            ...post,\r\n            [e.target.name]:e.target.value})\r\n\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log(post)\r\n        const resp =  await editProductsave(post)\r\n        console.log(resp)\r\n        \r\n    }\r\n\r\n\r\n\r\n    const vertical = \"top\"\r\n    const horizontal = \"right\"\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar anchorOrigin={{ vertical, horizontal }} open={open} autoHideDuration={4000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={alertseverity}>\r\n                    {productmessage}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            {userresponse.content == \"creator\" && !userresponse.user_ptr.is_superuser ?\r\n                <Grid container spacing={1}>\r\n\r\n                    \r\n\r\n\r\n                    <Grid item md={8} sm={12} xs={12}>\r\n                        <Card>\r\n                            <Box p={1}>\r\n                                <Typography>\r\n                                    Submit Content (Seller)\r\n                   </Typography>\r\n                            </Box>\r\n                            <Box p={2}>\r\n                                \r\n                                            <form onSubmit={handleSubmit}>\r\n                                                <Grid item md={12} sm={12} lg={12}>\r\n                                                    <TextField\r\n                                                        value= {post.title}\r\n                                                        name=\"title\"\r\n                                                        onChange={handleChnage}\r\n                                                        label=\"title\"\r\n                                                        type=\"text\"\r\n                                                        required\r\n                                                        variant=\"outlined\"\r\n                                                        fullWidth\r\n                                                        style={{marginBottom:15}}\r\n                                                        InputLabelProps = {{shrink:true}}\r\n                                                    /><br></br>\r\n                                                    <TextField\r\n                                                        value= {post.description}\r\n                                                        name=\"description\"\r\n                                                        onChange={handleChnage}\r\n                                                        label=\"description\"\r\n                                                        type=\"text\"\r\n                                                        required\r\n                                                        variant=\"outlined\"\r\n                                                        fullWidth\r\n                                                        style={{marginBottom:15}}\r\n                                                        InputLabelProps = {{shrink:true}}\r\n                                                    /><br></br>\r\n                                                    <TextField\r\n                                                        value= {post.rights}\r\n                                                        name=\"rights\"\r\n                                                        onChange={handleChnage}\r\n                                                        label=\"rights\"\r\n                                                        type=\"text\"\r\n                                                        required\r\n                                                        variant=\"outlined\"\r\n                                                        style={{marginBottom:15}}\r\n                                                        InputLabelProps = {{shrink:true}}\r\n                                                        fullWidth\r\n\r\n                                                    /><br></br>\r\n                                                    <TextField\r\n                                                        value= {post.castncrew}\r\n                                                        name=\"castncrew\"\r\n                                                        onChange={handleChnage}\r\n                                                        label=\"castncrew\"\r\n                                                        type=\"text\"\r\n                                                        required\r\n                                                        variant=\"outlined\"\r\n                                                        style={{marginBottom:15}}\r\n                                                        InputLabelProps = {{shrink:true}}\r\n                                                        fullWidth\r\n                                                    /><br></br>\r\n                                                    <TextField\r\n                                                        value= {post.price}\r\n                                                        name=\"price\"\r\n                                                        onChange={handleChnage}\r\n                                                        label=\"price\"\r\n                                                        type=\"text\"\r\n                                                        required\r\n                                                        variant=\"outlined\"\r\n                                                        style={{marginBottom:15}}\r\n                                                        InputLabelProps = {{shrink:true}}\r\n                                                        fullWidth\r\n                                                    /><br></br>\r\n                                                    {/* <Input type=\"file\" id=\"thumbnail\" name=\"thumbnail\" onChange={handlefileChange}></Input>\r\n                                                 <Input type=\"file\" id=\"video\" name=\"video\" onChange={handlefileChange}></Input> */}\r\n\r\n                                                    <img src={`https://app.contentbond.com/media/${post.thumbnail}`} \r\n                                                    alt=\"tumbnail title\"\r\n                                                    width=\"320\"\r\n                                                    height=\"160\"                                                    \r\n                                                    />\r\n                                                    <div>\r\n                                                        <input\r\n                                                            accept=\"image/*\"\r\n                                                            style={{ display: 'none' }}\r\n                                                            id=\"thumbnail\"\r\n                                                            name=\"thumbnail\"\r\n                                                            type=\"file\"\r\n                                                            onChange={handlefileChange}\r\n                                                        />\r\n                                                        <label htmlFor=\"thumbnail\">\r\n                                                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                                                Change Thumbnail &nbsp;<BackupIcon />\r\n                                                            </Button>\r\n                                                        </label>\r\n                                                        {JSON.stringify(post.thumbnail.name)}\r\n                                                    </div>\r\n\r\n                                                    <br></br>\r\n                                                    <img src={`https://app.contentbond.com/media/${post.videofile}`} \r\n                                                    alt=\"tumbnail title\"\r\n                                                    width=\"320\"\r\n                                                    height=\"160\"                                                    \r\n                                                    />\r\n                                                    <div>\r\n                                                        <Input\r\n                                                            accept=\"video/*\"\r\n                                                            style={{ display: 'none' }}\r\n                                                            id=\"videofile\"\r\n                                                            name=\"videofile\"\r\n                                                            type=\"file\"\r\n                                                            onChange={handlefileChange}\r\n                                                        />\r\n                                                        <label htmlFor=\"videofile\">\r\n                                                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                                                Change Video &nbsp;<BackupIcon />\r\n                                                            </Button>\r\n                                                        </label>\r\n                                                        {JSON.stringify(post.videofile.name)}\r\n                                                    </div>\r\n                                                    <br></br>\r\n                                                    <img src={`https://app.contentbond.com/media/${post.thumbnail1}`} \r\n                                                    alt=\"tumbnail title\"\r\n                                                    width=\"320\"\r\n                                                    height=\"160\"                                                    \r\n                                                    />\r\n                                                    <div>\r\n                                                        <input\r\n                                                            accept=\"image/*\"\r\n                                                            style={{ display: 'none' }}\r\n                                                            id=\"thumbnail1\"\r\n                                                            name=\"thumbnail1\"\r\n                                                            type=\"file\"\r\n                                                            onChange={handlefileChange}\r\n                                                        />\r\n                                                        <label htmlFor=\"thumbnail1\">\r\n                                                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                                                Change Banner1 &nbsp;<BackupIcon />\r\n                                                            </Button>\r\n                                                        </label>\r\n                                                        {JSON.stringify(post.thumbnail1.name)}\r\n                                                    </div>\r\n\r\n                                                    <br></br>\r\n\r\n                                                    <img src={`https://app.contentbond.com/media/${post.thumbnail2}`} \r\n                                                    alt=\"tumbnail title\"\r\n                                                    width=\"320\"\r\n                                                    height=\"160\"                                                    \r\n                                                    />\r\n\r\n                                                    <div>\r\n                                                        <input\r\n                                                            accept=\"image/*\"\r\n                                                            style={{ display: 'none' }}\r\n                                                            id=\"thumbnail2\"\r\n                                                            name=\"thumbnail2\"\r\n                                                            type=\"file\"\r\n                                                            onChange={handlefileChange}\r\n                                                        />\r\n                                                        <label htmlFor=\"thumbnail2\">\r\n                                                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                                                Change Banner2 &nbsp;<BackupIcon />\r\n                                                            </Button>\r\n                                                        </label>\r\n                                                        {JSON.stringify(post.thumbnail2.name)}\r\n                                                    </div>\r\n\r\n                                                    <br></br>\r\n                                                    <img src={`https://app.contentbond.com/media/${post.thumbnail3}`} \r\n                                                    alt=\"tumbnail title\"\r\n                                                    width=\"320\"\r\n                                                    height=\"160\"                                                    \r\n                                                    />\r\n                                                    <div>\r\n                                                        <input\r\n                                                            accept=\"image/*\"\r\n                                                            style={{ display: 'none' }}\r\n                                                            id=\"thumbnail3\"\r\n                                                            name=\"thumbnail3\"\r\n                                                            type=\"file\"                                                            \r\n                                                            onChange={handlefileChange}\r\n                                                        />\r\n                                                        <label htmlFor=\"thumbnail3\">\r\n                                                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                                                Change Banner3 &nbsp;<BackupIcon />\r\n                                                            </Button>\r\n                                                        </label>\r\n                                                        {JSON.stringify(post.thumbnail3.name)}\r\n                                                    </div>\r\n\r\n                                                    <br></br>\r\n                                                    <Box style={{ marginLeft: '-1%' }}>\r\n                                                        <CustomizedSelect\r\n                                                            value={post.category}\r\n                                                            fieldname={'Type'}\r\n                                                            label=\"category\"\r\n                                                            handlecategoryChange={handlecategoryChange}\r\n                                                            selectedCategory={selectedCategory}\r\n                                                        />\r\n                                                    </Box>\r\n\r\n                                                    {/* <CustomizedDate\r\n                                                label=\"createdat\"\r\n                                                handleDateChange={handleDateChange}\r\n                                                selectedDate={selectedDate}\r\n                                            /> */}\r\n\r\n                                                    <Box pl={1} pt={2}>\r\n                                                        <Button type=\"submit\" color=\"primary\" variant=\"contained\"\r\n                                                            \r\n                                                        >Submit</Button>\r\n                                                    </Box>\r\n\r\n\r\n                                                </Grid>\r\n                                            </form>\r\n                                       \r\n                            </Box>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n\r\n                : null}\r\n\r\n            <br></br>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContentEdit\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentExploreAdminRequests.js",["974","975","976"],"import { Box, Grid } from '@material-ui/core'\r\nimport React,{useState,useEffect} from 'react'\r\nimport ContentExplorecard from '../components/explorecard/ContentExplorecardAdminRequests'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport * as apirequest from './api/api';\r\nimport * as cardapi from './api/cardactionsapi';\r\n\r\n// import { useSelector } from 'react-redux';\r\n\r\n\r\nconst ContentExploreAdminRequests = () => {    \r\n    \r\n    // const response = useSelector((state) => state.productSave);\r\n    const [allproducts,setAllproducts] = useState([])    \r\n    const [pageNumber, setPageNumber] = useState(1)\r\n    // const [alertseverity, setAlertseverity] = React.useState('success')\r\n    // const [productmessage, setProductmessage] = React.useState('')\r\n    // const [open, setOpen] = React.useState(false)\r\n\r\n    useEffect(() => {\r\n        const setprod = async() =>{\r\n\r\n            const allprod = await apirequest.getallbaggedproducts({ 'pageNumber': pageNumber })\r\n            \r\n            setAllproducts(allprod)\r\n\r\n        }\r\n        setprod()\r\n        \r\n\r\n        \r\n    }, [pageNumber])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     setAllproducts(response.products)\r\n    // }, [])\r\n\r\n    const addfavorites = async (e, id) => {\r\n        const response = await apirequest.addinterest(id)\r\n\r\n        if (+response.status === 200) {\r\n            const updatedproducts = allproducts.filter((val, key) => {\r\n                return [...allproducts, +val.id == +id ? val.isfavored = !val.isfavored : null]\r\n            })\r\n            setAllproducts(updatedproducts);\r\n            alert(response.message)\r\n\r\n        } else {\r\n            alert('something is went wrong')\r\n        }\r\n    }\r\n\r\n    return (\r\n       <>\r\n            <Grid container spacing={2}>\r\n            {allproducts.map((val,index) => {\r\n                return <Grid item md={4} sm={12} xs={12} lg={4} key={index}><ContentExplorecard val={val} interestfun={addfavorites} /></Grid>\r\n            })}\r\n            </Grid>\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" mt={5} mb={5}>\r\n                <Pagination count={10} color=\"primary\" />\r\n            </Box>\r\n            \r\n</>\r\n           \r\n        \r\n    )\r\n}\r\n\r\nexport default ContentExploreAdminRequests\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\explorecard\\ContentExplorecardAdminRequests.js",["977","978","979","980","981","982","983","984","985","986","987"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\r\nimport { Box, Chip, Menu, MenuItem } from '@material-ui/core';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 'auto',\r\n    minHeight: '520px'\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport default function ContentExplorecardAdmin(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n\r\n\r\n  const options = [\r\n    'in_stock',\r\n    'is_active',\r\n\r\n\r\n  ];\r\n\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  \r\n  const handleIsactive = async (e, id, action) => {\r\n    setAnchorEl(null);\r\n    await props.handleIsactivemain(id, action)\r\n\r\n  };\r\n\r\n  const detailPagenavigator = async(id,isinterested) => {\r\n    history.push('/admin/section/'+id+'?interest='+isinterested)\r\n  }\r\n\r\n  // const handleInstock = (e,id) => {\r\n  //   setAnchorEl(null);\r\n  //   const response = cardapi.instock(id)\r\n  //   if(response.status===200){\r\n  //     alert('Success')\r\n  //   }else{\r\n  //     alert('Fail')\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        // avatar={\r\n        //   <Avatar aria-label=\"recipe\" className={classes.avatar} src={`https://app.contentbond.com/media/${props.val.thumbnail}`}>\r\n        //     R\r\n        //   </Avatar>\r\n        // }\r\n        action={\r\n          <>\r\n            <IconButton aria-label=\"settings\" onClick={handleClick} >\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"long-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={open}\r\n              onClose={handleClose}\r\n              PaperProps={{\r\n                style: {\r\n                  maxHeight: 48 * 4.5,\r\n                  width: '20ch',\r\n                },\r\n              }}\r\n            >\r\n              {options.map((val, index) => {\r\n                return (\r\n                  <MenuItem key={index} onClick={(e) => handleIsactive(e, props.val.id, val)}>\r\n                    {val == \"is_active\" ? props.val[val] ? 'Deactivate' : 'Activate' : props.val.in_stock ? 'Private' : 'Public'}\r\n                  </MenuItem>\r\n                  // <MenuItem key={index+1} onClick={(e) => handleInstock(e,props.val.id,'stock')}>\r\n                  //     {props.val.in_stock?'Private':'Public'}\r\n                  // </MenuItem>\r\n\r\n\r\n                )\r\n              })\r\n\r\n\r\n\r\n              }\r\n\r\n            </Menu>\r\n          </>\r\n        }\r\n        title={props.val.title.substring(0,48)}\r\n        subheader={<Moment format=\"YYYY/MM/DD HH:MM:SS\">{props.val.created.toLocaleString()}</Moment>}\r\n        onClick={(e)=>detailPagenavigator(props.val.id,props.val.isfavored)}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={`https://app.contentbond.com/media/${props.val.thumbnail}`}\r\n        title={props.val.title}\r\n        onClick={(e)=>detailPagenavigator(props.val.id,props.val.isfavored)}\r\n      />\r\n      <CardContent>\r\n      \r\n            Author: <Link to={`/admin/profile/${props.val.author_id}`}> <Chip color=\"primary\" label={props.val.customauthor} /> </Link>\r\n            <br></br>\r\n          \r\n         \r\n        \r\n\r\n          {props.val.title}\r\n\r\n      \r\n<br></br>\r\n          Requested By: <Link to={`/admin/profile/${props.val.likedby}`}><Chip color=\"primary\" label= {props.val.likedbyname} /> </Link>\r\n\r\n\r\n\r\n        \r\n      </CardContent>\r\n\r\n      {/* <CardActions disableSpacing>\r\n        <IconButton color={props.val.isliked ? 'primary' : 'secondary'} aria-label=\"add to favorites\" onClick={(e) => props.likefun(e, props.val.id)}>\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\" color={props.val.isfavored ? 'primary' : 'secondary'} onClick={(e) => props.interestfun(e, props.val.id)}>\r\n          <LocalMallIcon />\r\n        </IconButton>\r\n\r\n      </CardActions> */}\r\n\r\n    </Card>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\Profiledynamic.js",["988","989"],"import { Box, Button, Card, CardContent, CardHeader, Divider, Grid, ListItem, ListItemIcon, ListItemText, TextField, Typography } from '@material-ui/core'\r\n\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { ProfileUpdatePrimary, ProfileUpdateSecondary, getProfileData } from '../actions/ProfileActions'\r\nimport { bindActionCreators } from 'redux';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { Link } from 'react-router-dom';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\r\nimport DynamicFeedIcon from '@material-ui/icons/DynamicFeed';\r\nimport { adminProfileState } from 'reducers/selectors/ProfileSelector';\r\nimport { adminProfileUpdateState } from 'reducers/selectors/ProfileSelector';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { updateSecondaryProfile,getdynoProfile,primaryprofileupdate,updateSecondaryProfilebyadmin } from './api/userapi'\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\n\r\nexport class Profiledynamic extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      email: \"\",\r\n      address: \"\",\r\n      postalcode: \"\",\r\n      phone: \"\",\r\n      city: \"\",\r\n      country: \"\",\r\n      content: \"\"\r\n    }\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    // console.log('didmount',this.props.data)\r\n    // getProfileData({user:'nagendra',history:this.props.history})\r\n    // alert('stoppedn in component did mount')\r\n\r\n    const getUserProfile = async () => {\r\n        const dataprops = await getdynoProfile(this.props.match.params.id);\r\n\r\n        return this.setState(() => ({\r\n\r\n          first_name: dataprops.response.user_ptr.first_name,\r\n          last_name: dataprops.response.user_ptr.last_name,\r\n          email: dataprops.response.user_ptr.email,\r\n          address: dataprops.response.address,\r\n          postalcode: dataprops.response.postalcode,\r\n          phone: dataprops.response.phone,\r\n          city: dataprops.response.city,\r\n          country: dataprops.response.country,\r\n          content: dataprops.response.content\r\n        })\r\n        )\r\n        \r\n\r\n    }\r\n\r\n    getUserProfile()\r\n    \r\n\r\n   \r\n\r\n\r\n\r\n  }\r\n\r\n  // shouldComponentUpdate(nextProps,nextState) {\r\n  //   // Rendering the component only if \r\n  //   // passed props value is changed\r\n\r\n  //   // if (nextProps.profileloading !== this.props.profileloading) {\r\n  //   //   return true;\r\n  //   // } else {\r\n  //   //   return false;\r\n  //   // }\r\n  //   console.log('should update')\r\n  //   return true\r\n  // }\r\n\r\n  // componentDidUpdate(){\r\n  //   console.log('did update')\r\n  //   // getProfileData({user:'nagendra',history:this.props.history})\r\n\r\n\r\n\r\n\r\n  // }\r\n\r\n\r\n\r\n\r\n  handleChange = (e) => {\r\n    this.setState((state, props) => ({\r\n      [e.target.name]: e.target.value\r\n    }));\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    return primaryprofileupdate({\r\n      data: this.state      \r\n    })\r\n  }\r\n\r\n  handleSubmit2 = (event) => {\r\n    event.preventDefault();\r\n    updateSecondaryProfilebyadmin(this.state)\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Grid container spacing={2}>\r\n        {this.props.profileloading === true ? <CircularProgress /> : <>\r\n          <Grid item md={8}>\r\n\r\n            <Card>\r\n\r\n              {this.props.updateprops.updatestatus &&\r\n                <Alert severity=\"success\">Successfully Updated!</Alert>\r\n              }\r\n              {this.props.updateprops.updaterror &&\r\n                <Alert severity=\"error\">Update is Failed!</Alert>\r\n              }\r\n              <CardHeader title=\"Profile\">\r\n\r\n              </CardHeader>\r\n              <CardContent>\r\n\r\n\r\n                <form noValidate autoComplete=\"off\" method=\"post\" onSubmit={this.handleSubmit}>\r\n                  <Box display=\"flex\" p={2} pl={4} flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <TextField onChange={this.handleChange} name=\"first_name\" style={{ margin: 3 }} id=\"filled-basic\" label=\"FirstName\" variant=\"outlined\" fullWidth value={this.state.first_name} />\r\n                    <TextField onChange={this.handleChange} name=\"last_name\" style={{ margin: 3 }} id=\"filled-basic\" label=\"LastName\" variant=\"outlined\" fullWidth value={this.state.last_name} />\r\n                  </Box>\r\n                  <Box p={2} pl={4} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <TextField onChange={this.handleChange} style={{ margin: 3 }} name=\"email\" id=\"filled-basic\" label=\"Email\" variant=\"outlined\" fullWidth value={this.state.email} />\r\n                  </Box>\r\n                  <Box p={2} pl={4} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <Button color=\"primary\" variant=\"contained\" type=\"submit\">Update</Button>\r\n                  </Box>\r\n                </form>\r\n                <Box pt={4}>\r\n                  <Divider />\r\n\r\n                </Box>\r\n\r\n                <Box pt={2}>\r\n                  {this.props.updateprops.updatestatus &&\r\n                    <Alert severity=\"success\">Successfully Updated!</Alert>\r\n                  }\r\n                  {this.props.updateprops.updaterror &&\r\n                    <Alert severity=\"error\">Update is Failed!</Alert>\r\n                  }\r\n                  <Typography component='h3' variant='body2'>\r\n                    Contact Information\r\n                </Typography>\r\n                </Box>\r\n                <Box>\r\n                  <form noValidate autoComplete=\"off\" method=\"post\" onSubmit={this.handleSubmit2}>\r\n                    <Box p={4} alignItems=\"center\">\r\n                      <TextField id=\"filled-basic\" onChange={this.handleChange} name=\"address\" label=\"Address\" variant=\"outlined\" fullWidth value={this.state.address} />\r\n                      <TextField id=\"filled-basic\" onChange={this.handleChange} name=\"postalcode\" label=\"PostalCode\" variant=\"outlined\" fullWidth style={{ marginTop: 40 }} value={this.state.postalcode} />\r\n                      <TextField style={{ margin: 3, marginTop: 40 }} onChange={this.handleChange} name=\"phone\" id=\"filled-basic\" label=\"Phone\" variant=\"outlined\" fullWidth value={this.state.phone} />\r\n                    </Box>\r\n\r\n                    <Box p={4} pt={1} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"flex-start\">\r\n                      <TextField style={{ margin: 3 }} onChange={this.handleChange} name=\"city\" id=\"filled-basic\" label=\"City\" variant=\"outlined\" fullWidth value={this.state.city} />\r\n                      <TextField style={{ margin: 3 }} onChange={this.handleChange} name=\"country\" id=\"filled-basic\" label=\"Country\" variant=\"outlined\" fullWidth value={this.state.country} />\r\n                    </Box>\r\n\r\n                    <Box pl={4}>\r\n                      <Button type=\"submit\" color=\"primary\" variant=\"contained\">Update</Button>\r\n                    </Box>\r\n                  </form>\r\n                </Box>\r\n\r\n              </CardContent>\r\n\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader title=\"Collections\"></CardHeader>\r\n              <CardContent>\r\n                <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\r\n\r\n                  <Link to={`/admin/favorite/${this.props.match.params.id}`}>\r\n                    <ListItem button>\r\n                      <ListItemIcon>\r\n                        <FavoriteIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Favorites\" />\r\n                    </ListItem>\r\n                  </Link>\r\n\r\n                  <Link to={`/admin/interested/${this.props.match.params.id}`}>\r\n\r\n\r\n\r\n                    <ListItem button>\r\n                      <ListItemIcon>\r\n                        <LocalMallIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Interests\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link to={`/admin/recommended/${this.props.match.params.id}`}>\r\n\r\n\r\n                    <ListItem button>\r\n                      <ListItemIcon>\r\n                        <DynamicFeedIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Assigned\" />\r\n                    </ListItem>\r\n\r\n                  </Link>\r\n\r\n                  <Link to={`/admin/uploads/${this.props.match.params.id}`}>\r\n\r\n\r\n                    <ListItem button>\r\n                      <ListItemIcon>\r\n                        <CloudUploadIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Uploads\" />\r\n                    </ListItem>\r\n\r\n                  </Link>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={4} xs={12} sm={12}>\r\n\r\n            <Card>\r\n              <CardHeader subheader={\r\n                <Box display=\"flex\" justifyContent=\"space-between\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n\r\n                  >\r\n                    Connect\r\n                    </Button>\r\n                  <Link to=\"/admin/messages\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n\r\n                    >\r\n                      Message\r\n                    </Button>\r\n                  </Link>\r\n                </Box>\r\n              }>\r\n\r\n              </CardHeader>\r\n              <CardContent>\r\n                <Box display=\"flex\" justifyContent=\"center\" style={{ position: 'relative' }}>\r\n                  <Box component=\"img\" alt=\"profile\" src={require('../assets/img/user-4.jpg').default} style={{ borderRadius: '50%', height: '150px', width: '150px' }} />\r\n                </Box>\r\n                <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" p={3}>\r\n                  <Typography component='p' variant='body2' >Joined On:  <br></br>{JSON.stringify(Date())}</Typography>\r\n                  <Typography component='p' variant='body2' >Category:  {this.state.content}</Typography>\r\n\r\n                </Box>\r\n\r\n              </CardContent>\r\n\r\n            </Card>\r\n          </Grid>\r\n        </>\r\n        }\r\n\r\n      </Grid>\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  // data: adminProfileState(state),\r\n  data: state.profileops.profile,\r\n  updateprops: adminProfileUpdateState(state),\r\n  profileloading: state.profileops.profileloading\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({\r\n    getProfileData,\r\n    primaryprofileupdate: ProfileUpdatePrimary,\r\n    secondaryprofileupdate: ProfileUpdateSecondary\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profiledynamic);\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\admincopy\\UserFavorite.js",["990","991","992"],"import { Box, Grid } from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport ContentExplorecard from '../../components/explorecard/ContentExplorecardFavorite'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport * as apirequest from '../api/api';\r\n\r\n// import { useSelector } from 'react-redux';\r\n\r\n\r\nconst UserFavorite = (props) => {\r\n\r\n    // const response = useSelector((state) => state.productSave);\r\n    const [allproducts, setAllproducts] = useState([])\r\n    const [pageNumber, setPageNumber] = useState(1)\r\n\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        const setprod = async () => {\r\n\r\n            const allprod = await apirequest.getalllikedproductsadmin({ 'pageNumber': pageNumber,'dynoid':props.match.params.id })\r\n\r\n            setAllproducts(allprod)\r\n\r\n        }\r\n        setprod()\r\n\r\n\r\n\r\n    }, [pageNumber])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     setAllproducts(response.products)\r\n    // }, [])\r\n\r\n    const addlikes = async (e, id) => {\r\n        const response = await apirequest.addlike(id)\r\n        if (+response.status === 200) {\r\n            const updatedproducts = allproducts.filter((val, key) => {\r\n                return [...allproducts, +val.id == +id ? val.isliked = !val.isliked : null]\r\n            })\r\n            setAllproducts(updatedproducts);\r\n            alert(response.message)\r\n\r\n        } else {\r\n            alert('something is went wrong')\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={2}>\r\n                {allproducts.map((val, index) => {\r\n                    return <Grid item md={4} sm={12} xs={12} lg={4} key={index}><ContentExplorecard val={val} likefun={addlikes} /></Grid>\r\n                })}\r\n            </Grid>\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" mt={5} mb={5}>\r\n                <Pagination count={10} color=\"primary\" />\r\n            </Box>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default UserFavorite\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\admincopy\\UserRecommended.js",["993","994"],"import { Box, Grid } from '@material-ui/core'\r\nimport React,{useState,useEffect} from 'react'\r\nimport RecommendExplorecard from '../../components/explorecard/RecommendExplorecard'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport * as apirequest from '../api/api';\r\n\r\n// import { useSelector } from 'react-redux';\r\n\r\n\r\nconst UserRecommended = (props) => {    \r\n    \r\n    // const response = useSelector((state) => state.productSave);\r\n    const [allproducts,setAllproducts] = useState([])    \r\n    const [pageNumber, setPageNumber] = useState(1)\r\n\r\n    useEffect(() => {\r\n        const setprod = async() =>{\r\n\r\n            const allprod = await apirequest.getallrecommendedproductsadmin({'pageNumber':pageNumber,'dynoid':props.match.params.id})\r\n            \r\n            setAllproducts(allprod)\r\n\r\n        }\r\n        setprod()\r\n        \r\n\r\n        \r\n    }, [pageNumber])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     setAllproducts(response.products)\r\n    // }, [])\r\n    \r\n\r\n    return (\r\n       <>\r\n            <Grid container spacing={2}>\r\n            {allproducts.map((val,index) => {\r\n                return <Grid item md={4} sm={12} xs={12} lg={4} key={index}><RecommendExplorecard val={val} /></Grid>\r\n            })}\r\n            </Grid>\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" mt={5} mb={5}>\r\n                <Pagination count={10} color=\"primary\" />\r\n            </Box>\r\n            \r\n</>\r\n           \r\n        \r\n    )\r\n}\r\n\r\nexport default UserRecommended\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\admincopy\\UserBagged.js",["995","996","997"],"import { Box, Grid } from '@material-ui/core'\r\nimport React,{useState,useEffect} from 'react'\r\nimport ContentExplorecard from '../../components/explorecard/ContentExplorecardBagged'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport * as apirequest from '../api/api';\r\n// import * as cardapi from './api/cardactionsapi';\r\n\r\n// import { useSelector } from 'react-redux';\r\n\r\n\r\nconst UserBagged = (props) => {    \r\n    \r\n    // const response = useSelector((state) => state.productSave);\r\n    const [allproducts,setAllproducts] = useState([])    \r\n    const [pageNumber, setPageNumber] = useState(1)\r\n    // const [alertseverity, setAlertseverity] = React.useState('success')\r\n    // const [productmessage, setProductmessage] = React.useState('')\r\n    // const [open, setOpen] = React.useState(false)\r\n\r\n    useEffect(() => {\r\n        const setprod = async() =>{\r\n\r\n            const allprod = await apirequest.getallbaggedproductsadmin({'pageNumber':pageNumber,'dynoid':props.match.params.id})\r\n            \r\n            setAllproducts(allprod)\r\n\r\n        }\r\n        setprod()\r\n        \r\n\r\n        \r\n    }, [pageNumber])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     setAllproducts(response.products)\r\n    // }, [])\r\n\r\n    const addfavorites = async (e, id) => {\r\n        const response = await apirequest.addinterest(id)\r\n\r\n        if (+response.status === 200) {\r\n            const updatedproducts = allproducts.filter((val, key) => {\r\n                return [...allproducts, +val.id == +id ? val.isfavored = !val.isfavored : null]\r\n            })\r\n            setAllproducts(updatedproducts);\r\n            alert(response.message)\r\n\r\n        } else {\r\n            alert('something is went wrong')\r\n        }\r\n    }\r\n\r\n    return (\r\n       <>\r\n            <Grid container spacing={2}>\r\n            {allproducts.map((val,index) => {\r\n                return <Grid item md={4} sm={12} xs={12} lg={4} key={index}><ContentExplorecard val={val} interestfun={addfavorites} /></Grid>\r\n            })}\r\n            </Grid>\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" mt={5} mb={5}>\r\n                <Pagination count={10} color=\"primary\" />\r\n            </Box>\r\n            \r\n</>\r\n           \r\n        \r\n    )\r\n}\r\n\r\nexport default UserBagged\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\Loginredirector.js",["998","999","1000","1001","1002"],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\admincopy\\UserUploads.js",["1003","1004","1005"],"import { Box, Grid } from '@material-ui/core'\r\nimport React,{useState,useEffect} from 'react'\r\nimport RecommendExplorecard from '../../components/explorecard/RecommendExplorecard'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport * as apirequest from '../api/api';\r\nimport UploadExplorecard from '../../components/explorecard/UploadExplorecard';\r\n\r\n// import { useSelector } from 'react-redux';\r\n\r\n\r\nconst UserUploads = (props) => {    \r\n    \r\n    // const response = useSelector((state) => state.productSave);\r\n    const [allproducts,setAllproducts] = useState([])    \r\n    const [pageNumber, setPageNumber] = useState(1)\r\n\r\n    useEffect(() => {\r\n        const setprod = async() =>{\r\n\r\n            const allprod = await apirequest.getalluploadedproductsadmin({'pageNumber':pageNumber,'dynoid':props.match.params.id})\r\n            \r\n            setAllproducts(allprod)\r\n\r\n        }\r\n        setprod()\r\n        \r\n\r\n        \r\n    }, [pageNumber])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     setAllproducts(response.products)\r\n    // }, [])\r\n    \r\n\r\n    return (\r\n       <>\r\n            <Grid container spacing={2}>\r\n            {allproducts.map((val,index) => {\r\n                return <Grid item md={4} sm={12} xs={12} lg={4} key={index}><UploadExplorecard val={val} /></Grid>\r\n            })}\r\n            </Grid>\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" mt={5} mb={5}>\r\n                <Pagination count={10} color=\"primary\" />\r\n            </Box>\r\n            \r\n</>\r\n           \r\n        \r\n    )\r\n}\r\n\r\nexport default UserUploads\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\explorecard\\UploadExplorecard.js",["1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 'auto',\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function UploadExplorecard(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n \r\n\r\n\r\n  const options = [\r\n    'in_stock',\r\n    'is_active',\r\n    \r\n\r\n  ];\r\n\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleIsactive =async (e,id,action) => {\r\n    setAnchorEl(null);\r\n    await props.handleIsactivemain(id,action)\r\n\r\n  };\r\n\r\n  const detailPagenavigator = async(id) => {\r\n    history.push('/admin/section/'+id)\r\n  }\r\n\r\n  // const handleInstock = (e,id) => {\r\n  //   setAnchorEl(null);\r\n  //   const response = cardapi.instock(id)\r\n  //   if(response.status===200){\r\n  //     alert('Success')\r\n  //   }else{\r\n  //     alert('Fail')\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        // avatar={\r\n        //   <Avatar aria-label=\"recipe\" className={classes.avatar} src={`https://app.contentbond.com${props.val.thumbnail}`}>\r\n        //     R\r\n        //   </Avatar>\r\n        // }\r\n        // action={\r\n        //   <>\r\n        //     <IconButton aria-label=\"settings\" onClick={handleClick} >\r\n        //       <MoreVertIcon />\r\n        //     </IconButton>\r\n        //     <Menu\r\n        //       id=\"long-menu\"\r\n        //       anchorEl={anchorEl}\r\n        //       keepMounted\r\n        //       open={open}              \r\n        //       onClose={handleClose}\r\n        //       PaperProps={{\r\n        //         style: {\r\n        //           maxHeight: 48 * 4.5,\r\n        //           width: '20ch',\r\n        //         },\r\n        //       }}\r\n        //     >\r\n        //       {options.map((val,index) => {\r\n        //         return (\r\n        //         <MenuItem key={index} onClick={(e)=>handleIsactive(e,props.val.id,val)}>\r\n        //         {val == \"is_active\"?props.val[val]?'Deactivate':'Activate':props.val.in_stock?'Private':'Public'}\r\n        //       </MenuItem>\r\n        //       // <MenuItem key={index+1} onClick={(e) => handleInstock(e,props.val.id,'stock')}>\r\n        //       //     {props.val.in_stock?'Private':'Public'}\r\n        //       // </MenuItem>\r\n            \r\n            \r\n        //       )\r\n        //       })\r\n                \r\n               \r\n              \r\n        // }\r\n              \r\n        //     </Menu>\r\n        //   </>\r\n        // }\r\n        title={props.val.title}\r\n        subheader={props.val.created.toLocaleString()}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={`https://app.contentbond.com${props.val.thumbnail}`}\r\n        title={props.val.title}\r\n        onClick={(e)=>detailPagenavigator(props.val.id)}\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {props.val.title}\r\n        </Typography>\r\n      </CardContent>\r\n      {/* <CardActions disableSpacing>\r\n        <IconButton color={props.val.isliked?'primary':'secondary'} aria-label=\"add to favorites\" onClick={(e) => props.likefun(e,props.val.id)}>\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\" color={props.val.isfavored?'primary':'secondary'} onClick={(e) => props.interestfun(e,props.val.id)}>\r\n          <LocalMallIcon />\r\n        </IconButton>\r\n\r\n      </CardActions> */}\r\n\r\n    </Card>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\admincopy\\container\\UploadProduct.js",["1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039"],"import { Box, Button, Card, FormControl, FormControlLabel, Grid, Input, InputLabel, MenuItem, Paper, Select, TextField, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport CustomizedSelect from '../../../components/ModelDialogue/CustomizedSelect'\r\n\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FormikField from \"../../../components/formikcontrol/FormikField\";\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { AlertTitle } from '@material-ui/lab';\r\nimport { addProductwithApiRequest,addProductwithApiRequestAdmin, saverequestProductwithApiRequest } from '../../api/productapi.js';\r\nconst creatorSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .required(\"Title is should not be empty\"),\r\n    description: Yup.string()\r\n        .required(\"Description is should not be empty\"),\r\n    // rights: Yup.string()\r\n    //     .required(\"Rights is should not be empty\"),\r\n    // castncrew: Yup.string()\r\n    //     .required(\"CastnCrew is should not be empty\"),\r\n    price: Yup.number()\r\n        .required(\"Price is should not be empty\"),\r\n    // createdat:Yup.date().required(\"Date Should not be empty\"),\r\n    // thumbnail:Yup.mixed()\r\n    // .required(\"Thumbnail is should not be empty\"),\r\n    // video:Yup.mixed()\r\n    // .required(\"Videofile is should not be empty\"),\r\n\r\n    // .matches(\r\n    //     /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n    //     \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\r\n    //   )\r\n});\r\n\r\n\r\n\r\nconst initialValues = {\r\n    user: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    price: 0,\r\n    runtime: 0,\r\n    numbofvideos: 0,\r\n    language: '',\r\n    genre: '',\r\n    keywords: '',\r\n    country: '',\r\n    rightsregion: '',\r\n    termsconditions: '',\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n};\r\n\r\nconst UploadProduct = (props) => {\r\n    // const [fields, setFields] = React.useState([{ label: 'Cost' }])\r\n    // const [selectFields] = React.useState([{ label: 'SuperAdmin', value: 'superuser' }, { label: 'Admin', value: 'Author' }, { label: 'User', value: 'user' }])\r\n    // const selectcategoryFields = [{ label: 'Creator', value: 'creator' }, { label: 'Producer', value: 'Producer' }, { label: 'Hybrid', value: 'hybrid' }, { label: 'None of the above', value: 'none' }]\r\n    // const [requestfields, setRequestfields] = React.useState([{ label: 'Title' }, { label: 'Description' }, { label: 'Thumbnail' }, { label: 'Video File' }, { label: 'Rights Details' }, { label: 'Cast and Crew' }, { label: 'Cost of the project' }, { label: 'Date of Creation' }, { label: 'Cost' }])\r\n    // const [issubmitting, setIssubmitting] = React.useState(false);\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [alertseverity, setAlertseverity] = React.useState('success')\r\n    const [productmessage, setProductmessage] = React.useState('')\r\n\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n    const [selectedCategory, setSelectedCategory] = React.useState('');\r\n    const [rights, setRights] = React.useState('exclusive');\r\n\r\n    const [authortype, setAuthortype] = React.useState('creator')\r\n\r\n    const [selectedfile, setSelectedfile] = React.useState({\r\n        thumbnail: '',\r\n        thumbnail1: '',\r\n        thumbnail2: '',\r\n        thumbnail3: '',\r\n        video: ''\r\n    });\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const response = useSelector((state) => state.productSave);\r\n    const userresponse = useSelector((state) => state.profileops.profile);\r\n\r\n    const onCreatorrequestSave = async (values) => {\r\n        const history = props.history\r\n\r\n        const finvalues = {\r\n            ...values,\r\n            author_type: 'producer',\r\n            category: selectedCategory\r\n\r\n        }\r\n\r\n        // return await dispatch(\r\n        //     requestProduct(\r\n        //         finvalues,\r\n        //         history\r\n        //     )\r\n        // );\r\n\r\n    };\r\n\r\n    const onCreatorrequestProducerSave = async (values) => {\r\n\r\n        const history = props.history\r\n\r\n        const finvalues = {\r\n            ...values,\r\n            author_type: 'producer',\r\n            category: selectedCategory\r\n\r\n        }\r\n        const saverequestProductResponse = await saverequestProductwithApiRequest(finvalues)\r\n\r\n        // return dispatch(\r\n        //     requestProduct(\r\n        //         finvalues,\r\n        //         history\r\n        //     )\r\n        // );\r\n\r\n        if (saverequestProductResponse === 200) {\r\n\r\n            setProductmessage(\"Successfully request has been sent.\")\r\n            setOpen(true);\r\n            setAlertseverity('success')\r\n\r\n        } else {\r\n            setProductmessage(\"Something is went wrong\")\r\n            setOpen(true);\r\n            setAlertseverity('success')\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const onProductSave = async (values) => {\r\n\r\n\r\n        console.log('frontend', values)\r\n\r\n        const finvalues = {\r\n            ...values, video: selectedfile.video,\r\n            thumbnail: selectedfile.thumbnail,\r\n            thumbnail1: selectedfile.thumbnail1,\r\n            thumbnail2: selectedfile.thumbnail2,\r\n            thumbnail3: selectedfile.thumbnail3,\r\n            category: selectedCategory,\r\n            createdat: selectedDate,            \r\n            rights:rights,\r\n        };\r\n        console.log('fin vals', finvalues)\r\n\r\n        const saveProductResponse = await addProductwithApiRequestAdmin(finvalues)\r\n\r\n        if (saveProductResponse === 200) {\r\n\r\n            setProductmessage(\"Successfully Created\")\r\n            setOpen(true);\r\n            setAlertseverity('success')\r\n\r\n        } else {\r\n            setProductmessage(\"Something is went wrong\")\r\n            setOpen(true);\r\n            setAlertseverity('success')\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n        console.log(date)\r\n    };\r\n\r\n    // SnackBar\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const handlecategoryChange = (e) => {\r\n        setSelectedCategory(e.target.value)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const handlefileChange = (e) => {\r\n        setSelectedfile({\r\n            ...selectedfile,\r\n            [e.target.id]: e.target.files[0]\r\n        })\r\n        console.log(e.target.files[0])\r\n\r\n    }\r\n\r\n\r\n\r\n    const vertical = \"top\"\r\n    const horizontal = \"right\"\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar anchorOrigin={{ vertical, horizontal }} open={open} autoHideDuration={4000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={alertseverity}>\r\n                    {productmessage}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            {userresponse.user_ptr.is_superuser ?\r\n                <Grid container spacing={1}>\r\n\r\n\r\n\r\n\r\n                    <Grid item md={10} sm={12} xs={12}>\r\n                        <Card>\r\n                            <Box p={1}>\r\n                                <Typography>\r\n                                    Upload Content\r\n                   </Typography>\r\n                            </Box>\r\n                            <Box p={2}>\r\n                                <Formik\r\n                                    initialValues={initialValues}\r\n                                    onSubmit={onProductSave}\r\n                                    validationSchema={creatorSchema}\r\n                                >\r\n                                    {({ dirty, isValid }) => {\r\n                                        return (\r\n\r\n                                            <Form>\r\n                                                <Grid item md={12} sm={12} lg={12}>\r\n\r\n                                                    <FormikField\r\n                                                        name=\"user\"\r\n                                                        label=\"User\"\r\n                                                        type=\"text\"\r\n                                                        required\r\n                                                        textvariant=\"outlined\"\r\n                                                    /><br></br>\r\n\r\n                                                    <FormikField\r\n                                                        name=\"title\"\r\n                                                        label=\"Title\"\r\n                                                        type=\"text\"\r\n                                                        required\r\n                                                        textvariant=\"outlined\"\r\n                                                    /><br></br>\r\n                                                    <FormikField\r\n                                                        name=\"description\"\r\n                                                        label=\"Description\"\r\n                                                        type=\"text\"\r\n                                                        required\r\n                                                        textvariant=\"outlined\"\r\n                                                        multiline={true}\r\n                                                        rows={6}\r\n                                                    /><br></br>\r\n\r\n                                                    <FormikField\r\n                                                        name=\"price\"\r\n                                                        label=\"Cost\"\r\n                                                        type=\"text\"\r\n                                                        required\r\n                                                        textvariant=\"outlined\"\r\n                                                    /><br></br>\r\n\r\n                                                    <FormikField\r\n                                                        name=\"runtime\"\r\n                                                        label=\"Runtime in (minuts)\"\r\n                                                        type=\"text\"\r\n                                                        textvariant=\"outlined\"\r\n                                                    /><br></br>\r\n                                                    <FormikField\r\n                                                        name=\"numbofvideos\"\r\n                                                        label=\"Number of Videos\"\r\n                                                        type=\"text\"\r\n                                                        textvariant=\"outlined\"\r\n                                                    /><br></br>\r\n                                                    <FormikField\r\n                                                        name=\"language\"\r\n                                                        label=\"Language\"\r\n                                                        type=\"text\"\r\n                                                        textvariant=\"outlined\"\r\n                                                    /><br></br>\r\n                                                    <FormikField\r\n                                                        name=\"genre\"\r\n                                                        label=\"Genre\"\r\n                                                        type=\"text\"\r\n                                                        textvariant=\"outlined\"\r\n                                                    /><br></br>\r\n                                                    <FormikField\r\n                                                        name=\"keywords\"\r\n                                                        label=\"Keywords\"\r\n                                                        type=\"text\"\r\n                                                        textvariant=\"outlined\"\r\n                                                    /><br></br>\r\n                                                    <FormikField\r\n                                                        name=\"country\"\r\n                                                        label=\"Country\"\r\n                                                        type=\"text\"\r\n                                                        textvariant=\"outlined\"\r\n                                                    /><br></br>\r\n                                                    <FormikField\r\n                                                        name=\"rightsregion\"\r\n                                                        label=\"Rights Region\"\r\n                                                        type=\"text\"\r\n                                                        textvariant=\"outlined\"\r\n                                                    /><br></br>\r\n                                                    <FormikField\r\n                                                        name=\"termsconditions\"\r\n                                                        label=\"Terms and Conditions\"\r\n                                                        type=\"text\"\r\n                                                        textvariant=\"outlined\"\r\n                                                        multiline={true}\r\n                                                        rows={6}\r\n\r\n                                                    /><br></br>\r\n                                                    {/* <Input type=\"file\" id=\"thumbnail\" name=\"thumbnail\" onChange={handlefileChange}></Input>\r\n                                                 <Input type=\"file\" id=\"video\" name=\"video\" onChange={handlefileChange}></Input> */}\r\n\r\n\r\n                                                    <div>\r\n                                                        <input\r\n                                                            accept=\"image/*\"\r\n                                                            style={{ display: 'none' }}\r\n                                                            id=\"thumbnail\"\r\n                                                            name=\"thumbnail\"\r\n                                                            type=\"file\"\r\n                                                            onChange={handlefileChange}\r\n                                                        />\r\n                                                        <label htmlFor=\"thumbnail\">\r\n                                                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                                                Upload Thumbnail &nbsp;<BackupIcon />\r\n                                                            </Button>\r\n                                                        </label>\r\n                                                        {JSON.stringify(selectedfile.thumbnail.name)}\r\n                                                    </div>\r\n\r\n                                                    <br></br>\r\n                                                    <div>\r\n                                                        <Input\r\n                                                            accept=\"video/*\"\r\n                                                            style={{ display: 'none' }}\r\n                                                            id=\"video\"\r\n                                                            name=\"video\"\r\n                                                            type=\"file\"\r\n                                                            onChange={handlefileChange}\r\n                                                        />\r\n                                                        <label htmlFor=\"video\">\r\n                                                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                                                Upload Video &nbsp;<BackupIcon />\r\n                                                            </Button>\r\n                                                        </label>\r\n                                                        {JSON.stringify(selectedfile.video.name)}\r\n                                                    </div>\r\n                                                    <br></br>\r\n                                                    <div>\r\n                                                        <input\r\n                                                            accept=\"image/*\"\r\n                                                            style={{ display: 'none' }}\r\n                                                            id=\"thumbnail1\"\r\n                                                            name=\"thumbnail1\"\r\n                                                            type=\"file\"\r\n                                                            onChange={handlefileChange}\r\n                                                        />\r\n                                                        <label htmlFor=\"thumbnail1\">\r\n                                                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                                                Upload Banner1 &nbsp;<BackupIcon />\r\n                                                            </Button>\r\n                                                        </label>\r\n                                                        {JSON.stringify(selectedfile.thumbnail1.name)}\r\n                                                    </div>\r\n\r\n                                                    <br></br>\r\n\r\n                                                    <div>\r\n                                                        <input\r\n                                                            accept=\"image/*\"\r\n                                                            style={{ display: 'none' }}\r\n                                                            id=\"thumbnail2\"\r\n                                                            name=\"thumbnail2\"\r\n                                                            type=\"file\"\r\n                                                            onChange={handlefileChange}\r\n                                                        />\r\n                                                        <label htmlFor=\"thumbnail2\">\r\n                                                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                                                Upload Banner2 &nbsp;<BackupIcon />\r\n                                                            </Button>\r\n                                                        </label>\r\n                                                        {JSON.stringify(selectedfile.thumbnail2.name)}\r\n                                                    </div>\r\n\r\n                                                    <br></br>\r\n                                                    <div>\r\n                                                        <input\r\n                                                            accept=\"image/*\"\r\n                                                            style={{ display: 'none' }}\r\n                                                            id=\"thumbnail3\"\r\n                                                            name=\"thumbnail3\"\r\n                                                            type=\"file\"\r\n                                                            onChange={handlefileChange}\r\n                                                        />\r\n                                                        <label htmlFor=\"thumbnail3\">\r\n                                                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                                                Upload Banner3 &nbsp;<BackupIcon />\r\n                                                            </Button>\r\n                                                        </label>\r\n                                                        {JSON.stringify(selectedfile.thumbnail3.name)}\r\n                                                    </div>\r\n\r\n                                                    <br></br>\r\n                                                    <Box style={{ marginLeft: '-1%' }}>\r\n                                                        <CustomizedSelect\r\n                                                            fieldname={'Type'}\r\n                                                            label=\"category\"\r\n                                                            handlecategoryChange={handlecategoryChange}\r\n                                                            selectedCategory={selectedCategory}\r\n                                                        />\r\n                                                    </Box>\r\n\r\n                                                    <Box style={{ marginTop: '30px' }}>\r\n\r\n\r\n\r\n                                                        <TextField id=\"select\" name=\"rights\" label=\"Rights\" value={rights} onChange={(e)=> setRights(e.target.value)} select variant=\"outlined\">\r\n                                                            <MenuItem value=\"exclusive\">Exclusive</MenuItem>\r\n                                                            <MenuItem value=\"nonexclusive\">Non-Exclusive</MenuItem>\r\n                                                        </TextField>\r\n\r\n                                                    </Box>\r\n\r\n\r\n                                                    {/* <CustomizedDate\r\n                                                label=\"createdat\"\r\n                                                handleDateChange={handleDateChange}\r\n                                                selectedDate={selectedDate}\r\n                                            /> */}\r\n\r\n                                                    <Box pt={2}>\r\n                                                        <Button type=\"submit\" color=\"primary\" variant=\"contained\"\r\n                                                            disabled={!dirty || !isValid}\r\n                                                        >Submit</Button>\r\n                                                    </Box>\r\n\r\n\r\n                                                </Grid>\r\n                                            </Form>\r\n                                        );\r\n                                    }}\r\n                                </Formik>\r\n                            </Box>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n\r\n                : null}\r\n\r\n            <br></br>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadProduct\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\admincopy\\container\\MessageAdmin.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\TableMaterial\\TableMaterialMessages.js",["1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\n\r\nimport axios from 'axios';\r\nimport ConfirmModel from '../ModelDialogue/ConfirmModel'\r\nimport MessageModel from '../ModelDialogue/MessageModel'\r\n\r\nimport UserEditModel from '../ModelDialogue/UserEditModel'\r\n\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport * as authapi from '../../container/api/userapi'\r\n\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from 'react-router';\r\nimport { Button, DialogActions, DialogContent, DialogContentText, MenuItem, TextField } from '@material-ui/core';\r\nfunction createData(id, role, category, name, email, created) {\r\n  return { id, role, category, name, email, created };\r\n}\r\n// const url = \"http://127.0.0.1:8000/\"\r\nconst url = 'https://app.contentbond.com/'\r\n\r\nconst getCookie = (name) => {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nconst getToken = () => {\r\n\r\n  try {\r\n    var unparsedtoken = localStorage.getItem('access_token');\r\n    var parsedtoken = JSON.parse(unparsedtoken);\r\n    return parsedtoken.access_token\r\n\r\n  } catch {\r\n    return 'sdfsdfonfsdfsd'\r\n  }\r\n\r\n}\r\nconst config = {\r\n  headers: {\r\n    'content-type': 'multipart/form-data',\r\n    'X-CSRFToken': getCookie('csrftoken'),\r\n    'Authorization': 'Token ' + getToken()\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const rows = [\r\n//   createData(1,'Admin', 'Producer',faker.name.findName(),faker.internet.email(), faker.date.future().toLocaleString()),\r\n//   createData(2,'User','Creator',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(3,'User','Hybrid',faker.name.findName(),faker.internet.email(),  faker.date.future().toLocaleString()),\r\n//   createData(4,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(5,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(6,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(7,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n\r\n// ];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'sendertype', numeric: false, disablePadding: true, label: 'Sender' },\r\n  { id: 'receivertype', numeric: false, disablePadding: false, label: 'Receiver' },\r\n  { id: 'msg:', numeric: false, disablePadding: false, label: 'Message' },\r\n  { id: 'created:', numeric: false, disablePadding: false, label: 'Created' },\r\n\r\n\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            style={{ fontWeight: 800 }}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          All Messages\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <>\r\n\r\n\r\n          <Tooltip title=\"Reply\">\r\n            <IconButton aria-label=\"reply\" onClick={props.handleReplyOpen}>\r\n              <ReplyIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"delete\" onClick={props.deleteUsersclick}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n\r\n        </>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\" onClick={props.handleClickOpen}>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function TableMaterialMessagesSeller(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [queryfromodel, setQueryfromodel] = React.useState('');\r\n  const [togroup, setTogroup] = React.useState('creator');\r\n\r\n\r\n  const history = useHistory()\r\n\r\n  // backend operations\r\n\r\n  const [rows, setRows] = React.useState([])\r\n\r\n  const [modelopen, setModelopen] = React.useState(false);\r\n  const [replymodelopen, setReplymodelopen] = React.useState(false);\r\n  const [usereditmodelopen, setUsereditmodelopen] = React.useState(false);\r\n\r\n  const [userupdateform, setUserupdateform] = React.useState({\r\n    role: 'user',\r\n    category: 'producer'\r\n  })\r\n\r\n\r\n\r\n  const handleChangeeditForm = (e) => {\r\n    setUserupdateform({\r\n      ...userupdateform,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  };\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    setModelopen(true);\r\n  };\r\n\r\n  const handleReplyOpen = () => {\r\n    setReplymodelopen(true)\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setModelopen(false);\r\n  };\r\n\r\n\r\n  const handleuserClickOpen = (e) => {\r\n\r\n    console.log(selected[0]);\r\n    if (selected.length > 1) {\r\n      return alert('select one only')\r\n    }\r\n    var updated = rows.filter((val) => +val.id === +(selected[0]));\r\n    setUsereditmodelopen(true);\r\n    updated.map(val => {\r\n      return setUserupdateform({\r\n        ...userupdateform,\r\n        role: val.is_staff ? val.is_superuser ? 'superuser' : 'admin' : 'user',\r\n        category: val.content ? val.content : 'creator'\r\n      })\r\n    })\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  const handleuserClose = () => {\r\n    setUsereditmodelopen(false);\r\n  };\r\n\r\n  const getallusers = async () => {\r\n    axios.get(url + 'admin/getadminmesssages/?q='+togroup, config).then(res => {\r\n      if (!res.data.error) {\r\n\r\n        setRows(res.data.mesgs)\r\n\r\n      }\r\n    }).catch(err => {\r\n\r\n      alert(err.message)\r\n\r\n    })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getallusers()\r\n  }, [togroup])\r\n\r\n  const handleMessagesubmit = async (e) => {\r\n\r\n    setModelopen(false)\r\n\r\n    const form_data = new FormData();\r\n    form_data.append('message', queryfromodel)\r\n    form_data.append('to', togroup)\r\n\r\n    axios.post(url + 'admin/getadminmesssages/', form_data, config).then(res => {\r\n      if (!res.data.error) {\r\n\r\n        // setRows(res.data.GETmethodData)\r\n        alert('Message has been sent')\r\n\r\n      }\r\n    }).catch(err => {\r\n\r\n      alert(err.message)\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n  \r\n\r\n  const handleMessageReply = async (e) => {\r\n\r\n    \r\n\r\n    const form_data = new FormData();\r\n    form_data.append('message', queryfromodel)\r\n    form_data.append('itemlist', selected)\r\n\r\n    axios.post(url + 'admin/getadminmesssagesreply/', form_data, config).then(res => {\r\n      if (!res.data.error) {\r\n\r\n        // setRows(res.data.GETmethodData)\r\n        alert('Message has been sent')\r\n\r\n      }\r\n    }).catch(err => {\r\n\r\n      alert(err.message)\r\n\r\n    })\r\n    setReplymodelopen(false)\r\n\r\n  }\r\n\r\n  const handleUpdateSubmit = async (e) => {\r\n\r\n    //   setModelopen(false)\r\n\r\n    const payload = {\r\n      id: selected[0],\r\n      role: userupdateform.role,\r\n      category: userupdateform.category\r\n    }\r\n    var response = await authapi.userupdate(payload)\r\n    setUsereditmodelopen(false)\r\n    if (response.status == 200) {\r\n      const updatedusers = rows.filter((val, key) => {\r\n        return [...rows, +val.id == +payload.id ? payload.role === \"superuser\" ? (val.is_superuser = true, val.is_staff = true, val.is_active = true, val.content = payload.category) : payload.role === \"admin\" ? (val.is_superuser = false, val.is_staff = true, val.is_active = true, val.content = payload.category) : (val.is_superuser = false, val.is_staff = false, val.is_active = true, val.content = payload.category) : null]\r\n      })\r\n      setRows(updatedusers);\r\n      return props.userstatusupdate('success')\r\n    } else {\r\n      return props.userstatusupdate('error')\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  const deleteUsers = async () => {\r\n\r\n    // const form_data = new FormData();\r\n    // form_data.append('itemlist',selected)\r\n\r\n    //   axios.post(url+'auth/admin/deleteusers/',form_data,config).then(res=>{\r\n    //     if(!res.data.error){\r\n\r\n    //       alert('Successfully Deleted')\r\n\r\n    //     }\r\n    // }).catch(err=>{\r\n\r\n    //     alert(err.message)\r\n\r\n    // })\r\n\r\n  }\r\n  const replyTouser = async () => {\r\n\r\n    const form_data = new FormData();\r\n    form_data.append('itemlist', selected)\r\n\r\n    axios.post(url + 'auth/admin/deletemessages/', form_data, config).then(res => {\r\n      if (!res.data.error) {\r\n\r\n        alert('Successfully Deleted')\r\n\r\n      }\r\n    }).catch(err => {\r\n\r\n      alert(err.message)\r\n\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  // backedn operations\r\n\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <ConfirmModel setQueryfromodel = {setQueryfromodel} modelopen={modelopen} \r\n        handleSearchsubmit={handleSearchsubmit} handleClickOpen={handleClickOpen} \r\n        handleClose={handleClose} \r\n      />\r\n      <UserEditModel \r\n        usereditmodelopen={usereditmodelopen} \r\n        handleuserClose = {handleuserClose}\r\n        userupdateform={userupdateform}\r\n        handleChangeeditForm={handleChangeeditForm}\r\n        handleUpdateSubmit={handleUpdateSubmit}\r\n        \r\n      \r\n      /> */}\r\n\r\n      <MessageModel\r\n\r\n        modelopen={modelopen}\r\n\r\n        handleClickOpen={handleClickOpen}\r\n\r\n      >\r\n\r\n        <DialogContent>\r\n\r\n          <DialogContentText>\r\n            To Sellers or Buyers\r\n        </DialogContentText>\r\n\r\n          <TextField\r\n            fullWidth\r\n            id=\"select\" name=\"togroup\" label=\"Category\"\r\n            value={togroup} onChange={(e) => setTogroup(e.target.value)}\r\n            select variant=\"standard\">\r\n            <MenuItem value=\"creator\">Sellers</MenuItem>\r\n            <MenuItem value=\"producer\">Buyers</MenuItem>\r\n            <MenuItem value=\"all\">All</MenuItem>\r\n          </TextField>\r\n\r\n          <TextField\r\n            onChange={(e) => setQueryfromodel(e.target.value)}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"message\"\r\n            label=\"Message\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Message\"\r\n            fullWidth\r\n            multiline={true}\r\n            rows=\"5\"\r\n          />\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleMessagesubmit} color=\"primary\">\r\n            SendMessage\r\n          </Button>\r\n        </DialogActions>\r\n        {/* <TextField\r\n          onChange={(e)=>setQueryfromodel(e.target.value)}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Username\"\r\n            type=\"text\"\r\n            placeholder=\"enter userName\"\r\n            fullWidth\r\n          /> */}\r\n\r\n\r\n\r\n      </MessageModel>\r\n\r\n\r\n\r\n\r\n      <MessageModel\r\n\r\n        modelopen={replymodelopen}\r\n\r\n        handleReplyOpen={handleReplyOpen}\r\n\r\n      >\r\n\r\n        <DialogContent>\r\n\r\n          <DialogContentText>\r\n            Reply Message\r\n        </DialogContentText>\r\n\r\n         \r\n\r\n          <TextField\r\n            onChange={(e) => setQueryfromodel(e.target.value)}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"message\"\r\n            label=\"Message\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Message\"\r\n            fullWidth\r\n            multiline={true}\r\n            rows=\"5\"\r\n          />\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=>setReplymodelopen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleMessageReply} color=\"primary\">\r\n            SendMessage\r\n          </Button>\r\n        </DialogActions>\r\n        {/* <TextField\r\n          onChange={(e)=>setQueryfromodel(e.target.value)}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Username\"\r\n            type=\"text\"\r\n            placeholder=\"enter userName\"\r\n            fullWidth\r\n          /> */}\r\n\r\n\r\n\r\n      </MessageModel>\r\n\r\n\r\n\r\n      {/* <Button color=\"primary\" variant=\"contained\">Add Message</Button> */}\r\n      \r\n      <TextField\r\n            \r\n            id=\"select\" name=\"togroup\" label=\"Category\"\r\n            value={togroup} onChange={(e) => setTogroup(e.target.value)}\r\n            select variant=\"standard\">\r\n            <MenuItem value=\"creator\">Sellers</MenuItem>\r\n            <MenuItem value=\"producer\">Buyers</MenuItem>\r\n            <MenuItem value=\"all\">All</MenuItem>\r\n      </TextField>\r\n      <Paper className={classes.paper}>\r\n\r\n        <EnhancedTableToolbar\r\n          deleteUsersclick={deleteUsers}\r\n          replyTouser={replyTouser}\r\n          numSelected={selected.length}\r\n          handleClickOpen={handleClickOpen}\r\n          handleuserClickOpen={handleuserClickOpen}\r\n          replymodelopen={replymodelopen}\r\n          handleReplyOpen ={handleReplyOpen}\r\n\r\n        />\r\n\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n\r\n                      {/* <TableCell align=\"left\">{row.role}</TableCell> */}\r\n\r\n                      <TableCell align=\"left\">{row.sendername}</TableCell>\r\n                      <TableCell align=\"left\">{row.receivername}</TableCell>\r\n                      <TableCell align=\"left\">{row.msg ? row.msg : '-------'}</TableCell>\r\n                      <TableCell align=\"left\"><Moment format=\"YYYY/MM/DD\">{row.created}</Moment></TableCell>\r\n\r\n\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      {/* <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\MessageModel.js",["1053"],"import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function MessageModel(props) {\r\n  \r\n\r\n  return (\r\n    <div>\r\n      {/* <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open form dialog\r\n      </Button> */}\r\n      <Dialog open={props.modelopen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        {/* <DialogTitle id=\"form-dialog-title\">Bulk Message</DialogTitle> */}\r\n        {props.children}\r\n        {/* <DialogContent>\r\n\r\n          <DialogContentText>\r\n           To Sellers or Buyers\r\n          </DialogContentText>\r\n        \r\n          \r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={props.handleSearchsubmit} color=\"primary\">\r\n            Search\r\n          </Button>\r\n        </DialogActions> */}\r\n\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\MessageSeller.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\TableMaterial\\TableMaterialMessagesSeller.js",["1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\n\r\nimport axios from 'axios';\r\nimport ConfirmModel from '../ModelDialogue/ConfirmModel'\r\nimport MessageModelSeller from '../ModelDialogue/MessageModelSeller'\r\n\r\nimport UserEditModel from '../ModelDialogue/UserEditModel'\r\n\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport * as authapi from '../../container/api/userapi'\r\n\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from 'react-router';\r\nimport { Button, DialogActions, DialogContent, DialogContentText, MenuItem, TextField } from '@material-ui/core';\r\nfunction createData(id, role, category, name, email, created) {\r\n  return { id, role, category, name, email, created };\r\n}\r\n// const url = \"http://127.0.0.1:8000/\"\r\nconst url = 'https://app.contentbond.com/'\r\n\r\nconst getCookie = (name) => {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nconst getToken = () => {\r\n\r\n  try {\r\n    var unparsedtoken = localStorage.getItem('access_token');\r\n    var parsedtoken = JSON.parse(unparsedtoken);\r\n    return parsedtoken.access_token\r\n\r\n  } catch {\r\n    return 'sdfsdfonfsdfsd'\r\n  }\r\n\r\n}\r\nconst config = {\r\n  headers: {\r\n    'content-type': 'multipart/form-data',\r\n    'X-CSRFToken': getCookie('csrftoken'),\r\n    'Authorization': 'Token ' + getToken()\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const rows = [\r\n//   createData(1,'Admin', 'Producer',faker.name.findName(),faker.internet.email(), faker.date.future().toLocaleString()),\r\n//   createData(2,'User','Creator',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(3,'User','Hybrid',faker.name.findName(),faker.internet.email(),  faker.date.future().toLocaleString()),\r\n//   createData(4,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(5,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(6,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(7,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n\r\n// ];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  // { id: 'sendertype', numeric: false, disablePadding: true, label: 'Sender' },\r\n  // { id: 'receivertype', numeric: false, disablePadding: false, label: 'Receiver' },\r\n  { id: 'msg:', numeric: false, disablePadding: false, label: 'Message' },\r\n  { id: 'created:', numeric: false, disablePadding: false, label: 'Created' },\r\n\r\n\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            style={{ fontWeight: 800 }}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Seller Messages\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <>\r\n\r\n\r\n          {/* <Tooltip title=\"Reply\">\r\n            <IconButton aria-label=\"reply\" onClick={props.handleReplyOpen}>\r\n              <ReplyIcon />\r\n            </IconButton>\r\n          </Tooltip> */}\r\n\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"delete\" onClick={props.deleteUsersclick}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n\r\n        </>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\" onClick={props.handleClickOpen}>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function TableMaterialMessages(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [queryfromodel, setQueryfromodel] = React.useState('');\r\n  const [togroup, setTogroup] = React.useState('creator');\r\n\r\n\r\n  const history = useHistory()\r\n\r\n  // backend operations\r\n\r\n  const [rows, setRows] = React.useState([])\r\n\r\n  const [modelopen, setModelopen] = React.useState(false);\r\n  const [replymodelopen, setReplymodelopen] = React.useState(false);\r\n  const [usereditmodelopen, setUsereditmodelopen] = React.useState(false);\r\n\r\n  const [userupdateform, setUserupdateform] = React.useState({\r\n    role: 'user',\r\n    category: 'producer'\r\n  })\r\n\r\n\r\n\r\n  const handleChangeeditForm = (e) => {\r\n    setUserupdateform({\r\n      ...userupdateform,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  };\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    setModelopen(true);\r\n  };\r\n\r\n  const handleReplyOpen = () => {\r\n    setReplymodelopen(true)\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setModelopen(false);\r\n  };\r\n\r\n\r\n  const handleuserClickOpen = (e) => {\r\n\r\n    console.log(selected[0]);\r\n    if (selected.length > 1) {\r\n      return alert('select one only')\r\n    }\r\n    var updated = rows.filter((val) => +val.id === +(selected[0]));\r\n    setUsereditmodelopen(true);\r\n    updated.map(val => {\r\n      return setUserupdateform({\r\n        ...userupdateform,\r\n        role: val.is_staff ? val.is_superuser ? 'superuser' : 'admin' : 'user',\r\n        category: val.content ? val.content : 'creator'\r\n      })\r\n    })\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  const handleuserClose = () => {\r\n    setUsereditmodelopen(false);\r\n  };\r\n\r\n  const getallusers = async () => {\r\n    axios.get(url + 'admin/getsellermessages/?q='+togroup, config).then(res => {\r\n      if (!res.data.error) {\r\n\r\n        setRows(res.data.mesgs)\r\n\r\n      }\r\n    }).catch(err => {\r\n\r\n      alert(err.message)\r\n\r\n    })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getallusers()\r\n  }, [togroup])\r\n\r\n  const handleMessagesubmit = async (e) => {\r\n\r\n    setModelopen(false)\r\n\r\n    const form_data = new FormData();\r\n    form_data.append('message', queryfromodel)\r\n    form_data.append('to', 'producer')\r\n\r\n    axios.post(url + 'admin/getsellermessages/', form_data, config).then(res => {\r\n      if (!res.data.error) {\r\n\r\n        // setRows(res.data.GETmethodData)\r\n        alert('Message has been sent')\r\n\r\n      }\r\n    }).catch(err => {\r\n\r\n      alert(err.message)\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n  \r\n\r\n  const handleMessageReply = async (e) => {\r\n\r\n    \r\n\r\n    const form_data = new FormData();\r\n    form_data.append('message', queryfromodel)\r\n    form_data.append('itemlist', selected)\r\n\r\n    axios.post(url + 'admin/getadminmesssagesreply/', form_data, config).then(res => {\r\n      if (!res.data.error) {\r\n\r\n        // setRows(res.data.GETmethodData)\r\n        alert('Message has been sent')\r\n\r\n      }\r\n    }).catch(err => {\r\n\r\n      alert(err.message)\r\n\r\n    })\r\n    setReplymodelopen(false)\r\n\r\n  }\r\n\r\n  const handleUpdateSubmit = async (e) => {\r\n\r\n    //   setModelopen(false)\r\n\r\n    const payload = {\r\n      id: selected[0],\r\n      role: userupdateform.role,\r\n      category: userupdateform.category\r\n    }\r\n    var response = await authapi.userupdate(payload)\r\n    setUsereditmodelopen(false)\r\n    if (response.status == 200) {\r\n      const updatedusers = rows.filter((val, key) => {\r\n        return [...rows, +val.id == +payload.id ? payload.role === \"superuser\" ? (val.is_superuser = true, val.is_staff = true, val.is_active = true, val.content = payload.category) : payload.role === \"admin\" ? (val.is_superuser = false, val.is_staff = true, val.is_active = true, val.content = payload.category) : (val.is_superuser = false, val.is_staff = false, val.is_active = true, val.content = payload.category) : null]\r\n      })\r\n      setRows(updatedusers);\r\n      return props.userstatusupdate('success')\r\n    } else {\r\n      return props.userstatusupdate('error')\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  const deleteUsers = async () => {\r\n\r\n    // const form_data = new FormData();\r\n    // form_data.append('itemlist',selected)\r\n\r\n    //   axios.post(url+'auth/admin/deleteusers/',form_data,config).then(res=>{\r\n    //     if(!res.data.error){\r\n\r\n    //       alert('Successfully Deleted')\r\n\r\n    //     }\r\n    // }).catch(err=>{\r\n\r\n    //     alert(err.message)\r\n\r\n    // })\r\n\r\n  }\r\n  const replyTouser = async () => {\r\n\r\n    const form_data = new FormData();\r\n    form_data.append('itemlist', selected)\r\n\r\n    axios.post(url + 'auth/admin/deletemessages/', form_data, config).then(res => {\r\n      if (!res.data.error) {\r\n\r\n        alert('Successfully Deleted')\r\n\r\n      }\r\n    }).catch(err => {\r\n\r\n      alert(err.message)\r\n\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  // backedn operations\r\n\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <ConfirmModel setQueryfromodel = {setQueryfromodel} modelopen={modelopen} \r\n        handleSearchsubmit={handleSearchsubmit} handleClickOpen={handleClickOpen} \r\n        handleClose={handleClose} \r\n      />\r\n      <UserEditModel \r\n        usereditmodelopen={usereditmodelopen} \r\n        handleuserClose = {handleuserClose}\r\n        userupdateform={userupdateform}\r\n        handleChangeeditForm={handleChangeeditForm}\r\n        handleUpdateSubmit={handleUpdateSubmit}\r\n        \r\n      \r\n      /> */}\r\n\r\n      <MessageModelSeller\r\n\r\n        modelopen={modelopen}\r\n\r\n        handleClickOpen={handleClickOpen}\r\n\r\n      >\r\n\r\n        <DialogContent>\r\n\r\n          {/* <DialogContentText>\r\n            To Sellers or Buyers\r\n        </DialogContentText> */}\r\n\r\n         \r\n\r\n          <TextField\r\n            onChange={(e) => setQueryfromodel(e.target.value)}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"message\"\r\n            label=\"Message\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Message\"\r\n            fullWidth\r\n            multiline={true}\r\n            rows=\"5\"\r\n          />\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleMessagesubmit} color=\"primary\">\r\n            SendMessage\r\n          </Button>\r\n        </DialogActions>\r\n        {/* <TextField\r\n          onChange={(e)=>setQueryfromodel(e.target.value)}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Username\"\r\n            type=\"text\"\r\n            placeholder=\"enter userName\"\r\n            fullWidth\r\n          /> */}\r\n\r\n\r\n\r\n      </MessageModelSeller>\r\n\r\n\r\n\r\n\r\n      <MessageModelSeller\r\n\r\n        modelopen={replymodelopen}\r\n\r\n        handleReplyOpen={handleReplyOpen}\r\n\r\n      >\r\n\r\n        <DialogContent>\r\n\r\n          <DialogContentText>\r\n            Reply Message\r\n        </DialogContentText>\r\n\r\n         \r\n\r\n          <TextField\r\n            onChange={(e) => setQueryfromodel(e.target.value)}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"message\"\r\n            label=\"Message\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Message\"\r\n            fullWidth\r\n            multiline={true}\r\n            rows=\"5\"\r\n          />\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=>setReplymodelopen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleMessageReply} color=\"primary\">\r\n            SendMessage\r\n          </Button>\r\n        </DialogActions>\r\n        {/* <TextField\r\n          onChange={(e)=>setQueryfromodel(e.target.value)}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Username\"\r\n            type=\"text\"\r\n            placeholder=\"enter userName\"\r\n            fullWidth\r\n          /> */}\r\n\r\n\r\n\r\n      </MessageModelSeller>\r\n\r\n\r\n\r\n      {/* <Button color=\"primary\" variant=\"contained\">Add Message</Button> */}\r\n      \r\n      <TextField\r\n            \r\n            id=\"select\" name=\"togroup\" label=\"Category\"\r\n            value={togroup} onChange={(e) => setTogroup(e.target.value)}\r\n            select variant=\"standard\">\r\n            <MenuItem value=\"creator\">My Messages</MenuItem>\r\n            \r\n            <MenuItem value=\"all\">Other</MenuItem>\r\n      </TextField>\r\n      <Paper className={classes.paper}>\r\n\r\n        <EnhancedTableToolbar\r\n          deleteUsersclick={deleteUsers}\r\n          replyTouser={replyTouser}\r\n          numSelected={selected.length}\r\n          handleClickOpen={handleClickOpen}\r\n          handleuserClickOpen={handleuserClickOpen}\r\n          replymodelopen={replymodelopen}\r\n          handleReplyOpen ={handleReplyOpen}\r\n\r\n        />\r\n\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n\r\n                      {/* <TableCell align=\"left\">{row.role}</TableCell> */}\r\n\r\n                      {/* <TableCell align=\"left\">{row.sendername}</TableCell>\r\n                      <TableCell align=\"left\">{row.receivername}</TableCell> */}\r\n                      <TableCell align=\"left\">{row.msg ? row.msg : '-------'}</TableCell>\r\n                      <TableCell align=\"left\"><Moment format=\"YYYY/MM/DD\">{row.created}</Moment></TableCell>\r\n\r\n\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      {/* <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\MessageModelSeller.js",["1068","1069","1070","1071","1072"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function MessageModelSeller(props) {\r\n  \r\n\r\n  return (\r\n    <div>\r\n      {/* <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open form dialog\r\n      </Button> */}\r\n      <Dialog open={props.modelopen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Message</DialogTitle>\r\n        {props.children}\r\n        {/* <DialogContent>\r\n\r\n          <DialogContentText>\r\n           To Sellers or Buyers\r\n          </DialogContentText>\r\n        \r\n          \r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={props.handleSearchsubmit} color=\"primary\">\r\n            Search\r\n          </Button>\r\n        </DialogActions> */}\r\n\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\MessageBuyer.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\TableMaterial\\TableMaterialMessagesBuyer.js",["1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\n\r\nimport axios from 'axios';\r\nimport ConfirmModel from '../ModelDialogue/ConfirmModel'\r\nimport MessageModelSeller from '../ModelDialogue/MessageModelSeller'\r\n\r\nimport UserEditModel from '../ModelDialogue/UserEditModel'\r\n\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport * as authapi from '../../container/api/userapi'\r\n\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from 'react-router';\r\nimport { Button, DialogActions, DialogContent, DialogContentText, MenuItem, TextField } from '@material-ui/core';\r\nfunction createData(id, role, category, name, email, created) {\r\n  return { id, role, category, name, email, created };\r\n}\r\n// const url = \"http://127.0.0.1:8000/\"\r\nconst url = 'https://app.contentbond.com/'\r\n\r\nconst getCookie = (name) => {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nconst getToken = () => {\r\n\r\n  try {\r\n    var unparsedtoken = localStorage.getItem('access_token');\r\n    var parsedtoken = JSON.parse(unparsedtoken);\r\n    return parsedtoken.access_token\r\n\r\n  } catch {\r\n    return 'sdfsdfonfsdfsd'\r\n  }\r\n\r\n}\r\nconst config = {\r\n  headers: {\r\n    'content-type': 'multipart/form-data',\r\n    'X-CSRFToken': getCookie('csrftoken'),\r\n    'Authorization': 'Token ' + getToken()\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const rows = [\r\n//   createData(1,'Admin', 'Producer',faker.name.findName(),faker.internet.email(), faker.date.future().toLocaleString()),\r\n//   createData(2,'User','Creator',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(3,'User','Hybrid',faker.name.findName(),faker.internet.email(),  faker.date.future().toLocaleString()),\r\n//   createData(4,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(5,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(6,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(7,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n\r\n// ];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  // { id: 'sendertype', numeric: false, disablePadding: true, label: 'Sender' },\r\n  // { id: 'receivertype', numeric: false, disablePadding: false, label: 'Receiver' },\r\n  { id: 'msg:', numeric: false, disablePadding: false, label: 'Message' },\r\n  { id: 'created:', numeric: false, disablePadding: false, label: 'Created' },\r\n\r\n\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            style={{ fontWeight: 800 }}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Seller Messages\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <>\r\n\r\n\r\n          {/* <Tooltip title=\"Reply\">\r\n            <IconButton aria-label=\"reply\" onClick={props.handleReplyOpen}>\r\n              <ReplyIcon />\r\n            </IconButton>\r\n          </Tooltip> */}\r\n\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"delete\" onClick={props.deleteUsersclick}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n\r\n        </>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\" onClick={props.handleClickOpen}>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function TableMaterialMessagesBuyer(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [queryfromodel, setQueryfromodel] = React.useState('');\r\n  const [togroup, setTogroup] = React.useState('producer');\r\n\r\n\r\n  const history = useHistory()\r\n\r\n  // backend operations\r\n\r\n  const [rows, setRows] = React.useState([])\r\n\r\n  const [modelopen, setModelopen] = React.useState(false);\r\n  const [replymodelopen, setReplymodelopen] = React.useState(false);\r\n  const [usereditmodelopen, setUsereditmodelopen] = React.useState(false);\r\n\r\n  const [userupdateform, setUserupdateform] = React.useState({\r\n    role: 'user',\r\n    category: 'producer'\r\n  })\r\n\r\n\r\n\r\n  const handleChangeeditForm = (e) => {\r\n    setUserupdateform({\r\n      ...userupdateform,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  };\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    setModelopen(true);\r\n  };\r\n\r\n  const handleReplyOpen = () => {\r\n    setReplymodelopen(true)\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setModelopen(false);\r\n  };\r\n\r\n\r\n  const handleuserClickOpen = (e) => {\r\n\r\n    console.log(selected[0]);\r\n    if (selected.length > 1) {\r\n      return alert('select one only')\r\n    }\r\n    var updated = rows.filter((val) => +val.id === +(selected[0]));\r\n    setUsereditmodelopen(true);\r\n    updated.map(val => {\r\n      return setUserupdateform({\r\n        ...userupdateform,\r\n        role: val.is_staff ? val.is_superuser ? 'superuser' : 'admin' : 'user',\r\n        category: val.content ? val.content : 'creator'\r\n      })\r\n    })\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  const handleuserClose = () => {\r\n    setUsereditmodelopen(false);\r\n  };\r\n\r\n  const getallusers = async () => {\r\n    axios.get(url + 'admin/getbuyermessages/?q='+togroup, config).then(res => {\r\n      if (!res.data.error) {\r\n\r\n        setRows(res.data.mesgs)\r\n\r\n      }\r\n    }).catch(err => {\r\n\r\n      alert(err.message)\r\n\r\n    })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getallusers()\r\n  }, [togroup])\r\n\r\n  const handleMessagesubmit = async (e) => {\r\n\r\n    setModelopen(false)\r\n\r\n    const form_data = new FormData();\r\n    form_data.append('message', queryfromodel)\r\n    form_data.append('to', 'creator')\r\n\r\n    axios.post(url + 'admin/getbuyermessages/', form_data, config).then(res => {\r\n      if (!res.data.error) {\r\n\r\n        // setRows(res.data.GETmethodData)\r\n        alert('Message has been sent')\r\n\r\n      }\r\n    }).catch(err => {\r\n\r\n      alert(err.message)\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n  \r\n\r\n  const handleMessageReply = async (e) => {\r\n\r\n    \r\n\r\n    const form_data = new FormData();\r\n    form_data.append('message', queryfromodel)\r\n    form_data.append('itemlist', selected)\r\n\r\n    axios.post(url + 'admin/getadminmesssagesreply/', form_data, config).then(res => {\r\n      if (!res.data.error) {\r\n\r\n        // setRows(res.data.GETmethodData)\r\n        alert('Message has been sent')\r\n\r\n      }\r\n    }).catch(err => {\r\n\r\n      alert(err.message)\r\n\r\n    })\r\n    setReplymodelopen(false)\r\n\r\n  }\r\n\r\n  const handleUpdateSubmit = async (e) => {\r\n\r\n    //   setModelopen(false)\r\n\r\n    const payload = {\r\n      id: selected[0],\r\n      role: userupdateform.role,\r\n      category: userupdateform.category\r\n    }\r\n    var response = await authapi.userupdate(payload)\r\n    setUsereditmodelopen(false)\r\n    if (response.status == 200) {\r\n      const updatedusers = rows.filter((val, key) => {\r\n        return [...rows, +val.id == +payload.id ? payload.role === \"superuser\" ? (val.is_superuser = true, val.is_staff = true, val.is_active = true, val.content = payload.category) : payload.role === \"admin\" ? (val.is_superuser = false, val.is_staff = true, val.is_active = true, val.content = payload.category) : (val.is_superuser = false, val.is_staff = false, val.is_active = true, val.content = payload.category) : null]\r\n      })\r\n      setRows(updatedusers);\r\n      return props.userstatusupdate('success')\r\n    } else {\r\n      return props.userstatusupdate('error')\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  const deleteUsers = async () => {\r\n\r\n    // const form_data = new FormData();\r\n    // form_data.append('itemlist',selected)\r\n\r\n    //   axios.post(url+'auth/admin/deleteusers/',form_data,config).then(res=>{\r\n    //     if(!res.data.error){\r\n\r\n    //       alert('Successfully Deleted')\r\n\r\n    //     }\r\n    // }).catch(err=>{\r\n\r\n    //     alert(err.message)\r\n\r\n    // })\r\n\r\n  }\r\n  const replyTouser = async () => {\r\n\r\n    const form_data = new FormData();\r\n    form_data.append('itemlist', selected)\r\n\r\n    axios.post(url + 'auth/admin/deletemessages/', form_data, config).then(res => {\r\n      if (!res.data.error) {\r\n\r\n        alert('Successfully Deleted')\r\n\r\n      }\r\n    }).catch(err => {\r\n\r\n      alert(err.message)\r\n\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  // backedn operations\r\n\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <ConfirmModel setQueryfromodel = {setQueryfromodel} modelopen={modelopen} \r\n        handleSearchsubmit={handleSearchsubmit} handleClickOpen={handleClickOpen} \r\n        handleClose={handleClose} \r\n      />\r\n      <UserEditModel \r\n        usereditmodelopen={usereditmodelopen} \r\n        handleuserClose = {handleuserClose}\r\n        userupdateform={userupdateform}\r\n        handleChangeeditForm={handleChangeeditForm}\r\n        handleUpdateSubmit={handleUpdateSubmit}\r\n        \r\n      \r\n      /> */}\r\n\r\n      <MessageModelSeller\r\n\r\n        modelopen={modelopen}\r\n\r\n        handleClickOpen={handleClickOpen}\r\n\r\n      >\r\n\r\n        <DialogContent>\r\n\r\n          {/* <DialogContentText>\r\n            To Sellers or Buyers\r\n        </DialogContentText> */}\r\n\r\n         \r\n\r\n          <TextField\r\n            onChange={(e) => setQueryfromodel(e.target.value)}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"message\"\r\n            label=\"Message\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Message\"\r\n            fullWidth\r\n            multiline={true}\r\n            rows=\"5\"\r\n          />\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleMessagesubmit} color=\"primary\">\r\n            SendMessage\r\n          </Button>\r\n        </DialogActions>\r\n        {/* <TextField\r\n          onChange={(e)=>setQueryfromodel(e.target.value)}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Username\"\r\n            type=\"text\"\r\n            placeholder=\"enter userName\"\r\n            fullWidth\r\n          /> */}\r\n\r\n\r\n\r\n      </MessageModelSeller>\r\n\r\n\r\n\r\n\r\n      <MessageModelSeller\r\n\r\n        modelopen={replymodelopen}\r\n\r\n        handleReplyOpen={handleReplyOpen}\r\n\r\n      >\r\n\r\n        <DialogContent>\r\n\r\n          <DialogContentText>\r\n            Reply Message\r\n        </DialogContentText>\r\n\r\n         \r\n\r\n          <TextField\r\n            onChange={(e) => setQueryfromodel(e.target.value)}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"message\"\r\n            label=\"Message\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Message\"\r\n            fullWidth\r\n            multiline={true}\r\n            rows=\"5\"\r\n          />\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=>setReplymodelopen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleMessageReply} color=\"primary\">\r\n            SendMessage\r\n          </Button>\r\n        </DialogActions>\r\n        {/* <TextField\r\n          onChange={(e)=>setQueryfromodel(e.target.value)}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Username\"\r\n            type=\"text\"\r\n            placeholder=\"enter userName\"\r\n            fullWidth\r\n          /> */}\r\n\r\n\r\n\r\n      </MessageModelSeller>\r\n\r\n\r\n\r\n      {/* <Button color=\"primary\" variant=\"contained\">Add Message</Button> */}\r\n      \r\n      <TextField\r\n            \r\n            id=\"select\" name=\"togroup\" label=\"Category\"\r\n            value={togroup} onChange={(e) => setTogroup(e.target.value)}\r\n            select variant=\"standard\">\r\n            <MenuItem value=\"producer\">My Messages</MenuItem>\r\n            \r\n            <MenuItem value=\"all\">Other</MenuItem>\r\n      </TextField>\r\n      <Paper className={classes.paper}>\r\n\r\n        <EnhancedTableToolbar\r\n          deleteUsersclick={deleteUsers}\r\n          replyTouser={replyTouser}\r\n          numSelected={selected.length}\r\n          handleClickOpen={handleClickOpen}\r\n          handleuserClickOpen={handleuserClickOpen}\r\n          replymodelopen={replymodelopen}\r\n          handleReplyOpen ={handleReplyOpen}\r\n\r\n        />\r\n\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n\r\n                      {/* <TableCell align=\"left\">{row.role}</TableCell> */}\r\n\r\n                      {/* <TableCell align=\"left\">{row.sendername}</TableCell>\r\n                      <TableCell align=\"left\">{row.receivername}</TableCell> */}\r\n                      <TableCell align=\"left\">{row.msg ? row.msg : '-------'}</TableCell>\r\n                      <TableCell align=\"left\"><Moment format=\"YYYY/MM/DD\">{row.created}</Moment></TableCell>\r\n\r\n\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      {/* <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\NotifyExpore.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ListSimple\\NotifyList.js",["1087","1088","1089","1090","1091"],{"ruleId":"1092","replacedBy":"1093"},{"ruleId":"1094","replacedBy":"1095"},{"ruleId":"1096","severity":1,"message":"1097","line":2,"column":9,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1100","line":5,"column":8,"nodeType":"1098","messageId":"1099","endLine":5,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1101","line":6,"column":10,"nodeType":"1098","messageId":"1099","endLine":6,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1102","line":6,"column":50,"nodeType":"1098","messageId":"1099","endLine":6,"endColumn":60},{"ruleId":"1096","severity":1,"message":"1103","line":9,"column":8,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1104","line":10,"column":8,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1105","line":17,"column":7,"nodeType":"1098","messageId":"1099","endLine":17,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1106","line":5,"column":40,"nodeType":"1098","messageId":"1099","endLine":5,"endColumn":47},{"ruleId":"1096","severity":1,"message":"1107","line":9,"column":8,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":15},{"ruleId":"1096","severity":1,"message":"1108","line":105,"column":10,"nodeType":"1098","messageId":"1099","endLine":105,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1109","line":106,"column":10,"nodeType":"1098","messageId":"1099","endLine":106,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1110","line":106,"column":15,"nodeType":"1098","messageId":"1099","endLine":106,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1111","line":111,"column":9,"nodeType":"1098","messageId":"1099","endLine":111,"endColumn":12},{"ruleId":"1112","severity":1,"message":"1113","line":125,"column":6,"nodeType":"1114","endLine":125,"endColumn":8,"suggestions":"1115"},{"ruleId":"1096","severity":1,"message":"1116","line":153,"column":9,"nodeType":"1098","messageId":"1099","endLine":153,"endColumn":20},{"ruleId":"1112","severity":1,"message":"1117","line":168,"column":6,"nodeType":"1114","endLine":168,"endColumn":8,"suggestions":"1118"},{"ruleId":"1096","severity":1,"message":"1119","line":9,"column":3,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1120","line":20,"column":10,"nodeType":"1098","messageId":"1099","endLine":20,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1121","line":24,"column":10,"nodeType":"1098","messageId":"1099","endLine":24,"endColumn":26},{"ruleId":"1096","severity":1,"message":"1122","line":92,"column":10,"nodeType":"1098","messageId":"1099","endLine":92,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1123","line":92,"column":24,"nodeType":"1098","messageId":"1099","endLine":92,"endColumn":39},{"ruleId":"1124","severity":1,"message":"1125","line":161,"column":33,"nodeType":"1126","messageId":"1127","endLine":161,"endColumn":35},{"ruleId":"1124","severity":1,"message":"1125","line":203,"column":23,"nodeType":"1126","messageId":"1127","endLine":203,"endColumn":25},{"ruleId":"1124","severity":1,"message":"1125","line":205,"column":30,"nodeType":"1126","messageId":"1127","endLine":205,"endColumn":32},{"ruleId":"1124","severity":1,"message":"1125","line":213,"column":23,"nodeType":"1126","messageId":"1127","endLine":213,"endColumn":25},{"ruleId":"1124","severity":1,"message":"1125","line":215,"column":30,"nodeType":"1126","messageId":"1127","endLine":215,"endColumn":32},{"ruleId":"1124","severity":1,"message":"1128","line":323,"column":40,"nodeType":"1126","messageId":"1127","endLine":323,"endColumn":42},{"ruleId":"1129","severity":1,"message":"1130","line":400,"column":21,"nodeType":"1131","endLine":400,"endColumn":33},{"ruleId":"1096","severity":1,"message":"1132","line":19,"column":5,"nodeType":"1098","messageId":"1099","endLine":19,"endColumn":34},{"ruleId":"1096","severity":1,"message":"1133","line":20,"column":5,"nodeType":"1098","messageId":"1099","endLine":20,"endColumn":35},{"ruleId":"1096","severity":1,"message":"1134","line":21,"column":5,"nodeType":"1098","messageId":"1099","endLine":21,"endColumn":35},{"ruleId":"1096","severity":1,"message":"1107","line":7,"column":8,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":15},{"ruleId":"1096","severity":1,"message":"1135","line":9,"column":3,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1136","line":10,"column":3,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1137","line":11,"column":3,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1138","line":12,"column":3,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1139","line":13,"column":3,"nodeType":"1098","messageId":"1099","endLine":13,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1140","line":15,"column":3,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1141","line":17,"column":3,"nodeType":"1098","messageId":"1099","endLine":17,"endColumn":30},{"ruleId":"1096","severity":1,"message":"1142","line":25,"column":3,"nodeType":"1098","messageId":"1099","endLine":25,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1132","line":26,"column":3,"nodeType":"1098","messageId":"1099","endLine":26,"endColumn":32},{"ruleId":"1096","severity":1,"message":"1143","line":30,"column":13,"nodeType":"1098","messageId":"1099","endLine":30,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1144","line":42,"column":9,"nodeType":"1098","messageId":"1099","endLine":42,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1145","line":75,"column":45,"nodeType":"1098","messageId":"1099","endLine":75,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1145","line":130,"column":45,"nodeType":"1098","messageId":"1099","endLine":130,"endColumn":51},{"ruleId":"1124","severity":1,"message":"1125","line":158,"column":29,"nodeType":"1126","messageId":"1127","endLine":158,"endColumn":31},{"ruleId":"1124","severity":1,"message":"1125","line":190,"column":30,"nodeType":"1126","messageId":"1127","endLine":190,"endColumn":32},{"ruleId":"1096","severity":1,"message":"1146","line":9,"column":3,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1147","line":10,"column":3,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1142","line":14,"column":3,"nodeType":"1098","messageId":"1099","endLine":14,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1148","line":15,"column":3,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":25},{"ruleId":"1096","severity":1,"message":"1149","line":16,"column":3,"nodeType":"1098","messageId":"1099","endLine":16,"endColumn":27},{"ruleId":"1096","severity":1,"message":"1150","line":7,"column":8,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1151","line":13,"column":10,"nodeType":"1098","messageId":"1099","endLine":13,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1152","line":13,"column":21,"nodeType":"1098","messageId":"1099","endLine":13,"endColumn":30},{"ruleId":"1096","severity":1,"message":"1153","line":20,"column":10,"nodeType":"1098","messageId":"1099","endLine":20,"endColumn":30},{"ruleId":"1096","severity":1,"message":"1154","line":21,"column":10,"nodeType":"1098","messageId":"1099","endLine":21,"endColumn":32},{"ruleId":"1096","severity":1,"message":"1155","line":22,"column":10,"nodeType":"1098","messageId":"1099","endLine":22,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1156","line":23,"column":10,"nodeType":"1098","messageId":"1099","endLine":23,"endColumn":29},{"ruleId":"1124","severity":1,"message":"1125","line":116,"column":35,"nodeType":"1126","messageId":"1127","endLine":116,"endColumn":37},{"ruleId":"1124","severity":1,"message":"1125","line":128,"column":18,"nodeType":"1126","messageId":"1127","endLine":128,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1157","line":7,"column":8,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1158","line":12,"column":8,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1159","line":17,"column":8,"nodeType":"1098","messageId":"1099","endLine":17,"endColumn":30},{"ruleId":"1096","severity":1,"message":"1160","line":18,"column":8,"nodeType":"1098","messageId":"1099","endLine":18,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1161","line":20,"column":8,"nodeType":"1098","messageId":"1099","endLine":20,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1162","line":23,"column":8,"nodeType":"1098","messageId":"1099","endLine":23,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1163","line":24,"column":8,"nodeType":"1098","messageId":"1099","endLine":24,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1164","line":31,"column":8,"nodeType":"1098","messageId":"1099","endLine":31,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1165","line":41,"column":25,"nodeType":"1098","messageId":"1099","endLine":41,"endColumn":38},{"ruleId":"1096","severity":1,"message":"1166","line":41,"column":40,"nodeType":"1098","messageId":"1099","endLine":41,"endColumn":45},{"ruleId":"1096","severity":1,"message":"1167","line":42,"column":10,"nodeType":"1098","messageId":"1099","endLine":42,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1168","line":44,"column":8,"nodeType":"1098","messageId":"1099","endLine":44,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1169","line":45,"column":8,"nodeType":"1098","messageId":"1099","endLine":45,"endColumn":25},{"ruleId":"1096","severity":1,"message":"1170","line":54,"column":10,"nodeType":"1098","messageId":"1099","endLine":54,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1171","line":259,"column":9,"nodeType":"1098","messageId":"1099","endLine":259,"endColumn":35},{"ruleId":"1124","severity":1,"message":"1125","line":294,"column":33,"nodeType":"1126","messageId":"1127","endLine":294,"endColumn":35},{"ruleId":"1124","severity":1,"message":"1125","line":297,"column":33,"nodeType":"1126","messageId":"1127","endLine":297,"endColumn":35},{"ruleId":"1124","severity":1,"message":"1125","line":308,"column":33,"nodeType":"1126","messageId":"1127","endLine":308,"endColumn":35},{"ruleId":"1124","severity":1,"message":"1125","line":311,"column":33,"nodeType":"1126","messageId":"1127","endLine":311,"endColumn":35},{"ruleId":"1096","severity":1,"message":"1172","line":322,"column":9,"nodeType":"1098","messageId":"1099","endLine":322,"endColumn":15},{"ruleId":"1096","severity":1,"message":"1173","line":324,"column":9,"nodeType":"1098","messageId":"1099","endLine":324,"endColumn":14},{"ruleId":"1124","severity":1,"message":"1125","line":469,"column":34,"nodeType":"1126","messageId":"1127","endLine":469,"endColumn":36},{"ruleId":"1124","severity":1,"message":"1125","line":529,"column":62,"nodeType":"1126","messageId":"1127","endLine":529,"endColumn":64},{"ruleId":"1124","severity":1,"message":"1125","line":533,"column":34,"nodeType":"1126","messageId":"1127","endLine":533,"endColumn":36},{"ruleId":"1124","severity":1,"message":"1125","line":568,"column":34,"nodeType":"1126","messageId":"1127","endLine":568,"endColumn":36},{"ruleId":"1096","severity":1,"message":"1150","line":7,"column":8,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1174","line":10,"column":8,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1152","line":13,"column":10,"nodeType":"1098","messageId":"1099","endLine":13,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1175","line":4,"column":10,"nodeType":"1098","messageId":"1099","endLine":4,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1176","line":6,"column":23,"nodeType":"1098","messageId":"1099","endLine":6,"endColumn":27},{"ruleId":"1096","severity":1,"message":"1177","line":7,"column":8,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":31},{"ruleId":"1096","severity":1,"message":"1119","line":11,"column":8,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1178","line":12,"column":10,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":15},{"ruleId":"1096","severity":1,"message":"1179","line":12,"column":17,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1180","line":12,"column":24,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":27},{"ruleId":"1096","severity":1,"message":"1181","line":12,"column":29,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":33},{"ruleId":"1096","severity":1,"message":"1182","line":13,"column":10,"nodeType":"1098","messageId":"1099","endLine":13,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1183","line":13,"column":20,"nodeType":"1098","messageId":"1099","endLine":13,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1184","line":54,"column":7,"nodeType":"1098","messageId":"1099","endLine":54,"endColumn":11},{"ruleId":"1096","severity":1,"message":"1185","line":74,"column":11,"nodeType":"1098","messageId":"1099","endLine":74,"endColumn":19},{"ruleId":"1124","severity":1,"message":"1125","line":105,"column":40,"nodeType":"1126","messageId":"1127","endLine":105,"endColumn":42},{"ruleId":"1124","severity":1,"message":"1125","line":107,"column":42,"nodeType":"1126","messageId":"1127","endLine":107,"endColumn":44},{"ruleId":"1112","severity":1,"message":"1186","line":142,"column":8,"nodeType":"1114","endLine":142,"endColumn":10,"suggestions":"1187"},{"ruleId":"1096","severity":1,"message":"1188","line":17,"column":8,"nodeType":"1098","messageId":"1099","endLine":17,"endColumn":22},{"ruleId":"1092","replacedBy":"1189"},{"ruleId":"1094","replacedBy":"1190"},{"ruleId":"1096","severity":1,"message":"1191","line":22,"column":8,"nodeType":"1098","messageId":"1099","endLine":22,"endColumn":29},{"ruleId":"1096","severity":1,"message":"1192","line":4,"column":8,"nodeType":"1098","messageId":"1099","endLine":4,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1161","line":5,"column":8,"nodeType":"1098","messageId":"1099","endLine":5,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1150","line":4,"column":8,"nodeType":"1098","messageId":"1099","endLine":4,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1193","line":2,"column":38,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":49},{"ruleId":"1096","severity":1,"message":"1194","line":15,"column":11,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1195","line":44,"column":11,"nodeType":"1098","messageId":"1099","endLine":44,"endColumn":29},{"ruleId":"1124","severity":1,"message":"1125","line":47,"column":20,"nodeType":"1126","messageId":"1127","endLine":47,"endColumn":22},{"ruleId":"1124","severity":1,"message":"1125","line":50,"column":49,"nodeType":"1126","messageId":"1127","endLine":50,"endColumn":51},{"ruleId":"1124","severity":1,"message":"1125","line":53,"column":27,"nodeType":"1126","messageId":"1127","endLine":53,"endColumn":29},{"ruleId":"1124","severity":1,"message":"1125","line":56,"column":49,"nodeType":"1126","messageId":"1127","endLine":56,"endColumn":51},{"ruleId":"1124","severity":1,"message":"1125","line":104,"column":49,"nodeType":"1126","messageId":"1127","endLine":104,"endColumn":51},{"ruleId":"1124","severity":1,"message":"1125","line":119,"column":49,"nodeType":"1126","messageId":"1127","endLine":119,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1196","line":1,"column":29,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":40},{"ruleId":"1096","severity":1,"message":"1192","line":1,"column":42,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":58},{"ruleId":"1096","severity":1,"message":"1166","line":1,"column":73,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":78},{"ruleId":"1096","severity":1,"message":"1197","line":3,"column":8,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1198","line":4,"column":8,"nodeType":"1098","messageId":"1099","endLine":4,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1199","line":6,"column":8,"nodeType":"1098","messageId":"1099","endLine":6,"endColumn":25},{"ruleId":"1096","severity":1,"message":"1200","line":7,"column":8,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1201","line":12,"column":8,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1202","line":71,"column":12,"nodeType":"1098","messageId":"1099","endLine":71,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1203","line":71,"column":24,"nodeType":"1098","messageId":"1099","endLine":71,"endColumn":37},{"ruleId":"1096","severity":1,"message":"1185","line":85,"column":11,"nodeType":"1098","messageId":"1099","endLine":85,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1194","line":86,"column":11,"nodeType":"1098","messageId":"1099","endLine":86,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1204","line":90,"column":15,"nodeType":"1098","messageId":"1099","endLine":90,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1205","line":92,"column":15,"nodeType":"1098","messageId":"1099","endLine":92,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1204","line":110,"column":15,"nodeType":"1098","messageId":"1099","endLine":110,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1206","line":181,"column":11,"nodeType":"1098","messageId":"1099","endLine":181,"endColumn":27},{"ruleId":"1124","severity":1,"message":"1125","line":224,"column":35,"nodeType":"1126","messageId":"1127","endLine":224,"endColumn":37},{"ruleId":"1124","severity":1,"message":"1125","line":457,"column":40,"nodeType":"1126","messageId":"1127","endLine":457,"endColumn":42},{"ruleId":"1096","severity":1,"message":"1192","line":19,"column":8,"nodeType":"1098","messageId":"1099","endLine":19,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1161","line":20,"column":8,"nodeType":"1098","messageId":"1099","endLine":20,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1207","line":227,"column":17,"nodeType":"1098","messageId":"1099","endLine":227,"endColumn":25},{"ruleId":"1096","severity":1,"message":"1208","line":5,"column":8,"nodeType":"1098","messageId":"1099","endLine":5,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1209","line":6,"column":8,"nodeType":"1098","messageId":"1099","endLine":6,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1210","line":7,"column":8,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1211","line":8,"column":8,"nodeType":"1098","messageId":"1099","endLine":8,"endColumn":15},{"ruleId":"1096","severity":1,"message":"1212","line":36,"column":18,"nodeType":"1098","messageId":"1099","endLine":36,"endColumn":27},{"ruleId":"1092","replacedBy":"1213"},{"ruleId":"1094","replacedBy":"1214"},{"ruleId":"1096","severity":1,"message":"1215","line":4,"column":3,"nodeType":"1098","messageId":"1099","endLine":4,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1216","line":5,"column":3,"nodeType":"1098","messageId":"1099","endLine":5,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1217","line":7,"column":3,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1157","line":9,"column":8,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1218","line":10,"column":8,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1196","line":12,"column":8,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1179","line":13,"column":10,"nodeType":"1098","messageId":"1099","endLine":13,"endColumn":15},{"ruleId":"1096","severity":1,"message":"1219","line":14,"column":8,"nodeType":"1098","messageId":"1099","endLine":14,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1220","line":15,"column":8,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1221","line":17,"column":24,"nodeType":"1098","messageId":"1099","endLine":17,"endColumn":29},{"ruleId":"1096","severity":1,"message":"1222","line":18,"column":8,"nodeType":"1098","messageId":"1099","endLine":18,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1223","line":8,"column":10,"nodeType":"1098","messageId":"1099","endLine":8,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1104","line":3,"column":8,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1224","line":10,"column":3,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1225","line":12,"column":3,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1226","line":1,"column":77,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":93},{"ruleId":"1096","severity":1,"message":"1120","line":5,"column":10,"nodeType":"1098","messageId":"1099","endLine":5,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1176","line":12,"column":8,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1227","line":13,"column":8,"nodeType":"1098","messageId":"1099","endLine":13,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1228","line":67,"column":12,"nodeType":"1098","messageId":"1099","endLine":67,"endColumn":28},{"ruleId":"1096","severity":1,"message":"1229","line":67,"column":30,"nodeType":"1098","messageId":"1099","endLine":67,"endColumn":49},{"ruleId":"1096","severity":1,"message":"1230","line":68,"column":12,"nodeType":"1098","messageId":"1099","endLine":68,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1231","line":68,"column":22,"nodeType":"1098","messageId":"1099","endLine":68,"endColumn":33},{"ruleId":"1096","severity":1,"message":"1232","line":73,"column":12,"nodeType":"1098","messageId":"1099","endLine":73,"endColumn":25},{"ruleId":"1096","severity":1,"message":"1233","line":75,"column":12,"nodeType":"1098","messageId":"1099","endLine":75,"endColumn":27},{"ruleId":"1124","severity":1,"message":"1125","line":160,"column":33,"nodeType":"1126","messageId":"1127","endLine":160,"endColumn":35},{"ruleId":"1112","severity":1,"message":"1234","line":203,"column":8,"nodeType":"1114","endLine":203,"endColumn":10,"suggestions":"1235"},{"ruleId":"1112","severity":1,"message":"1236","line":210,"column":8,"nodeType":"1114","endLine":210,"endColumn":10,"suggestions":"1237"},{"ruleId":"1124","severity":1,"message":"1125","line":260,"column":29,"nodeType":"1126","messageId":"1127","endLine":260,"endColumn":31},{"ruleId":"1124","severity":1,"message":"1125","line":263,"column":33,"nodeType":"1126","messageId":"1127","endLine":263,"endColumn":35},{"ruleId":"1124","severity":1,"message":"1125","line":277,"column":29,"nodeType":"1126","messageId":"1127","endLine":277,"endColumn":31},{"ruleId":"1124","severity":1,"message":"1125","line":280,"column":33,"nodeType":"1126","messageId":"1127","endLine":280,"endColumn":35},{"ruleId":"1096","severity":1,"message":"1238","line":286,"column":11,"nodeType":"1098","messageId":"1099","endLine":286,"endColumn":34},{"ruleId":"1096","severity":1,"message":"1194","line":291,"column":13,"nodeType":"1098","messageId":"1099","endLine":291,"endColumn":21},{"ruleId":"1124","severity":1,"message":"1125","line":312,"column":20,"nodeType":"1126","messageId":"1127","endLine":312,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1239","line":34,"column":10,"nodeType":"1098","messageId":"1099","endLine":34,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1207","line":312,"column":17,"nodeType":"1098","messageId":"1099","endLine":312,"endColumn":25},{"ruleId":"1124","severity":1,"message":"1125","line":373,"column":19,"nodeType":"1126","messageId":"1127","endLine":373,"endColumn":21},{"ruleId":"1124","severity":1,"message":"1125","line":450,"column":24,"nodeType":"1126","messageId":"1127","endLine":450,"endColumn":26},{"ruleId":"1124","severity":1,"message":"1125","line":452,"column":34,"nodeType":"1126","messageId":"1127","endLine":452,"endColumn":36},{"ruleId":"1124","severity":1,"message":"1125","line":633,"column":72,"nodeType":"1126","messageId":"1127","endLine":633,"endColumn":74},{"ruleId":"1096","severity":1,"message":"1100","line":3,"column":8,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1240","line":9,"column":8,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1241","line":10,"column":8,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1242","line":15,"column":8,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1243","line":16,"column":8,"nodeType":"1098","messageId":"1099","endLine":16,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1244","line":17,"column":8,"nodeType":"1098","messageId":"1099","endLine":17,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1245","line":19,"column":10,"nodeType":"1098","messageId":"1099","endLine":19,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1246","line":19,"column":15,"nodeType":"1098","messageId":"1099","endLine":19,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1247","line":19,"column":21,"nodeType":"1098","messageId":"1099","endLine":19,"endColumn":29},{"ruleId":"1096","severity":1,"message":"1248","line":55,"column":9,"nodeType":"1098","messageId":"1099","endLine":55,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1249","line":64,"column":9,"nodeType":"1098","messageId":"1099","endLine":64,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1250","line":66,"column":9,"nodeType":"1098","messageId":"1099","endLine":66,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1251","line":70,"column":9,"nodeType":"1098","messageId":"1099","endLine":70,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1252","line":74,"column":9,"nodeType":"1098","messageId":"1099","endLine":74,"endColumn":23},{"ruleId":"1124","severity":1,"message":"1125","line":155,"column":38,"nodeType":"1126","messageId":"1127","endLine":155,"endColumn":40},{"ruleId":"1124","severity":1,"message":"1125","line":165,"column":40,"nodeType":"1126","messageId":"1127","endLine":165,"endColumn":42},{"ruleId":"1096","severity":1,"message":"1253","line":6,"column":8,"nodeType":"1098","messageId":"1099","endLine":6,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1241","line":7,"column":8,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1254","line":8,"column":8,"nodeType":"1098","messageId":"1099","endLine":8,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1255","line":9,"column":9,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1256","line":15,"column":19,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":32},{"ruleId":"1112","severity":1,"message":"1257","line":56,"column":6,"nodeType":"1114","endLine":56,"endColumn":8,"suggestions":"1258"},{"ruleId":"1096","severity":1,"message":"1259","line":4,"column":32,"nodeType":"1098","messageId":"1099","endLine":4,"endColumn":41},{"ruleId":"1096","severity":1,"message":"1260","line":160,"column":7,"nodeType":"1098","messageId":"1099","endLine":160,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1261","line":2,"column":5,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1262","line":5,"column":5,"nodeType":"1098","messageId":"1099","endLine":5,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1263","line":6,"column":5,"nodeType":"1098","messageId":"1099","endLine":6,"endColumn":27},{"ruleId":"1096","severity":1,"message":"1264","line":7,"column":5,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1265","line":13,"column":5,"nodeType":"1098","messageId":"1099","endLine":13,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1266","line":4,"column":8,"nodeType":"1098","messageId":"1099","endLine":4,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1267","line":5,"column":8,"nodeType":"1098","messageId":"1099","endLine":5,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1268","line":2,"column":8,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1269","line":8,"column":21,"nodeType":"1098","messageId":"1099","endLine":8,"endColumn":31},{"ruleId":"1096","severity":1,"message":"1270","line":9,"column":19,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":27},{"ruleId":"1096","severity":1,"message":"1271","line":11,"column":21,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":31},{"ruleId":"1112","severity":1,"message":"1272","line":20,"column":9,"nodeType":"1114","endLine":20,"endColumn":21,"suggestions":"1273"},{"ruleId":"1112","severity":1,"message":"1274","line":35,"column":8,"nodeType":"1114","endLine":35,"endColumn":29,"suggestions":"1275"},{"ruleId":"1096","severity":1,"message":"1193","line":2,"column":38,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":49},{"ruleId":"1096","severity":1,"message":"1194","line":15,"column":11,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1276","line":17,"column":24,"nodeType":"1098","messageId":"1099","endLine":17,"endColumn":37},{"ruleId":"1124","severity":1,"message":"1125","line":45,"column":20,"nodeType":"1126","messageId":"1127","endLine":45,"endColumn":22},{"ruleId":"1124","severity":1,"message":"1125","line":48,"column":49,"nodeType":"1126","messageId":"1127","endLine":48,"endColumn":51},{"ruleId":"1124","severity":1,"message":"1125","line":51,"column":27,"nodeType":"1126","messageId":"1127","endLine":51,"endColumn":29},{"ruleId":"1124","severity":1,"message":"1125","line":54,"column":49,"nodeType":"1126","messageId":"1127","endLine":54,"endColumn":51},{"ruleId":"1124","severity":1,"message":"1125","line":101,"column":49,"nodeType":"1126","messageId":"1127","endLine":101,"endColumn":51},{"ruleId":"1124","severity":1,"message":"1125","line":116,"column":49,"nodeType":"1126","messageId":"1127","endLine":116,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1277","line":12,"column":10,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":27},{"ruleId":"1092","replacedBy":"1278"},{"ruleId":"1094","replacedBy":"1279"},{"ruleId":"1092","replacedBy":"1280"},{"ruleId":"1094","replacedBy":"1281"},{"ruleId":"1096","severity":1,"message":"1254","line":1,"column":66,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":76},{"ruleId":"1124","severity":1,"message":"1125","line":37,"column":29,"nodeType":"1126","messageId":"1127","endLine":37,"endColumn":31},{"ruleId":"1096","severity":1,"message":"1192","line":19,"column":8,"nodeType":"1098","messageId":"1099","endLine":19,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1161","line":20,"column":8,"nodeType":"1098","messageId":"1099","endLine":20,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1282","line":23,"column":8,"nodeType":"1098","messageId":"1099","endLine":23,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1163","line":26,"column":10,"nodeType":"1098","messageId":"1099","endLine":26,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1239","line":28,"column":10,"nodeType":"1098","messageId":"1099","endLine":28,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1207","line":286,"column":17,"nodeType":"1098","messageId":"1099","endLine":286,"endColumn":25},{"ruleId":"1096","severity":1,"message":"1283","line":19,"column":7,"nodeType":"1098","messageId":"1099","endLine":19,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1260","line":80,"column":13,"nodeType":"1098","messageId":"1099","endLine":80,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1260","line":102,"column":13,"nodeType":"1098","messageId":"1099","endLine":102,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1260","line":123,"column":13,"nodeType":"1098","messageId":"1099","endLine":123,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1260","line":143,"column":11,"nodeType":"1098","messageId":"1099","endLine":143,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1260","line":167,"column":7,"nodeType":"1098","messageId":"1099","endLine":167,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1260","line":188,"column":7,"nodeType":"1098","messageId":"1099","endLine":188,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1260","line":208,"column":7,"nodeType":"1098","messageId":"1099","endLine":208,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1260","line":231,"column":7,"nodeType":"1098","messageId":"1099","endLine":231,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1284","line":7,"column":13,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1276","line":16,"column":24,"nodeType":"1098","messageId":"1099","endLine":16,"endColumn":37},{"ruleId":"1124","severity":1,"message":"1125","line":45,"column":49,"nodeType":"1126","messageId":"1127","endLine":45,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1276","line":15,"column":24,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":37},{"ruleId":"1124","severity":1,"message":"1125","line":40,"column":49,"nodeType":"1126","messageId":"1127","endLine":40,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1145","line":91,"column":45,"nodeType":"1098","messageId":"1099","endLine":91,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1145","line":122,"column":45,"nodeType":"1098","messageId":"1099","endLine":122,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1145","line":151,"column":45,"nodeType":"1098","messageId":"1099","endLine":151,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1100","line":3,"column":8,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1240","line":9,"column":8,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1241","line":10,"column":8,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1242","line":15,"column":8,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1243","line":16,"column":8,"nodeType":"1098","messageId":"1099","endLine":16,"endColumn":22},{"ruleId":"1124","severity":1,"message":"1125","line":122,"column":26,"nodeType":"1126","messageId":"1127","endLine":122,"endColumn":28},{"ruleId":"1096","severity":1,"message":"1100","line":3,"column":8,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1240","line":9,"column":8,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1241","line":10,"column":8,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1242","line":15,"column":8,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1243","line":16,"column":8,"nodeType":"1098","messageId":"1099","endLine":16,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1244","line":17,"column":8,"nodeType":"1098","messageId":"1099","endLine":17,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1285","line":18,"column":8,"nodeType":"1098","messageId":"1099","endLine":18,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1246","line":19,"column":10,"nodeType":"1098","messageId":"1099","endLine":19,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1247","line":19,"column":16,"nodeType":"1098","messageId":"1099","endLine":19,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1248","line":51,"column":9,"nodeType":"1098","messageId":"1099","endLine":51,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1249","line":60,"column":9,"nodeType":"1098","messageId":"1099","endLine":60,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1250","line":62,"column":9,"nodeType":"1098","messageId":"1099","endLine":62,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1251","line":66,"column":9,"nodeType":"1098","messageId":"1099","endLine":66,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1252","line":70,"column":9,"nodeType":"1098","messageId":"1099","endLine":70,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1100","line":3,"column":8,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1240","line":9,"column":8,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1241","line":10,"column":8,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1286","line":14,"column":8,"nodeType":"1098","messageId":"1099","endLine":14,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1242","line":15,"column":8,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1243","line":16,"column":8,"nodeType":"1098","messageId":"1099","endLine":16,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1244","line":17,"column":8,"nodeType":"1098","messageId":"1099","endLine":17,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1246","line":19,"column":10,"nodeType":"1098","messageId":"1099","endLine":19,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1247","line":19,"column":16,"nodeType":"1098","messageId":"1099","endLine":19,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1248","line":52,"column":9,"nodeType":"1098","messageId":"1099","endLine":52,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1249","line":61,"column":9,"nodeType":"1098","messageId":"1099","endLine":61,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1250","line":63,"column":9,"nodeType":"1098","messageId":"1099","endLine":63,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1251","line":67,"column":9,"nodeType":"1098","messageId":"1099","endLine":67,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1252","line":71,"column":9,"nodeType":"1098","messageId":"1099","endLine":71,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1104","line":3,"column":8,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1145","line":149,"column":47,"nodeType":"1098","messageId":"1099","endLine":149,"endColumn":53},{"ruleId":"1096","severity":1,"message":"1145","line":57,"column":47,"nodeType":"1098","messageId":"1099","endLine":57,"endColumn":53},{"ruleId":"1096","severity":1,"message":"1145","line":89,"column":45,"nodeType":"1098","messageId":"1099","endLine":89,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1145","line":121,"column":45,"nodeType":"1098","messageId":"1099","endLine":121,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1287","line":36,"column":9,"nodeType":"1098","messageId":"1099","endLine":36,"endColumn":15},{"ruleId":"1096","severity":1,"message":"1145","line":76,"column":49,"nodeType":"1098","messageId":"1099","endLine":76,"endColumn":55},{"ruleId":"1096","severity":1,"message":"1145","line":109,"column":49,"nodeType":"1098","messageId":"1099","endLine":109,"endColumn":55},{"ruleId":"1096","severity":1,"message":"1288","line":4,"column":43,"nodeType":"1098","messageId":"1099","endLine":4,"endColumn":53},{"ruleId":"1096","severity":1,"message":"1268","line":6,"column":8,"nodeType":"1098","messageId":"1099","endLine":6,"endColumn":13},{"ruleId":"1124","severity":1,"message":"1125","line":29,"column":36,"nodeType":"1126","messageId":"1127","endLine":29,"endColumn":38},{"ruleId":"1124","severity":1,"message":"1125","line":67,"column":32,"nodeType":"1126","messageId":"1127","endLine":67,"endColumn":34},{"ruleId":"1289","severity":1,"message":"1290","line":9,"column":48,"nodeType":"1291","messageId":"1292","endLine":9,"endColumn":49},{"ruleId":"1096","severity":1,"message":"1293","line":22,"column":10,"nodeType":"1098","messageId":"1099","endLine":22,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1293","line":22,"column":10,"nodeType":"1098","messageId":"1099","endLine":22,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1276","line":15,"column":24,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":37},{"ruleId":"1096","severity":1,"message":"1119","line":9,"column":3,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1120","line":12,"column":10,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1100","line":3,"column":8,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1240","line":9,"column":8,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1241","line":10,"column":8,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1242","line":15,"column":8,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1243","line":16,"column":8,"nodeType":"1098","messageId":"1099","endLine":16,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1244","line":17,"column":8,"nodeType":"1098","messageId":"1099","endLine":17,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1246","line":19,"column":10,"nodeType":"1098","messageId":"1099","endLine":19,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1247","line":19,"column":16,"nodeType":"1098","messageId":"1099","endLine":19,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1248","line":51,"column":9,"nodeType":"1098","messageId":"1099","endLine":51,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1249","line":60,"column":9,"nodeType":"1098","messageId":"1099","endLine":60,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1250","line":62,"column":9,"nodeType":"1098","messageId":"1099","endLine":62,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1251","line":66,"column":9,"nodeType":"1098","messageId":"1099","endLine":66,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1252","line":70,"column":9,"nodeType":"1098","messageId":"1099","endLine":70,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1294","line":3,"column":8,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":12},{"ruleId":"1092","replacedBy":"1295"},{"ruleId":"1094","replacedBy":"1296"},{"ruleId":"1096","severity":1,"message":"1297","line":5,"column":8,"nodeType":"1098","messageId":"1099","endLine":5,"endColumn":19},{"ruleId":"1298","severity":1,"message":"1299","line":14,"column":13,"nodeType":"1131","endLine":14,"endColumn":31},{"ruleId":"1096","severity":1,"message":"1300","line":1,"column":28,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":36},{"ruleId":"1096","severity":1,"message":"1301","line":1,"column":49,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":58},{"ruleId":"1096","severity":1,"message":"1255","line":7,"column":9,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":24},{"ruleId":"1124","severity":1,"message":"1125","line":40,"column":21,"nodeType":"1126","messageId":"1127","endLine":40,"endColumn":23},{"ruleId":"1124","severity":1,"message":"1128","line":41,"column":28,"nodeType":"1126","messageId":"1127","endLine":41,"endColumn":30},{"ruleId":"1096","severity":1,"message":"1302","line":1,"column":10,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1303","line":8,"column":7,"nodeType":"1098","messageId":"1099","endLine":8,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1283","line":24,"column":7,"nodeType":"1098","messageId":"1099","endLine":24,"endColumn":13},{"ruleId":"1124","severity":1,"message":"1128","line":138,"column":32,"nodeType":"1126","messageId":"1127","endLine":138,"endColumn":34},{"ruleId":"1304","severity":1,"message":"1305","line":6,"column":3,"nodeType":"1306","messageId":"1307","endLine":8,"endColumn":4},{"ruleId":"1304","severity":1,"message":"1305","line":4,"column":3,"nodeType":"1306","messageId":"1307","endLine":6,"endColumn":4},{"ruleId":"1304","severity":1,"message":"1305","line":5,"column":3,"nodeType":"1306","messageId":"1307","endLine":7,"endColumn":4},{"ruleId":"1096","severity":1,"message":"1308","line":3,"column":8,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1309","line":4,"column":8,"nodeType":"1098","messageId":"1099","endLine":4,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1310","line":5,"column":8,"nodeType":"1098","messageId":"1099","endLine":5,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1311","line":7,"column":8,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1245","line":8,"column":10,"nodeType":"1098","messageId":"1099","endLine":8,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1163","line":8,"column":15,"nodeType":"1098","messageId":"1099","endLine":8,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1312","line":9,"column":8,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1313","line":43,"column":7,"nodeType":"1098","messageId":"1099","endLine":43,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1314","line":86,"column":6,"nodeType":"1114","endLine":86,"endColumn":8,"suggestions":"1315"},{"ruleId":"1124","severity":1,"message":"1125","line":93,"column":27,"nodeType":"1126","messageId":"1127","endLine":93,"endColumn":29},{"ruleId":"1124","severity":1,"message":"1125","line":96,"column":27,"nodeType":"1126","messageId":"1127","endLine":96,"endColumn":29},{"ruleId":"1124","severity":1,"message":"1125","line":139,"column":59,"nodeType":"1126","messageId":"1127","endLine":139,"endColumn":61},{"ruleId":"1124","severity":1,"message":"1125","line":143,"column":21,"nodeType":"1126","messageId":"1127","endLine":143,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1303","line":6,"column":7,"nodeType":"1098","messageId":"1099","endLine":6,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1176","line":5,"column":23,"nodeType":"1098","messageId":"1099","endLine":5,"endColumn":27},{"ruleId":"1096","severity":1,"message":"1177","line":6,"column":8,"nodeType":"1098","messageId":"1099","endLine":6,"endColumn":31},{"ruleId":"1096","severity":1,"message":"1119","line":10,"column":8,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1178","line":11,"column":10,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":15},{"ruleId":"1096","severity":1,"message":"1179","line":11,"column":17,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1180","line":11,"column":24,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":27},{"ruleId":"1096","severity":1,"message":"1181","line":11,"column":29,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":33},{"ruleId":"1096","severity":1,"message":"1182","line":12,"column":10,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1183","line":12,"column":20,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1316","line":13,"column":8,"nodeType":"1098","messageId":"1099","endLine":13,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1317","line":14,"column":8,"nodeType":"1098","messageId":"1099","endLine":14,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1175","line":16,"column":10,"nodeType":"1098","messageId":"1099","endLine":16,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1184","line":53,"column":7,"nodeType":"1098","messageId":"1099","endLine":53,"endColumn":11},{"ruleId":"1096","severity":1,"message":"1185","line":74,"column":11,"nodeType":"1098","messageId":"1099","endLine":74,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1194","line":75,"column":11,"nodeType":"1098","messageId":"1099","endLine":75,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1318","line":76,"column":11,"nodeType":"1098","messageId":"1099","endLine":76,"endColumn":26},{"ruleId":"1096","severity":1,"message":"1204","line":77,"column":11,"nodeType":"1098","messageId":"1099","endLine":77,"endColumn":18},{"ruleId":"1112","severity":1,"message":"1319","line":136,"column":8,"nodeType":"1114","endLine":136,"endColumn":10,"suggestions":"1320"},{"ruleId":"1096","severity":1,"message":"1176","line":5,"column":23,"nodeType":"1098","messageId":"1099","endLine":5,"endColumn":27},{"ruleId":"1096","severity":1,"message":"1177","line":6,"column":8,"nodeType":"1098","messageId":"1099","endLine":6,"endColumn":31},{"ruleId":"1096","severity":1,"message":"1119","line":10,"column":8,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1178","line":11,"column":10,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":15},{"ruleId":"1096","severity":1,"message":"1179","line":11,"column":17,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1180","line":11,"column":24,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":27},{"ruleId":"1096","severity":1,"message":"1181","line":11,"column":29,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":33},{"ruleId":"1096","severity":1,"message":"1182","line":12,"column":10,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1183","line":12,"column":20,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1316","line":13,"column":8,"nodeType":"1098","messageId":"1099","endLine":13,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1317","line":14,"column":8,"nodeType":"1098","messageId":"1099","endLine":14,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1175","line":16,"column":10,"nodeType":"1098","messageId":"1099","endLine":16,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1184","line":53,"column":7,"nodeType":"1098","messageId":"1099","endLine":53,"endColumn":11},{"ruleId":"1096","severity":1,"message":"1185","line":74,"column":11,"nodeType":"1098","messageId":"1099","endLine":74,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1194","line":75,"column":11,"nodeType":"1098","messageId":"1099","endLine":75,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1318","line":76,"column":11,"nodeType":"1098","messageId":"1099","endLine":76,"endColumn":26},{"ruleId":"1096","severity":1,"message":"1204","line":77,"column":11,"nodeType":"1098","messageId":"1099","endLine":77,"endColumn":18},{"ruleId":"1112","severity":1,"message":"1319","line":136,"column":8,"nodeType":"1114","endLine":136,"endColumn":10,"suggestions":"1321"},{"ruleId":"1096","severity":1,"message":"1196","line":1,"column":29,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":40},{"ruleId":"1096","severity":1,"message":"1192","line":1,"column":42,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":58},{"ruleId":"1096","severity":1,"message":"1166","line":1,"column":73,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":78},{"ruleId":"1096","severity":1,"message":"1197","line":3,"column":8,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1198","line":4,"column":8,"nodeType":"1098","messageId":"1099","endLine":4,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1199","line":6,"column":8,"nodeType":"1098","messageId":"1099","endLine":6,"endColumn":25},{"ruleId":"1096","severity":1,"message":"1200","line":7,"column":8,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1322","line":8,"column":13,"nodeType":"1098","messageId":"1099","endLine":8,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1222","line":10,"column":8,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1201","line":11,"column":8,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1323","line":15,"column":10,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1324","line":16,"column":10,"nodeType":"1098","messageId":"1099","endLine":16,"endColumn":34},{"ruleId":"1096","severity":1,"message":"1325","line":16,"column":36,"nodeType":"1098","messageId":"1099","endLine":16,"endColumn":68},{"ruleId":"1096","severity":1,"message":"1326","line":27,"column":27,"nodeType":"1098","messageId":"1099","endLine":27,"endColumn":43},{"ruleId":"1096","severity":1,"message":"1327","line":28,"column":28,"nodeType":"1098","messageId":"1099","endLine":28,"endColumn":45},{"ruleId":"1096","severity":1,"message":"1328","line":30,"column":12,"nodeType":"1098","messageId":"1099","endLine":30,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1202","line":33,"column":12,"nodeType":"1098","messageId":"1099","endLine":33,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1203","line":33,"column":24,"nodeType":"1098","messageId":"1099","endLine":33,"endColumn":37},{"ruleId":"1096","severity":1,"message":"1185","line":63,"column":11,"nodeType":"1098","messageId":"1099","endLine":63,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1194","line":64,"column":11,"nodeType":"1098","messageId":"1099","endLine":64,"endColumn":19},{"ruleId":"1112","severity":1,"message":"1329","line":100,"column":8,"nodeType":"1114","endLine":100,"endColumn":10,"suggestions":"1330"},{"ruleId":"1096","severity":1,"message":"1206","line":110,"column":11,"nodeType":"1098","messageId":"1099","endLine":110,"endColumn":27},{"ruleId":"1124","severity":1,"message":"1125","line":169,"column":35,"nodeType":"1126","messageId":"1127","endLine":169,"endColumn":37},{"ruleId":"1096","severity":1,"message":"1284","line":7,"column":13,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1276","line":16,"column":24,"nodeType":"1098","messageId":"1099","endLine":16,"endColumn":37},{"ruleId":"1124","severity":1,"message":"1125","line":45,"column":49,"nodeType":"1126","messageId":"1127","endLine":45,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1100","line":3,"column":8,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1331","line":8,"column":8,"nodeType":"1098","messageId":"1099","endLine":8,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1240","line":9,"column":8,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1241","line":10,"column":8,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1254","line":12,"column":8,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1286","line":14,"column":8,"nodeType":"1098","messageId":"1099","endLine":14,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1242","line":15,"column":8,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1243","line":16,"column":8,"nodeType":"1098","messageId":"1099","endLine":16,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1285","line":18,"column":8,"nodeType":"1098","messageId":"1099","endLine":18,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1245","line":19,"column":10,"nodeType":"1098","messageId":"1099","endLine":19,"endColumn":13},{"ruleId":"1124","severity":1,"message":"1125","line":126,"column":26,"nodeType":"1126","messageId":"1127","endLine":126,"endColumn":28},{"ruleId":"1096","severity":1,"message":"1277","line":12,"column":10,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":27},{"ruleId":"1096","severity":1,"message":"1332","line":15,"column":10,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":32},{"ruleId":"1096","severity":1,"message":"1276","line":15,"column":24,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":37},{"ruleId":"1112","severity":1,"message":"1333","line":32,"column":8,"nodeType":"1114","endLine":32,"endColumn":20,"suggestions":"1334"},{"ruleId":"1124","severity":1,"message":"1125","line":43,"column":49,"nodeType":"1126","messageId":"1127","endLine":43,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1276","line":15,"column":24,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":37},{"ruleId":"1112","severity":1,"message":"1333","line":29,"column":8,"nodeType":"1114","endLine":29,"endColumn":20,"suggestions":"1335"},{"ruleId":"1096","severity":1,"message":"1276","line":16,"column":24,"nodeType":"1098","messageId":"1099","endLine":16,"endColumn":37},{"ruleId":"1112","severity":1,"message":"1333","line":33,"column":8,"nodeType":"1114","endLine":33,"endColumn":20,"suggestions":"1336"},{"ruleId":"1124","severity":1,"message":"1125","line":45,"column":49,"nodeType":"1126","messageId":"1127","endLine":45,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1337","line":2,"column":10,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":17},{"ruleId":"1124","severity":1,"message":"1125","line":14,"column":32,"nodeType":"1126","messageId":"1127","endLine":14,"endColumn":34},{"ruleId":"1124","severity":1,"message":"1125","line":16,"column":37,"nodeType":"1126","messageId":"1127","endLine":16,"endColumn":39},{"ruleId":"1124","severity":1,"message":"1125","line":19,"column":42,"nodeType":"1126","messageId":"1127","endLine":19,"endColumn":44},{"ruleId":"1112","severity":1,"message":"1338","line":29,"column":8,"nodeType":"1114","endLine":29,"endColumn":33,"suggestions":"1339"},{"ruleId":"1096","severity":1,"message":"1340","line":3,"column":8,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":28},{"ruleId":"1096","severity":1,"message":"1276","line":16,"column":24,"nodeType":"1098","messageId":"1099","endLine":16,"endColumn":37},{"ruleId":"1112","severity":1,"message":"1333","line":30,"column":8,"nodeType":"1114","endLine":30,"endColumn":20,"suggestions":"1341"},{"ruleId":"1096","severity":1,"message":"1100","line":3,"column":8,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1331","line":8,"column":8,"nodeType":"1098","messageId":"1099","endLine":8,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1240","line":9,"column":8,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1241","line":10,"column":8,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1266","line":11,"column":8,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1286","line":14,"column":8,"nodeType":"1098","messageId":"1099","endLine":14,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1242","line":15,"column":8,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1243","line":16,"column":8,"nodeType":"1098","messageId":"1099","endLine":16,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1244","line":17,"column":8,"nodeType":"1098","messageId":"1099","endLine":17,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1285","line":18,"column":8,"nodeType":"1098","messageId":"1099","endLine":18,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1246","line":19,"column":10,"nodeType":"1098","messageId":"1099","endLine":19,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1247","line":19,"column":16,"nodeType":"1098","messageId":"1099","endLine":19,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1248","line":51,"column":9,"nodeType":"1098","messageId":"1099","endLine":51,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1249","line":60,"column":9,"nodeType":"1098","messageId":"1099","endLine":60,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1250","line":62,"column":9,"nodeType":"1098","messageId":"1099","endLine":62,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1251","line":66,"column":9,"nodeType":"1098","messageId":"1099","endLine":66,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1252","line":70,"column":9,"nodeType":"1098","messageId":"1099","endLine":70,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1196","line":1,"column":29,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":40},{"ruleId":"1096","severity":1,"message":"1192","line":1,"column":42,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":58},{"ruleId":"1096","severity":1,"message":"1218","line":1,"column":73,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":83},{"ruleId":"1096","severity":1,"message":"1166","line":1,"column":95,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":100},{"ruleId":"1096","severity":1,"message":"1342","line":1,"column":102,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":108},{"ruleId":"1096","severity":1,"message":"1323","line":12,"column":10,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1324","line":13,"column":10,"nodeType":"1098","messageId":"1099","endLine":13,"endColumn":34},{"ruleId":"1096","severity":1,"message":"1202","line":77,"column":12,"nodeType":"1098","messageId":"1099","endLine":77,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1203","line":77,"column":24,"nodeType":"1098","messageId":"1099","endLine":77,"endColumn":37},{"ruleId":"1096","severity":1,"message":"1185","line":92,"column":11,"nodeType":"1098","messageId":"1099","endLine":92,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1194","line":93,"column":11,"nodeType":"1098","messageId":"1099","endLine":93,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1343","line":96,"column":11,"nodeType":"1098","messageId":"1099","endLine":96,"endColumn":31},{"ruleId":"1096","severity":1,"message":"1204","line":97,"column":15,"nodeType":"1098","messageId":"1099","endLine":97,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1205","line":99,"column":15,"nodeType":"1098","messageId":"1099","endLine":99,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1344","line":115,"column":11,"nodeType":"1098","messageId":"1099","endLine":115,"endColumn":39},{"ruleId":"1096","severity":1,"message":"1204","line":117,"column":15,"nodeType":"1098","messageId":"1099","endLine":117,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1206","line":190,"column":11,"nodeType":"1098","messageId":"1099","endLine":190,"endColumn":27},{"ruleId":"1096","severity":1,"message":"1345","line":25,"column":8,"nodeType":"1098","messageId":"1099","endLine":25,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1346","line":28,"column":8,"nodeType":"1098","messageId":"1099","endLine":28,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1347","line":30,"column":8,"nodeType":"1098","messageId":"1099","endLine":30,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1239","line":36,"column":10,"nodeType":"1098","messageId":"1099","endLine":36,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1207","line":298,"column":17,"nodeType":"1098","messageId":"1099","endLine":298,"endColumn":25},{"ruleId":"1096","severity":1,"message":"1204","line":304,"column":9,"nodeType":"1098","messageId":"1099","endLine":304,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1348","line":312,"column":10,"nodeType":"1098","messageId":"1099","endLine":312,"endColumn":27},{"ruleId":"1096","severity":1,"message":"1349","line":321,"column":9,"nodeType":"1098","messageId":"1099","endLine":321,"endColumn":29},{"ruleId":"1096","severity":1,"message":"1350","line":363,"column":9,"nodeType":"1098","messageId":"1099","endLine":363,"endColumn":24},{"ruleId":"1112","severity":1,"message":"1351","line":383,"column":6,"nodeType":"1114","endLine":383,"endColumn":15,"suggestions":"1352"},{"ruleId":"1096","severity":1,"message":"1353","line":436,"column":9,"nodeType":"1098","messageId":"1099","endLine":436,"endColumn":27},{"ruleId":"1124","severity":1,"message":"1125","line":447,"column":25,"nodeType":"1126","messageId":"1127","endLine":447,"endColumn":27},{"ruleId":"1124","severity":1,"message":"1125","line":449,"column":34,"nodeType":"1126","messageId":"1127","endLine":449,"endColumn":36},{"ruleId":"1096","severity":1,"message":"1354","line":3,"column":8,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1355","line":22,"column":8,"nodeType":"1098","messageId":"1099","endLine":22,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1345","line":25,"column":8,"nodeType":"1098","messageId":"1099","endLine":25,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1346","line":28,"column":8,"nodeType":"1098","messageId":"1099","endLine":28,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1347","line":30,"column":8,"nodeType":"1098","messageId":"1099","endLine":30,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1239","line":36,"column":10,"nodeType":"1098","messageId":"1099","endLine":36,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1207","line":298,"column":17,"nodeType":"1098","messageId":"1099","endLine":298,"endColumn":25},{"ruleId":"1096","severity":1,"message":"1204","line":304,"column":9,"nodeType":"1098","messageId":"1099","endLine":304,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1348","line":312,"column":10,"nodeType":"1098","messageId":"1099","endLine":312,"endColumn":27},{"ruleId":"1096","severity":1,"message":"1349","line":321,"column":9,"nodeType":"1098","messageId":"1099","endLine":321,"endColumn":29},{"ruleId":"1096","severity":1,"message":"1350","line":363,"column":9,"nodeType":"1098","messageId":"1099","endLine":363,"endColumn":24},{"ruleId":"1112","severity":1,"message":"1351","line":383,"column":6,"nodeType":"1114","endLine":383,"endColumn":15,"suggestions":"1356"},{"ruleId":"1096","severity":1,"message":"1353","line":436,"column":9,"nodeType":"1098","messageId":"1099","endLine":436,"endColumn":27},{"ruleId":"1124","severity":1,"message":"1125","line":447,"column":25,"nodeType":"1126","messageId":"1127","endLine":447,"endColumn":27},{"ruleId":"1124","severity":1,"message":"1125","line":449,"column":34,"nodeType":"1126","messageId":"1127","endLine":449,"endColumn":36},{"ruleId":"1096","severity":1,"message":"1163","line":2,"column":8,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1104","line":3,"column":8,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1357","line":5,"column":8,"nodeType":"1098","messageId":"1099","endLine":5,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1358","line":6,"column":8,"nodeType":"1098","messageId":"1099","endLine":6,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1359","line":7,"column":8,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":25},{"ruleId":"1096","severity":1,"message":"1355","line":22,"column":8,"nodeType":"1098","messageId":"1099","endLine":22,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1345","line":25,"column":8,"nodeType":"1098","messageId":"1099","endLine":25,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1346","line":28,"column":8,"nodeType":"1098","messageId":"1099","endLine":28,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1347","line":30,"column":8,"nodeType":"1098","messageId":"1099","endLine":30,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1239","line":36,"column":10,"nodeType":"1098","messageId":"1099","endLine":36,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1207","line":298,"column":17,"nodeType":"1098","messageId":"1099","endLine":298,"endColumn":25},{"ruleId":"1096","severity":1,"message":"1204","line":304,"column":9,"nodeType":"1098","messageId":"1099","endLine":304,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1348","line":312,"column":10,"nodeType":"1098","messageId":"1099","endLine":312,"endColumn":27},{"ruleId":"1096","severity":1,"message":"1349","line":321,"column":9,"nodeType":"1098","messageId":"1099","endLine":321,"endColumn":29},{"ruleId":"1096","severity":1,"message":"1350","line":363,"column":9,"nodeType":"1098","messageId":"1099","endLine":363,"endColumn":24},{"ruleId":"1112","severity":1,"message":"1351","line":383,"column":6,"nodeType":"1114","endLine":383,"endColumn":15,"suggestions":"1360"},{"ruleId":"1096","severity":1,"message":"1353","line":436,"column":9,"nodeType":"1098","messageId":"1099","endLine":436,"endColumn":27},{"ruleId":"1124","severity":1,"message":"1125","line":447,"column":25,"nodeType":"1126","messageId":"1127","endLine":447,"endColumn":27},{"ruleId":"1124","severity":1,"message":"1125","line":449,"column":34,"nodeType":"1126","messageId":"1127","endLine":449,"endColumn":36},{"ruleId":"1096","severity":1,"message":"1253","line":7,"column":8,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1241","line":8,"column":8,"nodeType":"1098","messageId":"1099","endLine":8,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1254","line":9,"column":8,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1256","line":24,"column":21,"nodeType":"1098","messageId":"1099","endLine":24,"endColumn":34},{"ruleId":"1112","severity":1,"message":"1257","line":71,"column":6,"nodeType":"1114","endLine":71,"endColumn":8,"suggestions":"1361"},"no-native-reassign",["1362"],"no-negated-in-lhs",["1363"],"no-unused-vars","'deepPurple' is defined but never used.","Identifier","unusedVar","'clsx' is defined but never used.","'BrowserRouter' is defined but never used.","'withRouter' is defined but never used.","'BrandButton' is defined but never used.","'TextField' is defined but never used.","'ProtectedRoute' is assigned a value but never used.","'compose' is defined but never used.","'Cookies' is defined but never used.","'issubmitting' is assigned a value but never used.","'csrf' is assigned a value but never used.","'setCsrf' is assigned a value but never used.","'url' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.history' and 'response.isAuthenticated'. Either include them or remove the dependency array.","ArrayExpression",["1364"],"'onUserLogin' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.",["1365"],"'LinearProgress' is defined but never used.","'fade' is defined but never used.","'signInWithGoogle' is defined but never used.","'isvalidPhone' is assigned a value but never used.","'setIsvalidPhone' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'GET_USER_PROFILE_DATA_SUCCESS' is defined but never used.","'UPDATE_PROFILE_PRIMARY_SUCCESS' is defined but never used.","'UPDATE_PROFILE_PRIMARY_FAILURE' is defined but never used.","'LOGIN_USER' is defined but never used.","'LOGIN_FACEBOOK_USER' is defined but never used.","'LOGIN_GOOGLE_USER' is defined but never used.","'LOGIN_TWITTER_USER' is defined but never used.","'LOGIN_GITHUB_USER' is defined but never used.","'SIGNUP_USER' is defined but never used.","'CREATE_TWO_STEP_TOKEN_START' is defined but never used.","'GET_USER_PROFILE_DATA' is defined but never used.","'apinstance' is defined but never used.","'getProfileData' is defined but never used.","'cancel' is assigned a value but never used.","'LOGIN_USER_SUCCESS' is defined but never used.","'LOGIN_USER_FAILURE' is defined but never used.","'UPDATE_PROFILE_PRIMARY' is defined but never used.","'UPDATE_PROFILE_SECONDARY' is defined but never used.","'PropTypes' is defined but never used.","'Grid' is defined but never used.","'Container' is defined but never used.","'ProfileUpdatePrimary' is defined but never used.","'ProfileUpdateSecondary' is defined but never used.","'authUserState' is defined but never used.","'authisAuthenticated' is defined but never used.","'InputBase' is defined but never used.","'SearchIcon' is defined but never used.","'FullscreenOutlinedIcon' is defined but never used.","'Grow' is defined but never used.","'Switch' is defined but never used.","'SwipeableDrawer' is defined but never used.","'Button' is defined but never used.","'DraftsIcon' is defined but never used.","'ListSubheader' is defined but never used.","'Paper' is defined but never used.","'FullScreen' is defined but never used.","'SimpleList' is defined but never used.","'AccountCircleIcon' is defined but never used.","'Scrollbars' is defined but never used.","'handleNotificationMenuOpen' is assigned a value but never used.","'handle' is assigned a value but never used.","'myref' is assigned a value but never used.","'AdminHeader' is defined but never used.","'Link' is defined but never used.","'Chip' is defined but never used.","'AttachMoneyOutlinedIcon' is defined but never used.","'amber' is defined but never used.","'green' is defined but never used.","'red' is defined but never used.","'pink' is defined but never used.","'Doughnut' is defined but never used.","'Bar' is defined but never used.","'data' is assigned a value but never used.","'dispatch' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'config', 'history', 'profileresponse.content', 'response.is_superuser', and 'responsedata'. Either include them or remove the dependency array. You can also do a functional update 'setResponsedata(r => ...)' if you only need 'responsedata' in the 'setResponsedata' call.",["1366"],"'ArrowRightIcon' is defined but never used.",["1362"],["1363"],"'GroupWorkOutlinedIcon' is defined but never used.","'FormControlLabel' is defined but never used.","'useCallback' is defined but never used.","'response' is assigned a value but never used.","'handleIsactivemain' is assigned a value but never used.","'FormControl' is defined but never used.","'CustomizedDate' is defined but never used.","'CustomizedInputs' is defined but never used.","'SelectFieldCustom' is defined but never used.","'FileUpload' is defined but never used.","'Fileuploadbutton' is defined but never used.","'authortype' is assigned a value but never used.","'setAuthortype' is assigned a value but never used.","'history' is assigned a value but never used.","'finvalues' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.","'setDense' is assigned a value but never used.","'ListItemText' is defined but never used.","'ListItem' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'setFields' is assigned a value but never used.",["1362"],["1363"],"'ThemeProvider' is defined but never used.","'withStyles' is defined but never used.","'createMuiTheme' is defined but never used.","'InputLabel' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Field' is defined but never used.","'FormikField' is defined but never used.","'grey' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'DatePicker' is defined but never used.","'TextareaAutosize' is defined but never used.","'TagFacesIcon' is defined but never used.","'productlistvalue' is assigned a value but never used.","'setProductlistvalue' is assigned a value but never used.","'userlist' is assigned a value but never used.","'setUserlist' is assigned a value but never used.","'userslistdata' is assigned a value but never used.","'productlistdata' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'getallgroups' and 'getalluserss'. Either include them or remove the dependency array.",["1367"],"React Hook React.useEffect has a missing dependency: 'getproductlist'. Either include it or remove the dependency array.",["1368"],"'AssignhandleGroupSubmit' is assigned a value but never used.","'createData' is defined but never used.","'Collapse' is defined but never used.","'Avatar' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'Box' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'options' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleIsactive' is assigned a value but never used.","'ListItemAvatar' is defined but never used.","'Typography' is defined but never used.","'getchatmessages' is defined but never used.","'setPagenumber' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'pagenumber'. Either include it or remove the dependency array.",["1369"],"'takeEvery' is defined but never used.","'statuscode' is assigned a value but never used.","'SAVE_PRODUCT' is defined but never used.","'UPDATE_PRODUCT' is defined but never used.","'UPDATE_PRODUCT_SUCCESS' is defined but never used.","'UPDATE_PRODUCT_FAIL' is defined but never used.","'saveProductSuccess' is defined but never used.","'IconButton' is defined but never used.","'PhotoCamera' is defined but never used.","'axios' is defined but never used.","'setLoading' is assigned a value but never used.","'setError' is assigned a value but never used.","'setHasMore' is assigned a value but never used.","React Hook React.useCallback has missing dependencies: 'dispatch' and 'response.obs'. Either include them or remove the dependency array.",["1370"],"React Hook useEffect has a missing dependency: 'dispfun'. Either include it or remove the dependency array.",["1371"],"'setPageNumber' is assigned a value but never used.","'adminProfileState' is defined but never used.",["1362"],["1363"],["1362"],["1363"],"'faker' is defined but never used.","'config' is assigned a value but never used.","'cardapi' is defined but never used.","'LocalMallIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'cancel' is defined but never used.","'takeLatest' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'checked' is assigned a value but never used.","'logo' is defined but never used.",["1362"],["1363"],"'UserProfile' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useState' is defined but never used.","'useEffect' is defined but never used.","'getchatusers' is defined but never used.","'getCookie' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'GridListTileBar' is defined but never used.","'StarBorderIcon' is defined but never used.","'AttachMoneyIcon' is defined but never used.","'tileData' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'isinterest' and 'props.match.params.id'. Either include them or remove the dependency array.",["1372"],"'Apexchartdemo' is defined but never used.","'TrafficByDevice' is defined but never used.","'profileresponse' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'config' and 'responsedata'. Either include them or remove the dependency array. You can also do a functional update 'setResponsedata(r => ...)' if you only need 'responsedata' in the 'setResponsedata' call.",["1373"],["1374"],"'Yup' is defined but never used.","'AlertTitle' is defined but never used.","'addProductwithApiRequest' is defined but never used.","'saverequestProductwithApiRequest' is defined but never used.","'setAlertseverity' is assigned a value but never used.","'setProductmessage' is assigned a value but never used.","'selectedDate' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'post' and 'props.match.params.id'. Either include them or remove the dependency array. You can also do a functional update 'setPost(p => ...)' if you only need 'post' in the 'setPost' call.",["1375"],"'CardActions' is defined but never used.","'updateSecondaryProfile' is defined but never used.","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["1376"],["1377"],["1378"],"'connect' is defined but never used.","React Hook React.useEffect has a missing dependency: 'profiler.content'. Either include it or remove the dependency array.",["1379"],"'RecommendExplorecard' is defined but never used.",["1380"],"'Select' is defined but never used.","'onCreatorrequestSave' is assigned a value but never used.","'onCreatorrequestProducerSave' is assigned a value but never used.","'ConfirmModel' is defined but never used.","'UserEditModel' is defined but never used.","'MailIcon' is defined but never used.","'usereditmodelopen' is assigned a value but never used.","'handleChangeeditForm' is assigned a value but never used.","'handleuserClose' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getallusers'. Either include it or remove the dependency array.",["1381"],"'handleUpdateSubmit' is assigned a value but never used.","'DialogTitle' is defined but never used.","'ReplyIcon' is defined but never used.",["1382"],"'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.",["1383"],["1384"],"no-global-assign","no-unsafe-negation",{"desc":"1385","fix":"1386"},{"desc":"1387","fix":"1388"},{"desc":"1389","fix":"1390"},{"desc":"1391","fix":"1392"},{"desc":"1393","fix":"1394"},{"desc":"1395","fix":"1396"},{"desc":"1397","fix":"1398"},{"desc":"1399","fix":"1400"},{"desc":"1401","fix":"1402"},{"desc":"1403","fix":"1404"},{"desc":"1403","fix":"1405"},{"desc":"1406","fix":"1407"},{"desc":"1408","fix":"1409"},{"desc":"1408","fix":"1410"},{"desc":"1408","fix":"1411"},{"desc":"1412","fix":"1413"},{"desc":"1408","fix":"1414"},{"desc":"1415","fix":"1416"},{"desc":"1415","fix":"1417"},{"desc":"1415","fix":"1418"},{"desc":"1395","fix":"1419"},"Update the dependencies array to be: [props.history, response.isAuthenticated]",{"range":"1420","text":"1421"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"1422","text":"1423"},"Update the dependencies array to be: [config, history, profileresponse.content, response.is_superuser, responsedata]",{"range":"1424","text":"1425"},"Update the dependencies array to be: [getallgroups, getalluserss]",{"range":"1426","text":"1427"},"Update the dependencies array to be: [getproductlist]",{"range":"1428","text":"1429"},"Update the dependencies array to be: [pagenumber]",{"range":"1430","text":"1431"},"Update the dependencies array to be: [dispatch, pageNumber, response.obs]",{"range":"1432","text":"1433"},"Update the dependencies array to be: [pageNumber, dispatch, dispfun]",{"range":"1434","text":"1435"},"Update the dependencies array to be: [isinterest, props.match.params.id]",{"range":"1436","text":"1437"},"Update the dependencies array to be: [config, responsedata]",{"range":"1438","text":"1439"},{"range":"1440","text":"1439"},"Update the dependencies array to be: [post, props.match.params.id]",{"range":"1441","text":"1442"},"Update the dependencies array to be: [pageNumber, props.match.params.id]",{"range":"1443","text":"1444"},{"range":"1445","text":"1444"},{"range":"1446","text":"1444"},"Update the dependencies array to be: [history, profiler.content, profileresponse]",{"range":"1447","text":"1448"},{"range":"1449","text":"1444"},"Update the dependencies array to be: [getallusers, togroup]",{"range":"1450","text":"1451"},{"range":"1452","text":"1451"},{"range":"1453","text":"1451"},{"range":"1454","text":"1431"},[3441,3443],"[props.history, response.isAuthenticated]",[4085,4087],"[dispatch, props.history]",[4043,4045],"[config, history, profileresponse.content, response.is_superuser, responsedata]",[5430,5432],"[getallgroups, getalluserss]",[5536,5538],"[getproductlist]",[1428,1430],"[pagenumber]",[731,743],"[dispatch, pageNumber, response.obs]",[988,1009],"[pageNumber, dispatch, dispfun]",[2470,2472],"[isinterest, props.match.params.id]",[3852,3854],"[config, responsedata]",[3802,3804],[4155,4157],"[post, props.match.params.id]",[852,864],"[pageNumber, props.match.params.id]",[873,885],[1119,1131],[925,950],"[history, profiler.content, profileresponse]",[947,959],[11133,11142],"[getallusers, togroup]",[11156,11165],[11161,11170],[1802,1804]]