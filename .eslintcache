[{"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\index.js":"1","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\App.js":"2","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\reportWebVitals.js":"3","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\theme.js":"4","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\BrandButton.js":"5","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\App.js":"6","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\store\\index.js":"7","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\SigninFirebase.js":"8","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\SignupFirebase.js":"9","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\reducers\\index.js":"10","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\sagas\\index.js":"11","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\reducers\\AuthUserReducer.js":"12","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\actions\\types.js":"13","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\sagas\\Auth.js":"14","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\actions\\index.js":"15","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\actions\\AuthActions.js":"16","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\AdminLayout.js":"17","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\AdminHeader\\AdminHeader.js":"18","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\lib\\reactifyCss.js":"19","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\services\\routerService.js":"20","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\AuthLayout.js":"21","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\Dashboardadmin.js":"22","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\Apexchartdemo.js":"23","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\constants\\chart-config.js":"24","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\constants\\AppConfig.js":"25","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\LatestProducts.js":"26","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\TrafficByDevice.js":"27","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\button\\Custombutton.js":"28","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ForgotPassword.js":"29","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\formikcontrol\\FormikField.js":"30","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentExplore.js":"31","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentRequest.js":"32","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\TableMaterial\\TableMaterial.js":"33","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\ModelDialogue.js":"34","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\CustomizedInputs.js":"35","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\CustomizedSelect.js":"36","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\CustomizedDate.js":"37","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\firebase.utils.js":"38","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\UsersList.js":"39","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\SelectFieldCustom\\SelectFieldCustom.js":"40","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\TableMaterial\\TableMaterialuser.js":"41","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\explorecard\\ContentExplorecard.js":"42","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ListSimple\\SimpleList.js":"43","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\button\\FileUpload.js":"44","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\actions\\ProductActions.js":"45","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\sagas\\Product.js":"46","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\reducers\\ProductReducer.js":"47","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\button\\Fileuploadbutton.js":"48","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\useContentExplore.js":"49","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentExploreAdmin.js":"50","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\ConfirmModel.js":"51","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\Profile.js":"52","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\assets\\theme\\box-shadow.js":"53","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\assets\\theme\\views\\admin\\profile.js":"54","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\assets\\theme\\colors.js":"55","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\assets\\theme\\hex-to-rgb.js":"56","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\assets\\theme\\theme.js":"57","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\UserGroups.js":"58","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\TableMaterial\\TableMaterialgroup.js":"59","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\axiosinstance.js":"60","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\alertcustom\\alertcustom.js":"61","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\api\\api.js":"62","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentExploreAdminBagged.js":"63","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentExploreFavorite.js":"64","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\api\\cardactionsapi.js":"65","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\explorecard\\ContentExplorecardAdmin.js":"66","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\explorecard\\ContentExplorecardFavorite.js":"67","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\explorecard\\ContentExplorecardBagged.js":"68","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\UserEditModel.js":"69","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\api\\userapi.js":"70","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\api\\authapi.js":"71"},{"size":871,"mtime":1612961251810,"results":"72","hashOfConfig":"73"},{"size":826,"mtime":1614939215955,"results":"74","hashOfConfig":"73"},{"size":362,"mtime":1606918416887,"results":"75","hashOfConfig":"73"},{"size":3529,"mtime":1614784392434,"results":"76","hashOfConfig":"73"},{"size":980,"mtime":1611979352852,"results":"77","hashOfConfig":"73"},{"size":818,"mtime":1614243439677,"results":"78","hashOfConfig":"73"},{"size":986,"mtime":1614080841044,"results":"79","hashOfConfig":"73"},{"size":8095,"mtime":1615548865161,"results":"80","hashOfConfig":"73"},{"size":11092,"mtime":1616014404552,"results":"81","hashOfConfig":"73"},{"size":318,"mtime":1614512959304,"results":"82","hashOfConfig":"73"},{"size":286,"mtime":1614511778440,"results":"83","hashOfConfig":"73"},{"size":2209,"mtime":1615405491057,"results":"84","hashOfConfig":"73"},{"size":21200,"mtime":1615402102371,"results":"85","hashOfConfig":"73"},{"size":1788,"mtime":1615403996693,"results":"86","hashOfConfig":"73"},{"size":65,"mtime":1614451579018,"results":"87","hashOfConfig":"73"},{"size":847,"mtime":1615546807235,"results":"88","hashOfConfig":"73"},{"size":3585,"mtime":1615460218957,"results":"89","hashOfConfig":"73"},{"size":20077,"mtime":1615461548028,"results":"90","hashOfConfig":"73"},{"size":1172,"mtime":1613073685965,"results":"91","hashOfConfig":"73"},{"size":2066,"mtime":1615318719763,"results":"92","hashOfConfig":"73"},{"size":1096,"mtime":1614092422100,"results":"93","hashOfConfig":"73"},{"size":7157,"mtime":1613214727876,"results":"94","hashOfConfig":"73"},{"size":3438,"mtime":1613155610877,"results":"95","hashOfConfig":"73"},{"size":1008,"mtime":1552046922000,"results":"96","hashOfConfig":"73"},{"size":2122,"mtime":1613148485463,"results":"97","hashOfConfig":"73"},{"size":2906,"mtime":1613156400573,"results":"98","hashOfConfig":"73"},{"size":3304,"mtime":1613156805519,"results":"99","hashOfConfig":"73"},{"size":1186,"mtime":1613225883307,"results":"100","hashOfConfig":"73"},{"size":3690,"mtime":1614076182416,"results":"101","hashOfConfig":"73"},{"size":969,"mtime":1614108959761,"results":"102","hashOfConfig":"73"},{"size":4955,"mtime":1615391538257,"results":"103","hashOfConfig":"73"},{"size":23492,"mtime":1615864994273,"results":"104","hashOfConfig":"73"},{"size":13386,"mtime":1614189028337,"results":"105","hashOfConfig":"73"},{"size":2190,"mtime":1613375063549,"results":"106","hashOfConfig":"73"},{"size":4371,"mtime":1614518328316,"results":"107","hashOfConfig":"73"},{"size":1911,"mtime":1615462257802,"results":"108","hashOfConfig":"73"},{"size":1402,"mtime":1614523072278,"results":"109","hashOfConfig":"73"},{"size":809,"mtime":1613412957799,"results":"110","hashOfConfig":"73"},{"size":15876,"mtime":1615490034690,"results":"111","hashOfConfig":"73"},{"size":1416,"mtime":1614180131964,"results":"112","hashOfConfig":"73"},{"size":18652,"mtime":1615490633523,"results":"113","hashOfConfig":"73"},{"size":4702,"mtime":1615390918056,"results":"114","hashOfConfig":"73"},{"size":2760,"mtime":1615032534765,"results":"115","hashOfConfig":"73"},{"size":1865,"mtime":1614525902087,"results":"116","hashOfConfig":"73"},{"size":1210,"mtime":1615462696136,"results":"117","hashOfConfig":"73"},{"size":5328,"mtime":1615547086229,"results":"118","hashOfConfig":"73"},{"size":1011,"mtime":1614622700780,"results":"119","hashOfConfig":"73"},{"size":902,"mtime":1614528801887,"results":"120","hashOfConfig":"73"},{"size":1054,"mtime":1614627911121,"results":"121","hashOfConfig":"73"},{"size":4972,"mtime":1615536637106,"results":"122","hashOfConfig":"73"},{"size":1569,"mtime":1614711726496,"results":"123","hashOfConfig":"73"},{"size":5008,"mtime":1614939138628,"results":"124","hashOfConfig":"73"},{"size":1345,"mtime":1614783739392,"results":"125","hashOfConfig":"73"},{"size":2126,"mtime":1614784184470,"results":"126","hashOfConfig":"73"},{"size":1641,"mtime":1614783331521,"results":"127","hashOfConfig":"73"},{"size":1061,"mtime":1614783331586,"results":"128","hashOfConfig":"73"},{"size":21190,"mtime":1614938832987,"results":"129","hashOfConfig":"73"},{"size":4618,"mtime":1615018643258,"results":"130","hashOfConfig":"73"},{"size":14908,"mtime":1615027462391,"results":"131","hashOfConfig":"73"},{"size":1182,"mtime":1614972115776,"results":"132","hashOfConfig":"73"},{"size":163,"mtime":1614974380021,"results":"133","hashOfConfig":"73"},{"size":3346,"mtime":1615321624502,"results":"134","hashOfConfig":"73"},{"size":1485,"mtime":1615464796519,"results":"135","hashOfConfig":"73"},{"size":1480,"mtime":1615464786618,"results":"136","hashOfConfig":"73"},{"size":1846,"mtime":1615386607790,"results":"137","hashOfConfig":"73"},{"size":4611,"mtime":1615389780991,"results":"138","hashOfConfig":"73"},{"size":4710,"mtime":1615464699089,"results":"139","hashOfConfig":"73"},{"size":4726,"mtime":1615464537026,"results":"140","hashOfConfig":"73"},{"size":3496,"mtime":1615484910065,"results":"141","hashOfConfig":"73"},{"size":1901,"mtime":1616003123359,"results":"142","hashOfConfig":"73"},{"size":2021,"mtime":1616008029292,"results":"143","hashOfConfig":"73"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},"wimjf",{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"146"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"146"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"146"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"146"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"146"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"146"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"146"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"146"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"146"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"146"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"146"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"146"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"146"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"146"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"229"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"146"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"146"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"146"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"146"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"146"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"146"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"146"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"146"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"146"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"146"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"146"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"146"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"146"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"146"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"146"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"146"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"146"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"146"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"146"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"146"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"146"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\index.js",[],["327","328"],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\App.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\reportWebVitals.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\theme.js",["329"],"import { createMuiTheme, fade} from '@material-ui/core'\r\nimport {deepPurple, amber} from '@material-ui/core/colors'\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        type:'light',\r\n        white: {\r\n            main: \"#FFFFFF\",\r\n          },\r\n          black: {\r\n            light: \"#12263F\",\r\n            main: \"#000000\",\r\n          },\r\n          transparent: {\r\n            main: \"transparent\",\r\n          },\r\n          gray: {\r\n            100: \"#f6f9fc\",\r\n            200: \"#e9ecef\",\r\n            300: \"#dee2e6\",\r\n            400: \"#ced4da\",\r\n            500: \"#adb5bd\",\r\n            600: \"#8898aa\",\r\n            700: \"#525f7f\",\r\n            800: \"#32325d\",\r\n            900: \"#212529\",\r\n          },\r\n        primary: {\r\n            light: '#1282a2',\r\n            main: '#034078',\r\n            dark: '#0a1128',\r\n            contrastText: '#fff',\r\n          },\r\n          secondary: {\r\n            light: '#598392',\r\n            main: amber[500],\r\n            dark: amber[800],\r\n            contrastText: '#000',\r\n          },\r\n          warning: {\r\n            light: \"#ffd600\",\r\n            main: \"#fb6340\",\r\n            snackbar: \"#fc7c5f\",\r\n            badgeBg: \"#fee6e0\",\r\n            badgeBgHover: \"#f93305\",\r\n            badge: \"#ff3709\",\r\n          },\r\n          error: {\r\n            light: \"#f3a4b5\",\r\n            main: \"#f5365c\",\r\n            snackbar: \"#f75676\",\r\n            badgeBg: \"#fdd1da\",\r\n            badgeBgHover: \"#e30b36\",\r\n            badge: \"#f80031\",\r\n            dialogNotification: \"#f56036\",\r\n          },\r\n          info: {\r\n            main: \"#11cdef\",\r\n            snackbar: \"#37d5f2\",\r\n            badgeBg: \"#aaedf9\",\r\n            badgeBgHover: \"#0c9cb7\",\r\n            badge: \"#03acca\",\r\n          },\r\n          background: {\r\n            default: \"#f8f9fe\",\r\n          },\r\n          text: {\r\n            primary: \"#525f7f\",\r\n          },\r\n          dark: {\r\n            tableBorder: \"#1f3a68\",\r\n            tableHeadColor: \"#4d7bca\",\r\n            tableHeadBgColor: \"#1c345d\",\r\n            main: \"#172b4d\",\r\n            dark: \"#0b1526\",\r\n            snackbar: \"#3c4d69\",\r\n            badgeBg: \"#4172c6\",\r\n            badgeBgHover: \"#09111e\",\r\n          },\r\n          success: {\r\n            main: \"#2dce89\",\r\n            snackbar: \"#4fd69c\",\r\n            badgeBg: \"#b0eed3\",\r\n            badgeBgHover: \"#229c68\",\r\n            badge: \"#1aae6f\",\r\n          },\r\n    },\r\n    typography:{\r\n        fontFamily: \"Lato, sans-serif\"\r\n    }\r\n});\r\n// Global props styles\r\ntheme.props = {\r\n    MuiButton:{\r\n        disableElevation:true\r\n    },\r\n    MuiInputLabel: {\r\n        shrink: true\r\n    },\r\n    MuiInput:{\r\n        disableUnderline:true\r\n    },\r\n    \r\n}\r\n\r\ntheme.overrides = {\r\n    // MuiButton:{\r\n    //     default: {\r\n    //         borderRadius: 0,\r\n    //         textTransform:'none'\r\n    //     },\r\n    //     containedPrimary:{\r\n    //         \"&:hover\":{\r\n    //             backgroundColor: amber[500],\r\n    //             color: 'red'\r\n    //         }\r\n    //     }\r\n    // },\r\n    \r\n    MuiInput:{\r\n        root:{\r\n            // border:'1px solid gray',\r\n            top:5,\r\n            \r\n            '&$focused':{\r\n                borderRadius:5,\r\n                boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.1rem`,\r\n                borderColor: theme.palette.primary.main\r\n            }\r\n            \r\n        },\r\n        \r\n    },\r\n    MuiInputLabel:{\r\n        root:{\r\n            // textTransform:'uppercase'\r\n        }\r\n    }\r\n}\r\n\r\nexport default theme;","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\BrandButton.js",["330"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, withStyles } from '@material-ui/core'\r\nimport { amber, deepPurple } from '@material-ui/core/colors'\r\nimport clsx from 'clsx'\r\n\r\nconst styles = () => ({\r\n    default: {\r\n        borderRadius: 0,\r\n        textTransform:'none'\r\n    },\r\n    primary:{\r\n        \"&:hover\":{\r\n            backgroundColor: amber[500],\r\n            color: deepPurple[900]\r\n        }\r\n    }\r\n});\r\n\r\nconst BrandButton = ({color,children,classes}) => {\r\n    return (\r\n        <Button\r\n        variant=\"contained\"\r\n        color={color}\r\n        // className={classes.default}\r\n        // className={clsx(classes.default,classes.primary)}\r\n        classes = {{root:classes.default,containedPrimary:classes.primary}}\r\n        \r\n        // disableElevation\r\n        >\r\n            {children}\r\n        </Button>\r\n    )\r\n}\r\n\r\n\r\nBrandButton.propTypes = {\r\n    color:PropTypes.string\r\n}\r\nexport default withStyles(styles)(BrandButton)\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\App.js",["331","332","333","334","335"],"/**\r\n * App.js Layout Start Here\r\n */\r\nimport React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {BrowserRouter, Switch ,Redirect, Route} from 'react-router-dom';\r\n\r\n\r\nimport BrandButton from '../BrandButton'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AdminLayout from './AdminLayout'\r\nimport AuthLayout from './AuthLayout';\r\n\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\nrender(){\r\n    return(\r\n\r\n        \r\n          \r\n          \r\n          <Switch>\r\n            <Route exact path=\"/\" render={props => \"welcome\"} />\r\n            <Route path=\"/auth\" render={props => <AuthLayout {...props} />} />\r\n            <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\r\n            \r\n    </Switch>\r\n    \r\n    \r\n    \r\n    \r\n\r\n    )\r\n}\r\n\r\n}\r\n\r\n\r\nexport default App\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\store\\index.js",["336"],"/**\r\n * Redux Store\r\n */\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducers from '../reducers';\r\nimport RootSaga from \"../sagas\";\r\n\r\n// Create the saga middleware\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport function configureStore(initialState){\r\n    const store = createStore(\r\n        reducers,\r\n        initialState,\r\n        // compose(applyMiddleware(...middlewares))\r\n        composeWithDevTools(applyMiddleware(...middlewares))\r\n    );\r\n\r\n    sagaMiddleware.run(RootSaga);\r\n\r\n    if(module.hot){\r\n        // Enable Webpack hot module replacement for reducers\r\n\r\n        module.hot.accept('../reducers/index',()=> {\r\n            const nextRootReducer = require('../reducers/index');\r\n            store.replaceReducer(nextRootReducer);\r\n        });\r\n    }\r\n    return store;\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\SigninFirebase.js",["337","338","339","340"],"import React, { useCallback, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Paper,\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\n\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport HttpsOutlinedIcon from \"@material-ui/icons/HttpsOutlined\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport FormikField from \"../components/formikcontrol/FormikField\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { signinUser } from \"../actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root:{\r\n    position:'relative'\r\n  },\r\n  root2: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    height: \"100vh\",\r\n    padding: 10,\r\n    backgroundColor: \"#fff\",\r\n    label: {\r\n      textTransform: \"capitalize\",\r\n    },\r\n    signinform: {},\r\n    \"& .FormikField\": {\r\n      marginTop: \"5%\",\r\n    },\r\n    \"& .MuiInputBase-input\": {\r\n      backgroundColor: grey[100],\r\n      outline: \"none\",\r\n      borderRadius: 5,\r\n    },\r\n    \"& .MuiInputLabel-formControl\": {\r\n      color: grey[800],\r\n    },\r\n    \"& .Mui-disabled\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: \"#fff\",\r\n      cursor: \"no-drop\",\r\n    },\r\n  },\r\n  bordertopcolor: {\r\n    borderTop: `8px solid ${theme.palette.primary.main}`,\r\n    borderRadius: 10,\r\n    marginTop: \"-10%\",\r\n  },\r\n  pageTitle: {\r\n    position: \"relative\",\r\n    backgroundColor: \"#fff\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    placeContent: \"center\",\r\n    paddingTop: \"5%\",\r\n\r\n    // alignItems:'center',\r\n    // left:'44vw',\r\n    // top:\"26%\",\r\n    // height: \"1vh\",\r\n    // padding:10\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      position: \"static\",\r\n     \r\n      // left:\"30%\",\r\n      left: 0,\r\n      right: 0,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n}));\r\nconst loginschema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .required(\"Username or Email is should not be empty\"),\r\n  password: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .required(\"Password is should not be empty\"),\r\n  // .matches(\r\n  //     /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n  //     \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\r\n  //   )\r\n});\r\nconst initialValues = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\nconst SigninFirebase = (props) => {\r\n  const [iserror, setIserror] = React.useState(true);\r\n  const [issubmitting, setIssubmitting] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  const response = useSelector((state) => state.authUser);\r\n\r\n  useEffect(() => {\r\n      if (response.user) props.history.push('/auth/signup')\r\n      return () => {\r\n          \r\n      }\r\n  }, [response,props.history])\r\n\r\n  const handleSubmit = async (values) => {\r\n    console.log(values);\r\n    setIssubmitting(true);\r\n    setIserror(false)\r\n    await setTimeout(() => {\r\n      setIssubmitting(false);\r\n      setIserror(true)\r\n    }, 2000);\r\n  };\r\n  const onUserLogin = useCallback(() => {\r\n      const data = {\r\n        email: \"nagendrakumar422@gmail.com\",\r\n        password: \"12345\",\r\n      }\r\n      const history = props.history\r\n      \r\n    dispatch(\r\n      signinUser(\r\n          data,\r\n        history\r\n      )\r\n    );\r\n    \r\n   \r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {iserror && (\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setIserror(false);\r\n          }}\r\n        >\r\n          Login attempt is failed. check credentials !\r\n        </Alert>\r\n      )}\r\n\r\n      {response ? response.email : \"no waste\"}\r\n\r\n      \r\n      <Box component=\"section\" className={classes.root}>\r\n         {/* <Box className={classes.pageTitle}>\r\n         \r\n          <Typography component=\"h4\" variant=\"h4\">\r\n            MoviePlex\r\n          </Typography>\r\n      </Box> */}\r\n      <Box className={classes.root2}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={8}\r\n          md={4}\r\n          component={Paper}\r\n          elevation={6}\r\n          square\r\n          className={classes.bordertopcolor}\r\n        >\r\n          {/* <LinearProgress value={40} /> */}\r\n          <Box display=\"flex\" flexDirection=\"column\" p={3}>\r\n            <Box\r\n              display=\"flex\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Typography\r\n                component=\"h5\"\r\n                variant=\"h5\"\r\n                style={{ marginBottom: \"5%\" }}\r\n              >\r\n                Sign in\r\n              </Typography>\r\n              <HttpsOutlinedIcon style={{ marginBottom: \"5%\" }} />\r\n            </Box>\r\n\r\n            <Formik\r\n              initialValues={initialValues}\r\n              onSubmit={handleSubmit}\r\n              validationSchema={loginschema}\r\n            >\r\n              {({ dirty, isValid }) => {\r\n                return (\r\n                  <Form>\r\n                    <FormikField\r\n                      name=\"email\"\r\n                      label=\"Username\"\r\n                      type=\"text\"\r\n                      required\r\n                      textvariant=\"standard\"\r\n                    />\r\n\r\n                    <FormikField\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      required\r\n                      textvariant=\"standard\"\r\n                    />\r\n                    {/* <TextField id=\"standard-basic\" label=\"Username\" style={{marginBottom:\"5%\"}} required />\r\n          <TextField id=\"standard-adornment-password\" label=\"Password\" style={{marginBottom:\"5%\"}} required /> */}\r\n\r\n                    <Button\r\n                      type=\"submit\"\r\n                      disabled={!dirty || !isValid}\r\n                      fullWidth\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      classes={{\r\n                        label: classes.root.label,\r\n                        disabled: classes.disabledButton,\r\n                      }}\r\n                      style={{ marginTop: \"5%\" }}\r\n                    >\r\n                      {issubmitting && (\r\n                        <CircularProgress\r\n                          color=\"secondary\"\r\n                          size={20}\r\n                          thickness={4.8}\r\n                        />\r\n                      )}{\" \"}\r\n                      Sign In\r\n                    </Button>\r\n                  </Form>\r\n                );\r\n              }}\r\n            </Formik>\r\n\r\n            <Box\r\n              display=\"flex\"\r\n              alignContent=\"center\"\r\n              justifyContent=\"space-between\"\r\n              mt={3}\r\n            >\r\n              <Typography component=\"h5\" variant=\"body2\">\r\n                Don't have an account ?{\" \"}\r\n                <Link\r\n                  to=\"/auth/signup\"\r\n                  style={{ textDecorationColor: \"none\", color: \"inherit\" }}\r\n                >\r\n                  Sign up\r\n                </Link>\r\n              </Typography>\r\n              <Typography component=\"h5\" variant=\"body2\">\r\n                <Link\r\n                  to=\"/auth/reset\"\r\n                  style={{ textDecorationColor: \"none\", color: \"inherit\" }}\r\n                >\r\n                  Forgot Password ?\r\n                </Link>\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Box display=\"flex\" justifyContent=\"center\" mb={2}>\r\n            <Button color=\"primary\" variant=\"contained\" onClick={onUserLogin}>\r\n              google login\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n      </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SigninFirebase;\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\SignupFirebase.js",["341","342","343","344","345","346","347","348","349","350","351","352","353"],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\reducers\\index.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\sagas\\index.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\reducers\\AuthUserReducer.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\actions\\types.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\sagas\\Auth.js",["354","355","356","357","358","359","360","361","362","363","364","365","366","367","368"],"/**\r\n * Auth Sagas\r\n */\r\nimport { all, call, fork, put, takeEvery,takeLatest } from \"redux-saga/effects\";\r\n\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_FACEBOOK_USER,\r\n    LOGIN_GOOGLE_USER,\r\n    LOGIN_TWITTER_USER,\r\n    LOGIN_GITHUB_USER,\r\n    LOGOUT_USER,\r\n    SIGNUP_USER,\r\n    SIGNIN_USER,\r\n    CREATE_TWO_STEP_TOKEN_START,\r\n    THEME_MODE_TOGGLE,\r\n    THEME_MODE_TOGGLE_SUCCESS\r\n    \r\n} from \"../actions/types\";\r\n\r\nimport {\r\n    signinUserSuccess,\r\n    signinUserFailure,\r\n    signUpUserInFirebaseSuccess,\r\n    signUpUserInFirebaseFailure,\r\n    logoutUserFromFirebaseSuccess,\r\n    logoutUserFromFirebaseFailure,\r\n    createTwoStepTokenFinish,\r\n\r\n} from \"../actions\";\r\n\r\n// const signInUserwithApiRequest = async (email, password) =>{\r\n    \r\n//     return {status:200}\r\n// }\r\n\r\nfunction* signInUserwithApi({ payload }) {\r\n    let userData = payload.user;    \r\n    console.log(\"consoling here: \", payload);\r\n    console.log(\"consoling here: \", payload.history);\r\n    // const signInResponse = yield call(\r\n    //     signInUserwithApiRequest,\r\n    //     userData.email,\r\n    //     userData.password\r\n    //   );\r\n      yield put(signinUserSuccess(userData));\r\n}\r\n\r\n/**\r\n * Create User\r\n*/\r\n\r\nexport function* signInUser() {\r\n    console.log(\"sign in saga called..\");\r\n    yield takeEvery(SIGNIN_USER, signInUserwithApi);\r\n}\r\n\r\n// Theme props \r\n\r\nfunction* themetogglehelper(){\r\n    \r\n    yield put({type:THEME_MODE_TOGGLE_SUCCESS});\r\n\r\n}\r\nexport function* themetoggle() {\r\n    \r\n    yield takeLatest(THEME_MODE_TOGGLE,themetogglehelper);\r\n}\r\n\r\n///-------------------------------------------------------------\r\n\r\n/**\r\n * Auth Root Saga\r\n */\r\nexport default function* rootSaga() {\r\n    console.log(\"ooo\");\r\n    yield all([\r\n\r\n        fork(signInUser),\r\n        fork(themetoggle),\r\n    ]);\r\n}","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\actions\\index.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\actions\\AuthActions.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\AdminLayout.js",["369","370","371","372"],"/**\r\n * AdminLayout.js Layout Start Here\r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport { Route, withRouter, Redirect, Switch } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport routerService from '../services/routerService'\r\n\r\nimport AdminHeader from '../components/AdminHeader/AdminHeader'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport { Grid, Box, Container, Typography } from '@material-ui/core';\r\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport { amber } from '@material-ui/core/colors';\r\n\r\n\r\n\r\n\r\n\r\nconst styles = {\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent:'space-between',\r\n      marginBottom:10\r\n\r\n    },\r\n    color:{\r\n        color:'gray'\r\n    }\r\n  };\r\n\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n        type:'light',\r\n        primary: {\r\n            light: '#1282a2',\r\n            main: '#034078',\r\n            dark: '#0a1128',\r\n            contrastText: '#fff',\r\n          },\r\n          secondary: {\r\n            light: '#598392',\r\n            main: amber[500],\r\n            dark: amber[800],\r\n            contrastText: '#000',\r\n          },\r\n      \r\n    },\r\n    typography:{\r\n        fontFamily: \"Lato, sans-serif\"\r\n    }\r\n  });\r\n\r\n\r\n  const darktheme = createMuiTheme({\r\n    palette: {\r\n        type:'dark',\r\n        primary: {\r\n            light: '#1282a2',\r\n            main: '#303030;',\r\n            dark: '#0a1128',\r\n            contrastText: '#fff',\r\n          },\r\n          secondary: {\r\n            light: '#598392',\r\n            main: amber[500],\r\n            dark: amber[800],\r\n            contrastText: '#000',\r\n          },\r\n      \r\n    },\r\n    typography:{\r\n        fontFamily: \"Lato, sans-serif\"\r\n    }\r\n  });\r\n\r\nclass AdminLayout extends Component {\r\n    static propTypes = {\r\n\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            issidebar:false\r\n        }\r\n    \r\n\r\n    }\r\n    \r\n\r\n\r\n    \r\n   \r\n\r\n    \r\n    \r\n    sidebardrawer =()=>{\r\n        this.setState({issidebar: !this.state.issidebar});\r\n    }\r\n    \r\n    render() {\r\n        const {match, location} = this.props;\r\n       \r\n        \r\n        const width = this.state.issidebar?`calc(100% - 80%)`:`calc(100% - 93%)`;\r\n        const { classes } = this.props;\r\n    \r\n        \r\n        return (\r\n            <>\r\n            <ThemeProvider theme={this.props.data?theme:darktheme}>\r\n            <CssBaseline />\r\n            <AdminHeader sidebardrawer={this.sidebardrawer} />\r\n            <Box style={{marginLeft:width,marginRight:15,overflow:'hidden',marginTop:100,flexGrow:1}}>\r\n                <Box className={classes.root}>\r\n                <Typography className={classes.color}>\r\n                    \r\n                    {(location.pathname.split('/'))[2].slice(0).charAt(0).toUpperCase() +(location.pathname.split('/'))[2].slice(1)}\r\n                </Typography>\r\n                </Box>\r\n            <Switch>\r\n            {routerService && routerService.map((route,key)=>\r\n\t\t\t\t\t<Route key={key} path={`/admin/${route.path}`} component={route.component} />\r\n\t\t\t\t)}\r\n                \r\n                \r\n                <Redirect from=\"*\" to=\"/admin/signin\" />\r\n                \r\n                </Switch>\r\n\r\n                </Box>\r\n                </ThemeProvider>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    data: state.authUser.thememode\r\n});\r\nexport default connect(mapStateToProps)(withRouter((withStyles(styles)(AdminLayout))));\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\AdminHeader\\AdminHeader.js",["373","374","375","376","377","378","379","380","381"],"import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport FullscreenOutlinedIcon from '@material-ui/icons/FullscreenOutlined';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Switch from '@material-ui/core/Switch';\r\n// Side Drawer\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport clsx from 'clsx';\r\nimport { Box, Collapse, ListSubheader, Paper } from '@material-ui/core';\r\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\r\nimport { Link } from 'react-router-dom';\r\nimport SimpleList from '../ListSimple/SimpleList'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\r\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\nimport { useDispatch } from 'react-redux';\r\nimport {themodechanger} from '../../actions/AuthActions'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n// Side Drawer\r\n\r\nconst drawerWidth = 250;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root:{},\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    // display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n      wrap:'noWrap'\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    }\r\n    \r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width,padding'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n    '&:focus':{\r\n      \r\n      paddingRight: theme.spacing(10),\r\n    }\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n//   Drawer styles\r\nlist: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  drawerPaper: {\r\n    // backgroundImage: 'url(https://reactify.theironnetwork.org/static/media/sidebar-4.34aa4bc1.jpg)',\r\n    backgroundColor:theme.palette.primary.contrastText\r\n    \r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n    overflow:'hidden',\r\n  },\r\n  drawerOpen: {\r\n    width: 'auto',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: 0,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: 0,\r\n    }\r\n  },\r\n  logo:{\r\n    \r\n    padding: theme.spacing(2,0),\r\n    backgroundColor: theme.palette.primary.main,\r\n    color:theme.palette.primary.contrastText,\r\n    \r\n    [theme.breakpoints.down('md')]: {\r\n     \r\n      padding: theme.spacing(1.6,0),\r\n    },\r\n  },\r\n  logod:{\r\n    position:'fixed',\r\n    width:'20%',\r\n    padding: theme.spacing(2,0),\r\n    backgroundColor: theme.palette.primary.main,\r\n    color:theme.palette.primary.contrastText,\r\n    \r\n    [theme.breakpoints.down('md')]: {\r\n      position:'relative',\r\n      width:'100%',\r\n      padding: theme.spacing(1.6,0),\r\n    },\r\n  },\r\n\r\n// End Drawer styles\r\nnested: {\r\n  paddingLeft: theme.spacing(4),\r\n},\r\nlistItemText:{\r\n  fontSize:'1em',//Insert your required size\r\n},\r\nmodechanger:{\r\n  position:'absolute',\r\n  bottom:0,\r\n  alignItems:'center'\r\n}\r\n\r\n\r\n}));\r\n\r\nconst AdminHeader = (props)=> {\r\n  const dispatch = useDispatch()\r\n  const {anchor,sidebardrawer} = props;\r\n  const classes = useStyles();\r\n  const [isdrawer,setIsdrawer] = React.useState(false)\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n  const [switchstate, setSwitchstate] = React.useState(true);\r\n  \r\n  const switchhandleChange = (event) => {\r\n    setSwitchstate(!switchstate);\r\n    dispatch(themodechanger())\r\n  };\r\n  const [collapseopen,setCollapseopen] = React.useState(false)\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [notifyanchorEl, setNotifyanchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const isNotificationOpen = Boolean(notifyanchorEl);\r\n  \r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleNotificationMenuOpen = (event) => {\r\n    setNotifyanchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleNotifyClose = () => {\r\n    setNotifyanchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handle = useFullScreenHandle();\r\n  \r\n  const myref = React.useRef()\r\n//   Side Drawer\r\n\r\nconst toggleDrawer = (anchor, open) => (event) => {\r\n    setIsdrawer(!isdrawer)\r\n    sidebardrawer()\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n// End Side Drawer\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      style={{top:40}}\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n      elevation={1}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>Logout</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const renderMenuSimplelist = (\r\n    <>\r\n    <Menu\r\n      style={{top:40}}\r\n      anchorEl={notifyanchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isNotificationOpen}\r\n      onClose={handleNotifyClose}\r\n      elevation={1}\r\n    >\r\n      \r\n      {/* <MenuItem onClick={handleMenuClose}><SimpleList /></MenuItem> */}\r\n      \r\n      <SimpleList ref={myref} />\r\n      \r\n    </Menu>\r\n    \r\n    </>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      style={{top:40}}\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n      elevation={0}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          \r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n\r\n  const list = (anchor) => (\r\n\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      // onClick={toggleDrawer(anchor, false)}\r\n      // onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-around\" className={classes.logod}>\r\n      <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            MoviePlex\r\n          </Typography>\r\n          <Hidden smUp>\r\n         <IconButton onClick={()=>setIsdrawer(!isdrawer)} size=\"small\">\r\n         <MenuOpenIcon fontSize=\"small\" style={{color:'#fff'}} /></IconButton>\r\n         </Hidden>\r\n\r\n          </Box>\r\n      <List\r\n      style={{paddingTop:'25%'}}\r\n      component=\"nav\"\r\n          aria-labelledby=\"available-content\"\r\n          subheader={\r\n            <ListSubheader component=\"div\" id=\"available-content\">\r\n              Content\r\n            </ListSubheader>\r\n          }\r\n          className={classes.root}\r\n      \r\n      \r\n      >\r\n    <Link to=\"/admin/dashboard\" style={{textDecoration:'none',color:'inherit'}}>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n        <DashboardIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Dashboard\" />\r\n      </ListItem>\r\n      </Link>\r\n      <Link to=\"/admin/users\" style={{textDecoration:'none',color:'inherit'}}>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n        <GroupIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Users\" />\r\n      </ListItem>\r\n      </Link>\r\n      <Link to=\"/admin/groups\" style={{textDecoration:'none',color:'inherit'}}>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n        <GroupWorkIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Groups\" />\r\n      </ListItem>\r\n      </Link>\r\n      <Link to=\"/admin/profile\" style={{textDecoration:'none',color:'inherit'}}>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n        <AccountCircleIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Profile\" />\r\n      </ListItem>\r\n      </Link>\r\n      \r\n      <Link to=\"/admin/contentadmin\" style={{textDecoration:'none',color:'inherit'}}>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n        <MenuBookIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Explore Content (Admin) \" />\r\n      </ListItem>\r\n      </Link>\r\n\r\n\r\n      <Link to=\"/admin/content\" style={{textDecoration:'none',color:'inherit'}}>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n        <MenuBookIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Explore Content\" />\r\n      </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/admin/favorite\" style={{textDecoration:'none',color:'inherit'}}>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n        <FavoriteIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Favorite Content\" />\r\n      </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/admin/bagged\" style={{textDecoration:'none',color:'inherit'}}>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n        <LocalMallIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Bagged Content\" />\r\n      </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/admin/contentrequest\" style={{textDecoration:'none',color:'inherit'}}>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <SendIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Request Content\" />\r\n      </ListItem>\r\n      </Link>\r\n      {/* <ListItem button>\r\n        <ListItemIcon>\r\n          <DraftsIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Drafts\" />\r\n      </ListItem> */}\r\n        \r\n        <ListItem button onClick={()=>setCollapseopen(!collapseopen)}>\r\n        <ListItemIcon>\r\n          <InboxIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Inbox\" />\r\n        {collapseopen ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n        <Collapse in={collapseopen} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <ListItem button className={classes.nested}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Starred\" />\r\n          </ListItem>\r\n        </List>\r\n      </Collapse>\r\n      </List>\r\n      <Divider />\r\n      {/* <ListItem button>\r\n        <ListItemIcon>\r\n          <DraftsIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Drafts\" />\r\n      </ListItem> */}\r\n      {/* <Box className={classes.modechanger} pt={4}>\r\n      <Switch\r\n        checked={switchstate.checkedB}\r\n        onChange={switchhandleChange}\r\n        color=\"primary\"\r\n        name=\"checkedB\"\r\n        size=\"small\"\r\n        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n      />\r\n      </Box> */}\r\n\r\n      <ListItem button onClick = {switchhandleChange}>\r\n        <ListItemIcon>\r\n        {switchstate?<Brightness7Icon />:<Brightness6Icon />}\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Theme Mode\" />\r\n      </ListItem>\r\n      \r\n    </div>\r\n    \r\n  );\r\n\r\n  return (\r\n      <>\r\n      \r\n      <div className={classes.root}>\r\n        \r\n      <Drawer variant=\"permanent\" \r\n      // classes={{ paper:classes.drawerPaper}} \r\n      className={clsx(classes.drawer, {\r\n        [classes.drawerOpen]: isdrawer,\r\n        [classes.drawerClose]: !isdrawer,\r\n      })}\r\n      classes={{\r\n        paper: clsx({\r\n          [classes.drawerOpen]: isdrawer,\r\n          [classes.drawerClose]: !isdrawer,\r\n        }),\r\n      }}\r\n      anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n        \r\n      {list(anchor)}\r\n      \r\n          </Drawer>\r\n\r\n\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: isdrawer,\r\n        })}>\r\n          \r\n        <Toolbar className='toolbarcolor'>\r\n        {!isdrawer &&\r\n        \r\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" className={classes.logo}>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                MoviePlex\r\n              </Typography>\r\n          </Box>\r\n        }\r\n       \r\n        \r\n          <IconButton\r\n            onClick = {toggleDrawer(anchor, true)}            \r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            style={{border:'1px solid gray',marginLeft:`${drawerWidth-195}px`}}\r\n            \r\n          >\r\n            <MenuIcon fontSize=\"small\" />\r\n          </IconButton>\r\n\r\n          \r\n\r\n\r\n\r\n          <Hidden only={['sm', 'xs']}>\r\n    \r\n    \r\n          <Grow in={true}>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          </Grow>\r\n          </Hidden>\r\n\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n\r\n           \r\n\r\n            <IconButton\r\n              \r\n              aria-label=\"show 17 new notifications\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleNotificationMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n              \r\n            </IconButton>\r\n\r\n\r\n\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n\r\n            \r\n\r\n          </div>\r\n\r\n\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n              \r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n        \r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n      \r\n      {renderMenuSimplelist}\r\n     \r\n     \r\n      \r\n    </div>\r\n    \r\n    </div>\r\n    \r\n    </>\r\n  );\r\n}\r\nexport default AdminHeader;","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\lib\\reactifyCss.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\services\\routerService.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\AuthLayout.js",["382","383","384","385","386"],"/**\r\n * AdminLayout.js Layout Start Here\r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport { Route, withRouter, Redirect, Switch } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport routerService from '../services/routerService'\r\n\r\nimport AdminHeader from '../components/AdminHeader/AdminHeader'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport { Container } from '@material-ui/core';\r\nclass AuthLayout extends Component {\r\n    static propTypes = {\r\n\r\n    }\r\n\r\n    render() {\r\n        const {match, location} = this.props;\r\n        \r\n        \r\n        return (\r\n            <>\r\n            <CssBaseline />\r\n            {/* <AdminHeader /> */}\r\n            \r\n            <Switch>\r\n            {routerService && routerService.map((route,key)=>\r\n\t\t\t\t\t<Route key={key} path={`/auth/${route.path}`} component={route.component} />\r\n\t\t\t\t)}\r\n                \r\n                \r\n                <Redirect from=\"*\" to=\"/auth/signin\" />\r\n                \r\n                </Switch>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(AuthLayout);\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\Dashboardadmin.js",["387","388","389","390","391"],"import React from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Avatar, Box, Chip, Typography } from '@material-ui/core';\r\nimport AttachMoneyOutlinedIcon from '@material-ui/icons/AttachMoneyOutlined';\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { amber, green, red, pink } from '@material-ui/core/colors';\r\nimport { Doughnut,Bar } from 'react-chartjs-2';\r\nimport Apexchartdemo from './Apexchartdemo'\r\nimport TrafficByDevice from './TrafficByDevice';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        display: 'flex',\r\n        padding: theme.spacing(5,3),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        height:'100%'\r\n       \r\n    },\r\n    avatarcolor: {\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    headingtext: {\r\n        fontSize: '12px',\r\n        fontWeight: 'bold',\r\n        textTransform: 'uppercase'\r\n    },\r\n    pricetext: {\r\n        color: \"#000\",\r\n        fontSize: '18px',\r\n        fontWeight: 'bold',\r\n        textTransform: 'uppercase'\r\n    },\r\n    chipnumber: {\r\n        borderRadius: 5,\r\n        padding: theme.spacing(0.8, 0.5),\r\n        fontSize: '12px'\r\n\r\n    }\r\n}));\r\nconst data = {\r\n    datasets: [{\r\n        barPercentage: 0.5,\r\n        barThickness: 6,\r\n        maxBarThickness: 8,\r\n        minBarLength: 2,\r\n        data: [10, 20, 30, 40, 50, 60, 70]\r\n    }]\r\n};\r\n\r\n\r\nconst Dashboardadmin = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={3}>\r\n\r\n                <Grid item xs={12} sm={3}>\r\n                    <Paper className={classes.paper}>\r\n                        <Box display=\"flex\" alignItems=\"flex-start\" flexDirection=\"column\">\r\n                            <Typography component='p' className={classes.headingtext}>\r\n                                TODAYS MONEY\r\n                        </Typography>\r\n                            <Typography component='p' className={classes.pricetext}>\r\n                                $24,000   <Box component=\"span\"\r\n                                    className={classes.chipnumber}\r\n                                    style={{\r\n                                        color: green[800],\r\n                                        backgroundColor: green[100],\r\n                                    }}>\r\n                                    +4%\r\n                                      </Box>\r\n                            </Typography>\r\n                        </Box>\r\n                        <Avatar className={classes.avatarcolor}>\r\n                            <AttachMoneyOutlinedIcon />\r\n                        </Avatar>\r\n\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                    <Paper className={classes.paper}>\r\n                        <Box display=\"flex\" alignItems=\"flex-start\" flexDirection=\"column\">\r\n                            <Typography component='p' className={classes.headingtext}>\r\n                            TOTAL CUSTOMERS\r\n                        </Typography>\r\n                            <Typography component='p' className={classes.pricetext}>\r\n                                1,600   <Box component=\"span\"\r\n                                    className={classes.chipnumber}\r\n                                    style={{\r\n                                        color: red[800],\r\n                                        backgroundColor: red[100],\r\n                                    }}>\r\n                                    +4%\r\n                                      </Box>\r\n                            </Typography>\r\n                        </Box>\r\n                        <Avatar className={classes.avatarcolor}>\r\n                            <PeopleIcon />\r\n                        </Avatar>\r\n\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                \r\n                    <Paper className={classes.paper}>\r\n                    \r\n                        <Box display=\"flex\" alignItems=\"flex-start\" flexDirection=\"column\">\r\n                            <Typography component='p' className={classes.headingtext}>\r\n                            TASKS PROGRESS \r\n                            <LinearProgress variant=\"determinate\" value={30.5}  />\r\n                            <Typography variant=\"body2\" color=\"textSecondary\"\r\n                            style={{\r\n                                color: red[800],\r\n                                \r\n                            }}\r\n                            >30.5% </Typography>\r\n                             \r\n                        </Typography>\r\n                        \r\n                            \r\n                                \r\n                                \r\n                            \r\n                        </Box>\r\n                        \r\n                        <Avatar className={classes.avatarcolor}>\r\n                            <InsertChartIcon />\r\n                            \r\n                        </Avatar>\r\n\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                    <Paper className={classes.paper}>\r\n                        <Box display=\"flex\" alignItems=\"flex-start\" flexDirection=\"column\">\r\n                            <Typography component='p' className={classes.headingtext}>\r\n                            BUDGET\r\n                        </Typography>\r\n                            <Typography component='p' className={classes.pricetext}>\r\n                                $23,200  <Box component=\"span\"\r\n                                    className={classes.chipnumber}\r\n                                    style={{\r\n                                        color: pink[800],\r\n                                        backgroundColor: pink[100],\r\n                                    }}>\r\n                                    +4%\r\n                                      </Box>\r\n                            </Typography>\r\n                        </Box>\r\n                        <Avatar className={classes.avatarcolor}>\r\n                            <MoneyIcon />\r\n                        </Avatar>\r\n\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={3}>\r\n                    \r\n                    <Grid item xs={12} sm={8}>\r\n                    <Apexchartdemo />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                    \r\n                        <TrafficByDevice />\r\n\r\n                    </Grid>\r\n                    \r\n      </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboardadmin\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\Apexchartdemo.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\constants\\chart-config.js",[],["392","393"],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\constants\\AppConfig.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\LatestProducts.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\TrafficByDevice.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\button\\Custombutton.js",["394","395"],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ForgotPassword.js",["396","397"],"import React from \"react\";\r\nimport {\r\n  Button,\r\n  Paper,\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\n\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport HttpsOutlinedIcon from \"@material-ui/icons/HttpsOutlined\";\r\nimport { Link } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    height: \"100vh\",\r\n    padding: 10,\r\n    backgroundColor: \"#fff\",\r\n    label: {\r\n      textTransform: \"capitalize\",\r\n    },\r\n    signinform: {},\r\n    \"& .MuiInputBase-input\": {\r\n      backgroundColor: grey[100],\r\n      outline: \"none\",\r\n      borderRadius: 5,\r\n    },\r\n    \"& .MuiInputLabel-formControl\": {\r\n      color: grey[800],\r\n    },\r\n  },\r\n  bordertopcolor: {\r\n    borderTop: `8px solid ${theme.palette.primary.main}`,\r\n    borderRadius: 10,\r\n  },\r\n  pageTitle: {\r\n    position: \"absolute\",\r\n    left: \"44vw\",\r\n    top: 80,\r\n    // height:'4vh',\r\n    // padding:10\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      top: 100,\r\n      left: \"28vw\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ForgotPassword = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Box className={classes.pageTitle}>\r\n        <Typography component=\"h4\" variant=\"h4\">\r\n          MoviePlex\r\n        </Typography>\r\n      </Box>\r\n      <Box component=\"section\" className={classes.root}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={8}\r\n          md={4}\r\n          component={Paper}\r\n          elevation={6}\r\n          square\r\n          className={classes.bordertopcolor}\r\n        >\r\n          {/* <LinearProgress value={40} /> */}\r\n          <Box display=\"flex\" flexDirection=\"column\" p={3}>\r\n            <Box\r\n              display=\"flex\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Typography\r\n                component=\"h5\"\r\n                variant=\"h5\"\r\n                style={{ marginBottom: \"5%\" }}\r\n              >\r\n                Reset Your Password\r\n              </Typography>\r\n              <HttpsOutlinedIcon style={{ marginBottom: \"5%\" }} />\r\n            </Box>\r\n\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              style={{ marginBottom: \"5%\" }}\r\n              required\r\n            />\r\n\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              classes={{ label: classes.root.label }}\r\n              style={{ marginTop: \"3%\" }}\r\n            >\r\n              Reset\r\n            </Button>\r\n            <Box\r\n              display=\"flex\"\r\n              alignContent=\"center\"\r\n              justifyContent=\"space-between\"\r\n              mt={3}\r\n            >\r\n              <Typography component=\"h5\" variant=\"body2\">\r\n                Don't have an account ?{\" \"}\r\n                <Link\r\n                  to=\"/auth/signup\"\r\n                  style={{ textDecorationColor: \"none\", color: \"inherit\" }}\r\n                >\r\n                  Sign up\r\n                </Link>\r\n              </Typography>\r\n              <Typography component=\"h5\" variant=\"body2\">\r\n                <Link\r\n                  to=\"/auth/signin\"\r\n                  style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                >\r\n                  Back\r\n                </Link>\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\formikcontrol\\FormikField.js",["398"],"import React from 'react'\r\nimport { ErrorMessage, Field } from \"formik\";\r\nimport TextField from '@material-ui/core/TextField'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FormikField = ({ name=\"somename\", label=\"somelable\", type = \"text\", required = false, textvariant=false}) => {\r\n    return (\r\n        <div className=\"FormikField\">\r\n            <Field\r\n                variant={textvariant ? textvariant:null}\r\n                required={required}\r\n                autoComplete=\"off\"\r\n                as={TextField}\r\n                label={label}\r\n                name={name}\r\n                fullWidth\r\n                type={type}\r\n                helperText={<ErrorMessage name={name} style={{color:'red'}} />}\r\n            />         \r\n        </div>\r\n    )\r\n}\r\n\r\n// FormikField.propTypes =  {\r\n//     name: PropTypes.string,\r\n//     label: PropTypes.string,\r\n//     type: PropTypes.string,\r\n//     required: PropTypes.bool,\r\n//   }\r\nexport default FormikField;\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentExplore.js",["399","400","401","402","403","404","405","406"],"import { Box, Grid } from '@material-ui/core'\r\nimport React, { useState, useEffect, useCallback } from 'react'\r\nimport ContentExplorecard from '../components/explorecard/ContentExplorecard'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport * as apirequest from './api/api';\r\nimport * as cardapi from './api/cardactionsapi';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst ContentExplore = () => {\r\n\r\n    const response = useSelector((state) => state.productSave);\r\n    const [allproducts, setAllproducts] = useState([])\r\n    const [pageNumber, setPageNumber] = useState(1)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [alertseverity, setAlertseverity] = React.useState('success')\r\n    const [productmessage, setProductmessage] = React.useState('')\r\n\r\n    useEffect(() => {\r\n        const setprod = async () => {\r\n\r\n            const allprod = await apirequest.getallproducts({ 'pageNumber': pageNumber })\r\n\r\n            setAllproducts(allprod)\r\n\r\n        }\r\n        setprod()\r\n\r\n        console.log('triggered')\r\n\r\n    }, [pageNumber])\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n\r\n    const handleIsactivemain = async (id, action) => {\r\n\r\n        let response = \"\"\r\n        if (action == \"is_active\") {\r\n            response = await cardapi.isactive(id)\r\n            const updatedproductsactive = allproducts.filter((val, key) => {\r\n                return [...allproducts, +val.id == +id ? val.is_active = !val.is_active : null]\r\n            })\r\n            setAllproducts(updatedproductsactive);\r\n        } else if (action == \"in_stock\") {\r\n            response = await cardapi.instock(id)\r\n            const updatedproductstock = allproducts.filter((val, key) => {\r\n                return [...allproducts, +val.id == +id ? val.in_stock = !val.in_stock : null]\r\n            })\r\n            setAllproducts(updatedproductstock);\r\n        }\r\n\r\n        if (+response.status === 200) {\r\n\r\n            setProductmessage(\"Successfully Changed\")\r\n            setOpen(true);\r\n            setAlertseverity('success')\r\n        } else if (+response.status === 400) {\r\n            setProductmessage(\"Successfully Changed\")\r\n            setOpen(true);\r\n            setAlertseverity('error')\r\n        }\r\n        else {\r\n\r\n            setProductmessage(\"Something is went wrong\")\r\n            setOpen(true);\r\n            setAlertseverity('error')\r\n        }\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     setAllproducts(response.products)\r\n    // }, [])\r\n\r\n    const handlePagechange = (event, number) => {\r\n        // alert(number)\r\n        setPageNumber(number)\r\n    }\r\n\r\n    // SnackBar\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const addlikes = async (e, id) => {\r\n        const response = await apirequest.addlike(id)\r\n        if (+response.status === 200) {\r\n            const updatedproducts = allproducts.filter((val, key) => {\r\n                return [...allproducts, +val.id == +id ? val.isliked = !val.isliked : null]\r\n            })\r\n            setAllproducts(updatedproducts);\r\n            alert(response.message)\r\n\r\n        } else {\r\n            alert('something is went wrong')\r\n        }\r\n\r\n    }\r\n    const addfavorites = async (e, id) => {\r\n        const response = await apirequest.addinterest(id)\r\n\r\n        if (+response.status === 200) {\r\n            const updatedproducts = allproducts.filter((val, key) => {\r\n                return [...allproducts, +val.id == +id ? val.isfavored = !val.isfavored : null]\r\n            })\r\n            setAllproducts(updatedproducts);\r\n            alert(response.message)\r\n\r\n        } else {\r\n            alert('something is went wrong')\r\n        }\r\n\r\n\r\n    }\r\n    const vertical = \"top\"\r\n    const horizontal = \"right\"\r\n    return (\r\n        <>\r\n            <Snackbar anchorOrigin={{ vertical, horizontal }} open={open} autoHideDuration={4000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={alertseverity}>\r\n                    {productmessage}\r\n                </Alert>\r\n            </Snackbar>\r\n            <Grid container spacing={2}>\r\n                {allproducts.map((val, index) => {\r\n                    return <Grid item md={4} sm={12} xs={12} lg={4} key={index}><ContentExplorecard val={val} likefun={addlikes} interestfun={addfavorites}\r\n                        handleIsactivemain={handleIsactivemain}\r\n                    /></Grid>\r\n                })}\r\n            </Grid>\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" mt={5} mb={5}>\r\n                <Pagination onChange={handlePagechange} count={10} color=\"primary\" />\r\n            </Box>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ContentExplore\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentRequest.js",["407","408","409","410","411","412","413","414","415","416","417"],"import { Box, Button, Card, FormControl, FormControlLabel, Grid, Input, Paper, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport CustomizedDate from '../components/ModelDialogue/CustomizedDate'\r\nimport CustomizedInputs from '../components/ModelDialogue/CustomizedInputs'\r\nimport CustomizedSelect from '../components/ModelDialogue/CustomizedSelect'\r\nimport SelectFieldCustom from '../components/SelectFieldCustom/SelectFieldCustom'\r\nimport FileUpload from '../components/button/FileUpload'\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FormikField from \"../components/formikcontrol/FormikField\";\r\nimport { saveProduct, requestProduct } from '../actions'\r\nimport Fileuploadbutton from '../components/button/Fileuploadbutton'\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst creatorSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .required(\"Title is should not be empty\"),\r\n    description: Yup.string()\r\n        .required(\"Description is should not be empty\"),\r\n    rights: Yup.string()\r\n        .required(\"Rights is should not be empty\"),\r\n    castncrew: Yup.string()\r\n        .required(\"CastnCrew is should not be empty\"),\r\n    price: Yup.number()\r\n        .required(\"Price is should not be empty\"),\r\n    // createdat:Yup.date().required(\"Date Should not be empty\"),\r\n    // thumbnail:Yup.mixed()\r\n    // .required(\"Thumbnail is should not be empty\"),\r\n    // video:Yup.mixed()\r\n    // .required(\"Videofile is should not be empty\"),\r\n\r\n    // .matches(\r\n    //     /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n    //     \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\r\n    //   )\r\n});\r\n\r\nconst creatorequestschema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .required(\"Title is should not be empty\")\r\n})\r\n\r\nconst initialValues = {\r\n    title: \"\",\r\n    description: \"\",\r\n    rights: \"\",\r\n    castncrew: \"\",\r\n    price: 0\r\n};\r\nconst initialcreatorValues = {\r\n    title: \"\"\r\n\r\n};\r\nconst ContentRequest = (props) => {\r\n    // const [fields, setFields] = React.useState([{ label: 'Cost' }])\r\n    // const [selectFields] = React.useState([{ label: 'SuperAdmin', value: 'superuser' }, { label: 'Admin', value: 'Author' }, { label: 'User', value: 'user' }])\r\n    // const selectcategoryFields = [{ label: 'Creator', value: 'creator' }, { label: 'Producer', value: 'Producer' }, { label: 'Hybrid', value: 'hybrid' }, { label: 'None of the above', value: 'none' }]\r\n    // const [requestfields, setRequestfields] = React.useState([{ label: 'Title' }, { label: 'Description' }, { label: 'Thumbnail' }, { label: 'Video File' }, { label: 'Rights Details' }, { label: 'Cast and Crew' }, { label: 'Cost of the project' }, { label: 'Date of Creation' }, { label: 'Cost' }])\r\n    // const [issubmitting, setIssubmitting] = React.useState(false);\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [alertseverity, setAlertseverity] = React.useState('success')\r\n    const [productmessage, setProductmessage] = React.useState('')\r\n\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n    const [selectedCategory, setSelectedCategory] = React.useState('');\r\n\r\n    const [authortype, setAuthortype] = React.useState('creator')\r\n    const [selectedfile, setSelectedfile] = React.useState({\r\n        thumbnail: '',\r\n        thumbnail1: '',\r\n        thumbnail2: '',\r\n        thumbnail3: '',\r\n        video: ''\r\n    });\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const response = useSelector((state) => state.productSave);\r\n\r\n    const onCreatorrequestSave = async (values) => {\r\n        const history = props.history\r\n\r\n        const finvalues = {\r\n            ...values,\r\n            author_type: 'producer',\r\n            category: selectedCategory\r\n\r\n        }\r\n\r\n        return await dispatch(\r\n            requestProduct(\r\n                finvalues,\r\n                history\r\n            )\r\n        );\r\n\r\n    };\r\n\r\n    const onCreatorrequestProducerSave = async (values) => {\r\n        \r\n        const history = props.history\r\n\r\n        const finvalues = {\r\n            ...values,\r\n            author_type: 'producer',\r\n            category: selectedCategory\r\n\r\n        }\r\n\r\n        return dispatch(\r\n            requestProduct(\r\n                finvalues,\r\n                history\r\n            )\r\n        );\r\n\r\n    };\r\n\r\n    const onProductSave = async (values) => {\r\n\r\n        const history = props.history\r\n        console.log(values)\r\n        const finvalues = {\r\n            ...values, video: selectedfile.video,\r\n            thumbnail: selectedfile.thumbnail,\r\n            category: selectedCategory,\r\n            createdat: selectedDate\r\n        }\r\n\r\n        return await dispatch(\r\n            saveProduct(\r\n                finvalues,\r\n                history\r\n            )\r\n        );\r\n\r\n\r\n\r\n    };\r\n\r\n\r\n   \r\n\r\n    React.useEffect(() => {\r\n        if (response.isproductsaved) {\r\n            \r\n            setProductmessage(\"Successfully Changed\")\r\n            setOpen(true);\r\n            setAlertseverity('success')\r\n        } else if (response.isproductsaved != null && !response.isproductsaved) {\r\n            \r\n            setProductmessage(\"Something is went wrong\")\r\n            setOpen(true);\r\n            setAlertseverity('success')\r\n        }\r\n\r\n        return () => {\r\n\r\n        }\r\n\r\n    }, [response.isproductsaved])\r\n\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n        console.log(date)\r\n    };\r\n\r\n     // SnackBar\r\n\r\n     const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const handlecategoryChange = (e) => {\r\n        setSelectedCategory(e.target.value)\r\n\r\n    }\r\n\r\n\r\n    const handlefileChange = (e) => {\r\n        setSelectedfile({\r\n            ...selectedfile,\r\n            [e.target.id]: e.target.files[0]\r\n        })\r\n        console.log(e.target.files[0])\r\n\r\n    }\r\n\r\n\r\n\r\n    const vertical = \"top\"\r\n    const horizontal = \"right\"\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar anchorOrigin={{ vertical, horizontal }} open={open} autoHideDuration={4000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={alertseverity}>\r\n                    {productmessage}\r\n                </Alert>\r\n            </Snackbar>\r\n            {authortype == \"creator\" ?\r\n                <Grid container spacing={1}>\r\n\r\n                    <Grid item md={6} sm={12} xs={12}>\r\n                        <Card>\r\n                            <Box p={1}>\r\n                                <Typography>\r\n                                    Requirements (Creator)\r\n                   </Typography>\r\n                            </Box>\r\n                            <Box p={2}>\r\n                                <Formik\r\n                                    initialValues={initialcreatorValues}\r\n                                    onSubmit={onCreatorrequestSave}\r\n                                    validationSchema={creatorequestschema}\r\n                                >\r\n                                    {({ dirty, isValid }) => {\r\n                                        return (\r\n                                            <Form>\r\n                                                <FormikField\r\n                                                    name=\"title\"\r\n                                                    label=\"title\"\r\n                                                    type=\"text\"\r\n                                                    required\r\n                                                    textvariant=\"outlined\"\r\n                                                />\r\n                                                <Box style={{marginLeft:'-1%'}}>\r\n                                                <CustomizedSelect\r\n                                                    fieldname={'Type'}\r\n                                                    label=\"category\"\r\n                                                    handlecategoryChange={handlecategoryChange}\r\n                                                    selectedCategory={selectedCategory}\r\n                                                />\r\n                                                </Box>\r\n                                                <Box pl={1} pt={2}>\r\n                                                    <Button\r\n                                                        disabled={!dirty || !isValid}\r\n                                                        type=\"submit\" color=\"primary\" variant=\"contained\">Submit</Button>\r\n                                                </Box>\r\n\r\n                                            </Form>\r\n                                        );\r\n                                    }}\r\n                                </Formik>\r\n                            </Box>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item md={6} sm={12} xs={12}>\r\n                        <Card>\r\n                            <Box p={1}>\r\n                                <Typography>\r\n                                    Submit Content (Creator)\r\n                   </Typography>\r\n                            </Box>\r\n                            <Box p={2}>\r\n                                <Formik\r\n                                    initialValues={initialValues}\r\n                                    onSubmit={onProductSave}\r\n                                    validationSchema={creatorSchema}\r\n                                >\r\n                                    {({ dirty, isValid }) => {\r\n                                        return (\r\n                                            \r\n                                            <Form>\r\n                                                <Grid item md={12} sm={12} lg={12} spacing={2}>\r\n                                                <FormikField\r\n                                                    name=\"title\"\r\n                                                    label=\"title\"\r\n                                                    type=\"text\"\r\n                                                    required\r\n                                                    textvariant=\"outlined\"\r\n                                                /><br></br>\r\n                                                <FormikField\r\n                                                    name=\"description\"\r\n                                                    label=\"description\"\r\n                                                    type=\"text\"\r\n                                                    required\r\n                                                    textvariant=\"outlined\"\r\n                                                /><br></br>\r\n                                                <FormikField\r\n                                                    name=\"rights\"\r\n                                                    label=\"rights\"\r\n                                                    type=\"text\"\r\n                                                    required\r\n                                                    textvariant=\"outlined\"\r\n                                                    style={{ backgroundColor: \"#fff\" }}\r\n\r\n\r\n                                                /><br></br>\r\n                                                <FormikField\r\n                                                    name=\"castncrew\"\r\n                                                    label=\"castncrew\"\r\n                                                    type=\"text\"\r\n                                                    required\r\n                                                    textvariant=\"outlined\"\r\n                                                /><br></br>\r\n                                                <FormikField\r\n                                                    name=\"price\"\r\n                                                    label=\"price\"\r\n                                                    type=\"text\"\r\n                                                    required\r\n                                                    textvariant=\"outlined\"\r\n                                                /><br></br>\r\n                                                {/* <Input type=\"file\" id=\"thumbnail\" name=\"thumbnail\" onChange={handlefileChange}></Input>\r\n                                                 <Input type=\"file\" id=\"video\" name=\"video\" onChange={handlefileChange}></Input> */}\r\n\r\n\r\n                                                <div>\r\n                                                    <input\r\n                                                        accept=\"image/*\"\r\n                                                        style={{ display: 'none' }}\r\n                                                        id=\"thumbnail\"\r\n                                                        name=\"thumbnail\"\r\n                                                        type=\"file\"\r\n                                                        onChange={handlefileChange}\r\n                                                    />\r\n                                                    <label htmlFor=\"thumbnail\">\r\n                                                        <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                                            Upload Thumbnail &nbsp;<BackupIcon />\r\n                                                        </Button>\r\n                                                    </label>\r\n                                                    {JSON.stringify(selectedfile.thumbnail.name)}\r\n                                                </div>\r\n\r\n                                                <br></br>\r\n                                                <div>\r\n                                                    <Input\r\n                                                        accept=\"video/*\"\r\n                                                        style={{ display: 'none' }}\r\n                                                        id=\"video\"\r\n                                                        name=\"video\"\r\n                                                        type=\"file\"\r\n                                                        onChange={handlefileChange}\r\n                                                    />\r\n                                                    <label htmlFor=\"video\">\r\n                                                        <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                                            Upload Video &nbsp;<BackupIcon />\r\n                                                        </Button>\r\n                                                    </label>\r\n                                                    {JSON.stringify(selectedfile.video.name)}\r\n                                                </div>\r\n<br></br>\r\n                                                <div>\r\n                                                    <input\r\n                                                        accept=\"image/*\"\r\n                                                        style={{ display: 'none' }}\r\n                                                        id=\"thumbnail1\"\r\n                                                        name=\"thumbnail1\"\r\n                                                        type=\"file\"\r\n                                                        onChange={handlefileChange}\r\n                                                    />\r\n                                                    <label htmlFor=\"thumbnail1\">\r\n                                                        <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                                            Upload Banner1 &nbsp;<BackupIcon />\r\n                                                        </Button>\r\n                                                    </label>\r\n                                                    {JSON.stringify(selectedfile.thumbnail1.name)}\r\n                                                </div>\r\n\r\n                                                <br></br>\r\n\r\n                                                <div>\r\n                                                    <input\r\n                                                        accept=\"image/*\"\r\n                                                        style={{ display: 'none' }}\r\n                                                        id=\"thumbnail2\"\r\n                                                        name=\"thumbnail2\"\r\n                                                        type=\"file\"\r\n                                                        onChange={handlefileChange}\r\n                                                    />\r\n                                                    <label htmlFor=\"thumbnail2\">\r\n                                                        <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                                        Upload Banner2 &nbsp;<BackupIcon />\r\n                                                        </Button>\r\n                                                    </label>\r\n                                                    {JSON.stringify(selectedfile.thumbnail2.name)}\r\n                                                </div>\r\n\r\n                                                <br></br>\r\n                                                <div>\r\n                                                    <input\r\n                                                        accept=\"image/*\"\r\n                                                        style={{ display: 'none' }}\r\n                                                        id=\"thumbnail3\"\r\n                                                        name=\"thumbnail3\"\r\n                                                        type=\"file\"\r\n                                                        onChange={handlefileChange}\r\n                                                    />\r\n                                                    <label htmlFor=\"thumbnail3\">\r\n                                                        <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                                        Upload Banner3 &nbsp;<BackupIcon />\r\n                                                        </Button>\r\n                                                    </label>\r\n                                                    {JSON.stringify(selectedfile.thumbnail3.name)}\r\n                                                </div>\r\n\r\n                                                <br></br>\r\n                                                 <Box style={{marginLeft:'-1%'}}>\r\n                                                <CustomizedSelect\r\n                                                    fieldname={'Type'}\r\n                                                    label=\"category\"\r\n                                                    handlecategoryChange={handlecategoryChange}\r\n                                                    selectedCategory={selectedCategory}\r\n                                                />\r\n                                                </Box>\r\n\r\n                                                {/* <CustomizedDate\r\n                                                label=\"createdat\"\r\n                                                handleDateChange={handleDateChange}\r\n                                                selectedDate={selectedDate}\r\n                                            /> */}\r\n\r\n                                                <Box pl={1} pt={2}>\r\n                                                    <Button type=\"submit\" color=\"primary\" variant=\"contained\"\r\n                                                        disabled={!dirty || !isValid}\r\n                                                    >Submit</Button>\r\n                                                </Box>\r\n\r\n\r\n                                                </Grid>\r\n                                            </Form>\r\n                                        );\r\n                                    }}\r\n                                </Formik>\r\n                            </Box>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n\r\n                :\r\n                <Grid container spacing={1}>\r\n\r\n                    <Grid item md={6} sm={12} xs={12}>\r\n                        <Card>\r\n                            <Box p={1}>\r\n                                <Typography>\r\n                                    Requirements (Producer)\r\n                   </Typography>\r\n                            </Box>\r\n                            <Box p={2}>\r\n                                <Formik\r\n                                    initialValues={initialcreatorValues}\r\n                                    onSubmit={onCreatorrequestProducerSave}\r\n                                    validationSchema={creatorequestschema}\r\n                                >\r\n                                    {({ dirty, isValid }) => {\r\n                                        return (\r\n                                            <Form>\r\n                                                <FormikField\r\n                                                    name=\"title\"\r\n                                                    label=\"title\"\r\n                                                    type=\"text\"\r\n                                                    required\r\n                                                    textvariant=\"outlined\"\r\n                                                />\r\n                                                <CustomizedSelect\r\n                                                    fieldname={'Type'}\r\n                                                    label=\"category\"\r\n                                                    handlecategoryChange={handlecategoryChange}\r\n                                                    selectedCategory={selectedCategory}\r\n                                                />\r\n                                                <Box pl={1} pt={2}>\r\n                                                    <Button\r\n                                                        disabled={!dirty || !isValid}\r\n                                                        type=\"submit\" color=\"primary\" variant=\"contained\">Submit</Button>\r\n                                                </Box>\r\n\r\n                                            </Form>\r\n                                        );\r\n                                    }}\r\n                                </Formik>\r\n                            </Box>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n\r\n\r\n            }\r\n\r\n            <br></br>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContentRequest\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\TableMaterial\\TableMaterial.js",["418","419","420"],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\ModelDialogue.js",["421","422","423","424","425"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport CustomizedInputs from './CustomizedInputs';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   \r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  \r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function ModelDialogue() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [fields, setFields] = React.useState([{ label: 'Cost' }])\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Add to library\r\n      </Button>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Sound\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n       \r\n<CustomizedInputs fields={fields} />\r\n\r\n        \r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n",["426","427"],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\CustomizedInputs.js",["428","429","430","431","432","433","434","435","436","437","438"],"import React from 'react';\r\nimport {\r\n  fade,\r\n  ThemeProvider,\r\n  withStyles,\r\n  makeStyles,\r\n  createMuiTheme,\r\n} from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Box } from '@material-ui/core';\r\nimport { ErrorMessage, Field } from \"formik\";\r\nimport FormikField from '../formikcontrol/FormikField';\r\n// const CssTextField = withStyles({\r\n//   root: {\r\n//     '& label.Mui-focused': {\r\n//       color: 'green',\r\n//     },\r\n//     '& .MuiInput-underline:after': {\r\n//       borderBottomColor: 'green',\r\n//     },\r\n//     '& .MuiOutlinedInput-root': {\r\n//       '& fieldset': {\r\n//         borderColor: 'red',\r\n//       },\r\n//       '&:hover fieldset': {\r\n//         borderColor: 'yellow',\r\n//       },\r\n//       '&.Mui-focused fieldset': {\r\n//         borderColor: 'green',\r\n//       },\r\n//     },\r\n//   },\r\n// })(TextField);\r\n\r\n// const BootstrapInput = withStyles((theme) => ({\r\n//   root: {\r\n//     'label + &': {\r\n//       marginTop: theme.spacing(3),\r\n//     },\r\n//   },\r\n//   input: {\r\n//     borderRadius: 4,\r\n//     position: 'relative',\r\n//     backgroundColor: theme.palette.common.white,\r\n//     border: '1px solid #ced4da',\r\n//     fontSize: 16,\r\n//     width: 'auto',\r\n//     padding: '10px 12px',\r\n//     transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n//     // Use the system font instead of the default Roboto font.\r\n//     fontFamily: [\r\n//       '-apple-system',\r\n//       'BlinkMacSystemFont',\r\n//       '\"Segoe UI\"',\r\n//       'Roboto',\r\n//       '\"Helvetica Neue\"',\r\n//       'Arial',\r\n//       'sans-serif',\r\n//       '\"Apple Color Emoji\"',\r\n//       '\"Segoe UI Emoji\"',\r\n//       '\"Segoe UI Symbol\"',\r\n//     ].join(','),\r\n//     '&:focus': {\r\n//       boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n//       borderColor: theme.palette.primary.main,\r\n//     },\r\n//   },\r\n// }))(InputBase);\r\n\r\nconst useStylesReddit = makeStyles((theme) => ({\r\n  root: {\r\n    flex:1,\r\n    position:'relative',    \r\n    border: '1px solid #e2e2e1',\r\n    overflow: 'hidden',\r\n    borderRadius: 4,\r\n    backgroundColor: '#fcfcfb',\r\n    marginBottom:\"2%\",\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    '&:hover': {\r\n      backgroundColor: '#fff',\r\n    },\r\n    '&$focused': {\r\n      backgroundColor: '#fff',\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  focused: {},\r\n}));\r\n\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit();\r\n  // const { name:\"formik\", label:\"formiklable\", type : \"text\", required : false, textvariant:false} = props\r\n  \r\n\r\n  return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent:'center',\r\n    alignContent:'center',\r\n    flexWrap: 'wrap',\r\n    \r\n    \r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n// const ValidationTextField = withStyles({\r\n//   root: {\r\n//     '& input:valid + fieldset': {\r\n//       borderColor: 'green',\r\n//       borderWidth: 2,\r\n//     },\r\n//     '& input:invalid + fieldset': {\r\n//       borderColor: 'red',\r\n//       borderWidth: 2,\r\n//     },\r\n//     '& input:valid:focus + fieldset': {\r\n//       borderLeftWidth: 6,\r\n//       padding: '4px !important', // override inline-style\r\n//     },\r\n//   },\r\n// })(TextField);\r\n\r\n// const theme = createMuiTheme({\r\n//   palette: {\r\n//     primary: green,\r\n//   },\r\n// });\r\n\r\nexport default function CustomizedInputs(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root} noValidate style={{marginTop:\"1%\"}}>\r\n     \r\n     \r\n       \r\n   \r\n    <RedditTextField\r\n      variant='filled'\r\n      required={true}\r\n      autoComplete=\"off\"\r\n      label={props.label}\r\n      name={props.label}\r\n      fullWidth\r\n      type={'text'}\r\n      helperText={<ErrorMessage name={'name'} style={{color:'red'}} />}\r\n /> \r\n\r\n\r\n      \r\n    </Box>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\CustomizedSelect.js",["439"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n  \r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 220,\r\n    // backgroundColor:grey[50],\r\n    // border:'1px solid gray',\r\n    '& .MuiInputLabel-shrink':{\r\n        top:5,\r\n        left:10\r\n    }\r\n    \r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function CustomizedSelect(props) {\r\n  const classes = useStyles();\r\n  \r\n\r\n  return (\r\n    <div>\r\n     \r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"grouped-select\">{props.fieldname}</InputLabel>\r\n        <Select defaultValue=\"\" id=\"grouped-select\" value={props.selectedCategory} variant=\"outlined\" name={props.label} onChange={props.handlecategoryChange}>\r\n          <MenuItem value=\"\">\r\n            <em>Choose Option</em>\r\n          </MenuItem>\r\n          <ListSubheader>OTT Platform</ListSubheader>\r\n          <MenuItem value={1}>YouTube</MenuItem>\r\n          <MenuItem value={2}>Web Series</MenuItem>\r\n          <MenuItem value={3}>OTT Content</MenuItem>\r\n          <MenuItem value={4}>Short Form</MenuItem>\r\n          <MenuItem value={5}>Long Form</MenuItem>\r\n          <MenuItem value={6}>Movie</MenuItem>\r\n          <MenuItem value={7}>Long Form</MenuItem>      \r\n          <ListSubheader>Independent</ListSubheader>\r\n          <MenuItem value={8}>Music</MenuItem>\r\n          <MenuItem value={9}>Original Songs</MenuItem>\r\n          <MenuItem value={10}>Content Transalation Theme</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\CustomizedDate.js",["440","441","442"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Box } from '@material-ui/core';\r\n\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n  DatePicker,\r\n} from '@material-ui/pickers';\r\n// import { DatePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nconst DatePickers = (props) => {\r\n  const classes = useStyles();\r\n\r\n  \r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n    <Box className={classes.container} pt={2}>\r\n      <KeyboardDatePicker\r\n          disableToolbar\r\n          name={props.label}\r\n          variant=\"inline\"\r\n          format=\"MM/dd/yyyy\"\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          label={props.label}\r\n          value={props.selectedDate}\r\n          onChange={props.handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n      \r\n      \r\n    </Box>\r\n   \r\n    \r\n    </MuiPickersUtilsProvider>\r\n   \r\n  );\r\n}\r\nexport default DatePickers;","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\firebase.utils.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\UsersList.js",["443","444","445","446","447"],"import { Box, Button, Card, FormControl, Grid, InputLabel, MenuItem, TextField, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nimport TableMaterialuser from '../components/TableMaterial/TableMaterialuser'\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nimport Select from '@material-ui/core/Select';\r\nimport { grey } from '@material-ui/core/colors'\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \r\n      \"& .MuiInputBase-input\": {\r\n        backgroundColor: grey[100],\r\n        outline: \"none\",\r\n        borderRadius: 5,\r\n        border:`1px solid ${grey[500]}`,\r\n      },\r\n      \"& .MuiInputLabel-formControl\": {\r\n        color: grey[800],\r\n        \r\n      },\r\n      \"& .Mui-disabled\": {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: \"#fff\",\r\n        cursor: \"no-drop\",\r\n      },\r\n    },\r\n   \r\n    \r\n  }));\r\n\r\nconst UsersList = () => {\r\n    \r\n    const calsses = useStyles();\r\n    const [usercategory,setUsercategory] =  React.useState('creator')\r\n    const [usertype,setUsertype] =  React.useState('user')\r\n    const [productlistvalue,setProductlistvalue] =  React.useState('')\r\n    const [userlist,setUserlist] =  React.useState('')\r\n    const [usergroup,setUsergroup] =  React.useState('')\r\n    const [open,setOpen] =  React.useState(false)\r\n    const [usercreatedmessage,setUsercreatedmessage] =  React.useState('')\r\n    const [alertseverity,setAlertseverity] =  React.useState('success')\r\n    const [userslistdata,setUserslistdata] =  React.useState([])\r\n    const [usersgroupdata,setUsersgroupdata] =  React.useState([])\r\n    const [productlistdata,setProductlistdata] =  React.useState([])\r\n    \r\n    \r\n    \r\n    \r\n    const [uservalues,setUservalues] = React.useState({\r\n        username:'',\r\n        password:'',\r\n        \r\n    })\r\n\r\n    // \r\n        // SnackBar\r\n\r\n        const handleClose = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n              return;\r\n            }\r\n        \r\n            setOpen(false);\r\n          };\r\n    // \r\n\r\n\r\n    const url = \"http://127.0.0.1:8000/\"\r\n\r\n\r\n     // Users\r\n\r\n     const getalluserss = async() => {\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',          \r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n          }\r\n        axios.get(url+'auth/admin/saveuser/',config).then(res=>{\r\n          if(!res.data.error){\r\n              \r\n            setUserslistdata(res.data.GETmethodData.splice(5,30))            \r\n            \r\n            \r\n          }\r\n      }).catch(err=>{\r\n          \r\n          alert(err.message)\r\n          \r\n      })\r\n      }\r\n\r\n\r\n      const getproductlist = async() => {\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',          \r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n          }\r\n        axios.get(url+'admin/getProductsall/',config).then(res=>{\r\n            \r\n          if(res.data.status == 200){\r\n              \r\n            setProductlistdata(res.data.obs)            \r\n            \r\n            \r\n          }\r\n      }).catch(err=>{\r\n          \r\n          alert(err.message)\r\n          \r\n      })\r\n      }\r\n\r\n\r\n       // Users\r\n\r\n     const getallgroups = async() => {\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',          \r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n          }\r\n        axios.get(url+'admin/getallgroups/',config).then(res=>{\r\n          if(!res.data.error){\r\n              \r\n            setUsersgroupdata(res.data.groups)            \r\n            \r\n            \r\n          }\r\n      }).catch(err=>{\r\n          \r\n          alert(err.message)\r\n          \r\n      })\r\n      }\r\n  \r\n      React.useEffect(() => {\r\n        getalluserss()\r\n        getallgroups()\r\n        return () => {\r\n            \r\n        }\r\n      }, [])\r\n      React.useEffect(() => {\r\n        \r\n        getproductlist()\r\n        return () => {\r\n\r\n        }\r\n      }, [])\r\n\r\n   \r\n// Users\r\n\r\n    \r\n\r\n    const handleSubmit = async () => {\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data',          \r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n          }\r\n\r\n        let form_data = new FormData()\r\n        form_data.append('username',uservalues.username)\r\n        form_data.append('password',uservalues.password)\r\n        form_data.append('usertype',usertype)\r\n        form_data.append('usercategory',usercategory)\r\n        await axios.post(url+'auth/admin/saveuser/',form_data,config).then(res=>{\r\n            if(!res.data.error){\r\n                setUsercreatedmessage(\"User Created Successfully\")\r\n                setOpen(true)\r\n                setAlertseverity('success')\r\n               \r\n               \r\n            }\r\n        }).catch(err=>{\r\n            \r\n            setUsercreatedmessage(\"User Creation is Failed\")\r\n            setOpen(true);\r\n            setAlertseverity('error')\r\n            \r\n        })\r\n\r\n    }\r\n    const onhandleChangeusertype = (e) => {\r\n        setUsertype(e.target.value)\r\n\r\n    }\r\n    const onhandleChangecategory = (e) => {\r\n        setUsercategory(e.target.value)\r\n    }\r\n\r\n    const onhandleChange = (e) => {\r\n        setUservalues({\r\n            ...uservalues,\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    const userstatusUpdate = (status) => {\r\n        if(status==\"success\"){\r\n            setUsercreatedmessage(\"User Changed Successfully\")\r\n                setOpen(true)\r\n                setAlertseverity('success')\r\n            \r\n        }else{\r\n            setUsercreatedmessage(\"Something is went wrong\")\r\n                setOpen(true)\r\n                setAlertseverity('error')\r\n        }\r\n    }\r\n\r\n   \r\n\r\n\r\n\r\nconst getCookie = (name) => {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n        const cookie = cookies[i].trim();\r\n        // Does this cookie string begin with the name we want?\r\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  }\r\n  const vertical = \"top\"\r\n  const horizontal = \"right\"\r\n    return (\r\n        <div>\r\n            {/* <ModelDialogue /> */}\r\n\r\n            <Snackbar anchorOrigin={{ vertical, horizontal }} open={open} autoHideDuration={4000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={alertseverity}>\r\n                {usercreatedmessage}\r\n                </Alert>\r\n            </Snackbar>\r\n            <Grid container style={{ marginBottom: '2%' }} spacing={2}>\r\n                <Grid item md={6} xs={12} sm={12}>\r\n\r\n                    <Card>\r\n                        <Box p={1}>\r\n                            <Typography>\r\n                                Create User\r\n                            </Typography>\r\n                        </Box>\r\n\r\n                        <Box p={2} className={calsses.root}>\r\n                            \r\n\r\n                                <TextField id=\"username\" label=\"Username\" variant=\"outlined\" \r\n                                InputLabelProps={{\r\n                                    shrink:uservalues.username?true:false\r\n                                }}\r\n                                \r\n                                value={uservalues.username}\r\n                                onChange={onhandleChange}\r\n                                fullWidth\r\n                                />\r\n\r\n\r\n                                <br></br>\r\n                                <TextField id=\"password\" label=\"Password\" variant=\"outlined\" \r\n                                InputLabelProps={{\r\n                                    shrink:uservalues.password?true:false\r\n                                }}\r\n                                \r\n                                value={uservalues.password}\r\n                                onChange={onhandleChange}\r\n                                fullWidth\r\n                                style={{marginTop:'30px'}}\r\n                                />\r\n\r\n\r\n                                <br></br>\r\n\r\n\r\n                                <FormControl fullWidth>\r\n                                <InputLabel  value={usertype}  id=\"usertype\">Type</InputLabel>\r\n\r\n                                <Select\r\n                                    labelId=\"usertype\"\r\n                                    id=\"usertype\"\r\n                                    variant=\"outlined\"\r\n                                    name=\"usertype\"\r\n                                    value={usertype}                                    \r\n                                    style={{marginTop:'30px'}}\r\n                                    onChange={onhandleChangeusertype}\r\n                                    \r\n\r\n                                >\r\n                                    <MenuItem value={\"\"}>Choose Type of User</MenuItem>\r\n                                    <MenuItem value={\"user\"}>User</MenuItem>\r\n                                    <MenuItem value={\"admin\"}>Admin</MenuItem>\r\n                                    <MenuItem value={\"superuser\"}>SuperUser</MenuItem>\r\n                                </Select>\r\n                                </FormControl>\r\n\r\n\r\n                                <br></br>\r\n                                <FormControl fullWidth>\r\n                                <InputLabel id=\"category\">Category</InputLabel>\r\n                                <Select\r\n                                    labelId=\"category\"\r\n                                    id=\"category\"\r\n                                    variant=\"outlined\"\r\n                                    name=\"category\"\r\n                                    style={{marginTop:'30px'}}\r\n                                    value={usercategory}\r\n                                    onChange={onhandleChangecategory}\r\n                                    \r\n                                    \r\n\r\n                                >\r\n                                    <MenuItem value={\"\"}>Choose Category of User</MenuItem>\r\n                                    <MenuItem value={\"producer\"}>Producer</MenuItem>\r\n                                    <MenuItem value={\"creator\"}>Creator</MenuItem>\r\n                                    \r\n                                </Select>\r\n                                </FormControl>\r\n                                <br></br>\r\n\r\n\r\n                                <Box pl={1} pt={2}>\r\n                                    <Button\r\n\r\n                                        type=\"button\" onClick={handleSubmit} color=\"primary\" variant=\"contained\">Create</Button>\r\n                                </Box>\r\n                            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </Box>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item md={6} xs={12} sm={12}>\r\n                    <Card style={{ height: '100%' }}>\r\n                        <Box p={1}>\r\n                            <Typography>\r\n                                Create Assign\r\n                            </Typography>\r\n                        </Box>\r\n                       \r\n                        <Box p={2} className={calsses.root}>\r\n                            \r\n\r\n\r\n\r\n                            <FormControl fullWidth>\r\n                            <InputLabel  id=\"userlist\">Users</InputLabel>\r\n\r\n                            <Select\r\n                                labelId=\"userlist\"\r\n                                id=\"userlist\"\r\n                                variant=\"outlined\"\r\n                                name=\"userlist\"\r\n                                value={userlist}                                    \r\n                                // style={{marginTop:'30px'}}\r\n                                onChange={(e) => setUserlist(e.target.value)}\r\n                                \r\n\r\n                            >\r\n                               <MenuItem value=\"\">Choose User</MenuItem>\r\n                                    {userslistdata.map((val,index) => {\r\n                                        return <MenuItem key={val.id} value={val.id}>{val.username}</MenuItem>\r\n                                    })}\r\n                            </Select>\r\n                            </FormControl>\r\n\r\n\r\n                            <br></br>\r\n                            <FormControl fullWidth  style={{marginTop:'30px'}}>\r\n                            <InputLabel shrink={true} id=\"productlist\">Products</InputLabel>\r\n                            <Select\r\n                                labelId=\"productlist\"\r\n                                id=\"productlist\"\r\n                                variant=\"outlined\"\r\n                                name=\"productlist\"\r\n                               \r\n                                value={productlistvalue}\r\n                                \r\n                                onChange={(e) => setProductlistvalue(e.target.value)}\r\n                                \r\n                                \r\n\r\n                            >\r\n                                <MenuItem value=\"\">Choose Product</MenuItem>\r\n                                    {productlistdata.map((val,index) => {\r\n                                         return <MenuItem key={val.id} value={val.id}>{val.title}</MenuItem>\r\n                                    })}\r\n                                \r\n                            </Select>\r\n                            </FormControl>\r\n                            <br></br>\r\n\r\n\r\n                            <Box pl={1} pt={2}>\r\n                                <Button\r\n\r\n                                    type=\"button\" onClick={handleSubmit} color=\"primary\" variant=\"contained\">Create</Button>\r\n                            </Box>\r\n                        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Box>\r\n                       \r\n                    </Card>\r\n\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item md={12} xs={12} sm={12}>\r\n                <FormControl fullWidth>\r\n                            <InputLabel  id=\"usergroup\">Groups</InputLabel>\r\n\r\n                            <Select\r\n                                labelId=\"usergroup\"\r\n                                id=\"usergroup\"\r\n                                variant=\"outlined\"\r\n                                name=\"usergroup\"\r\n                                value={usergroup}                                    \r\n                                // style={{marginTop:'30px'}}\r\n                                onChange={(e) => setUsergroup(e.target.value)}\r\n                                \r\n\r\n                            >\r\n                               <MenuItem value=\"\">Choose Group</MenuItem>\r\n                                    {usersgroupdata.map((val,index) => {\r\n                                        return <MenuItem key={val.id} value={val.id}>{val.groupname}({val.rule})</MenuItem>\r\n                                    })}\r\n                            </Select>\r\n                            </FormControl>\r\n                    <TableMaterialuser usergroup = {usergroup} userstatusupdate={userstatusUpdate} />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersList\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\SelectFieldCustom\\SelectFieldCustom.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\TableMaterial\\TableMaterialuser.js",["448","449","450","451"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport axios from 'axios';\r\nimport ConfirmModel from '../ModelDialogue/ConfirmModel'\r\nimport UserEditModel from '../ModelDialogue/UserEditModel'\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport * as authapi from '../../container/api/userapi'\r\n\r\n\r\n\r\n\r\n\r\nfunction createData(id,role, category, name, email, created) {\r\n  return { id,role, category, name, email, created };\r\n}\r\nconst url = \"http://127.0.0.1:8000/\"\r\n\r\nconst getCookie = (name) => {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\nconst config = {\r\n  headers: {\r\n      'content-type': 'multipart/form-data',          \r\n      'X-CSRFToken': getCookie('csrftoken')\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const rows = [\r\n//   createData(1,'Admin', 'Producer',faker.name.findName(),faker.internet.email(), faker.date.future().toLocaleString()),\r\n//   createData(2,'User','Creator',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(3,'User','Hybrid',faker.name.findName(),faker.internet.email(),  faker.date.future().toLocaleString()),\r\n//   createData(4,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(5,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(6,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(7,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n  \r\n// ];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'role', numeric: false, disablePadding: true, label: 'Role' },\r\n  { id: 'category', numeric: false, disablePadding: false, label: 'Category' },\r\n  { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n  { id: 'email', numeric: false, disablePadding: false, label: 'Email' },\r\n  { id: 'created', numeric: false, disablePadding: false, label: 'Created' },\r\n  { id: 'group', numeric: false, disablePadding: false, label: 'Group' },\r\n  \r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n \r\n\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            style={{fontWeight:800}}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          All Users\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <>\r\n        <Tooltip title=\"Edit\">\r\n          <IconButton aria-label=\"edit\" onClick={props.handleuserClickOpen}>\r\n            <CreateIcon />            \r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\" onClick={props.deleteUsersclick}>\r\n            <DeleteIcon />            \r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title=\"Assign\">\r\n          <IconButton aria-label=\"assign\" onClick={props.assignuserstogroupclick}>\r\n            <AssignmentIndIcon />            \r\n          </IconButton>\r\n        </Tooltip>\r\n        </>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\" onClick = {props.handleClickOpen}>\r\n            <FilterListIcon />            \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function TableMaterialuser(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [queryfromodel, setQueryfromodel] = React.useState('');\r\n\r\n      // backend operations\r\n\r\n    const [rows,setRows] = React.useState([])\r\n    \r\n    const [modelopen, setModelopen] = React.useState(false);\r\n    const [usereditmodelopen, setUsereditmodelopen] = React.useState(false);\r\n\r\n    const [userupdateform,setUserupdateform] = React.useState({\r\n      role:'user',\r\n      category:'producer'\r\n    })\r\n\r\n    \r\n\r\n    const handleChangeeditForm = (e) => {\r\n      setUserupdateform({\r\n          ...userupdateform,\r\n          [e.target.name]:e.target.value\r\n      })\r\n  };\r\n    \r\n\r\n      const handleClickOpen = () => {\r\n        setModelopen(true);\r\n      };\r\n\r\n      const handleClose = () => {\r\n        setModelopen(false);\r\n      };\r\n\r\n\r\n      const handleuserClickOpen = (e) => {\r\n        \r\n        console.log(selected[0]);\r\n        if (selected.length > 1){\r\n           return alert('select one only')\r\n        }\r\n        var updated = rows.filter((val) => +val.id === +(selected[0]));\r\n        setUsereditmodelopen(true);\r\n        updated.map(val=> {\r\n          return setUserupdateform({\r\n            ...userupdateform,\r\n            role:val.is_staff? val.is_superuser? 'superuser':'admin':'user',\r\n            category:val.content?val.content:'creator'\r\n        })\r\n        })\r\n       \r\n\r\n      };\r\n\r\n      const handleuserClose = () => {\r\n        setUsereditmodelopen(false);\r\n      };\r\n\r\n    const getallusers = async() => {\r\n      axios.get(url+'auth/admin/saveuser/',config).then(res=>{\r\n        if(!res.data.error){\r\n            \r\n          setRows(res.data.GETmethodData)\r\n          \r\n        }\r\n    }).catch(err=>{\r\n        \r\n        alert(err.message)\r\n        \r\n    })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n      getallusers()\r\n    }, [])\r\n\r\n    const handleSearchsubmit = async (e) => {\r\n\r\n        setModelopen(false)\r\n        axios.get(url+'auth/admin/getsingleuser/?username='+(queryfromodel),config).then(res=>{\r\n          if(!res.data.error){\r\n              \r\n            setRows(res.data.GETmethodData)\r\n            \r\n          }\r\n      }).catch(err=>{\r\n          \r\n          alert(err.message)\r\n          \r\n      })\r\n      \r\n\r\n    }\r\n\r\n    const handleUpdateSubmit = async (e) => {\r\n\r\n    //   setModelopen(false)\r\n    \r\n    const payload = {\r\n      id:selected[0],\r\n      role:userupdateform.role,\r\n      category:userupdateform.category\r\n    }\r\n    var response = await authapi.userupdate(payload)\r\n    setUsereditmodelopen(false)\r\n    if(response.status == 200){\r\n      const updatedusers = rows.filter((val,key) =>{\r\n        return [...rows, +val.id == +payload.id ? payload.role===\"superuser\"?(val.is_superuser=true,val.is_staff=true,val.is_active=true,val.content=payload.category):payload.role===\"admin\"?(val.is_superuser=false,val.is_staff=true,val.is_active=true,val.content=payload.category):(val.is_superuser=false,val.is_staff=false,val.is_active=true,val.content=payload.category):null]\r\n    })\r\n    setRows(updatedusers);\r\n      return props.userstatusupdate('success')\r\n    }else{\r\n      return props.userstatusupdate('error')\r\n    }\r\n    \r\n    \r\n\r\n  }\r\n\r\n\r\n    \r\n\r\n    const deleteUsers = async () => {\r\n\r\n      const form_data = new FormData();\r\n      form_data.append('itemlist',selected)\r\n      \r\n        axios.post(url+'auth/admin/deleteusers/',form_data,config).then(res=>{\r\n          if(!res.data.error){\r\n              \r\n            alert('Successfully Deleted')\r\n            \r\n          }\r\n      }).catch(err=>{\r\n          \r\n          alert(err.message)\r\n          \r\n      })\r\n\r\n    }\r\n\r\n    \r\n\r\n    const assignuserstoGroup = async () => {\r\n\r\n      const form_data = new FormData();\r\n      form_data.append('itemlist',selected)\r\n      form_data.append('groupname',props.usergroup)\r\n      \r\n      \r\n        axios.post(url+'admin/assignedtogroup/',form_data,config).then(res=>{\r\n          if(!res.data.error){\r\n              \r\n            alert('Successfully assigned')\r\n            \r\n          }\r\n      }).catch(err=>{\r\n          \r\n          alert(err.message)\r\n          \r\n      })\r\n\r\n    }\r\n\r\n\r\n    // backedn operations\r\n  \r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  \r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ConfirmModel setQueryfromodel = {setQueryfromodel} modelopen={modelopen} \r\n        handleSearchsubmit={handleSearchsubmit} handleClickOpen={handleClickOpen} \r\n        handleClose={handleClose} \r\n      />\r\n      <UserEditModel \r\n        usereditmodelopen={usereditmodelopen} \r\n        handleuserClose = {handleuserClose}\r\n        userupdateform={userupdateform}\r\n        handleChangeeditForm={handleChangeeditForm}\r\n        handleUpdateSubmit={handleUpdateSubmit}\r\n        \r\n      \r\n      />\r\n\r\n      \r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar \r\n        assignuserstogroupclick={assignuserstoGroup} \r\n        deleteUsersclick={deleteUsers} \r\n        numSelected={selected.length} \r\n        handleClickOpen={handleClickOpen}\r\n        handleuserClickOpen={handleuserClickOpen}\r\n        \r\n        />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                     selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.is_staff?row.is_superuser? 'Superuser':'Admin':'User'}\r\n                      </TableCell>\r\n                      {/* <TableCell align=\"left\">{row.role}</TableCell> */}\r\n                      <TableCell align=\"left\">{row.content?row.content:'-------'}</TableCell>\r\n                      <TableCell align=\"left\">{row.username}</TableCell>\r\n                      <TableCell align=\"left\">{row.email?row.email:'-----------'}</TableCell>\r\n                      <TableCell align=\"left\">{row.date_joined}</TableCell>\r\n                      <TableCell align=\"left\">{row.group?row.group:'---------'}</TableCell>\r\n                     \r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      {/* <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\explorecard\\ContentExplorecard.js",["452","453","454","455","456","457","458","459","460","461","462","463"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 'auto',\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function ContentExplorecard(props) {\r\n  const classes = useStyles();\r\n\r\n \r\n\r\n\r\n  const options = [\r\n    'in_stock',\r\n    'is_active',\r\n    \r\n\r\n  ];\r\n\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleIsactive =async (e,id,action) => {\r\n    setAnchorEl(null);\r\n    await props.handleIsactivemain(id,action)\r\n\r\n  };\r\n\r\n  // const handleInstock = (e,id) => {\r\n  //   setAnchorEl(null);\r\n  //   const response = cardapi.instock(id)\r\n  //   if(response.status===200){\r\n  //     alert('Success')\r\n  //   }else{\r\n  //     alert('Fail')\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar} src={`http://localhost:8000/media/${props.val.thumbnail}`}>\r\n            R\r\n          </Avatar>\r\n        }\r\n        // action={\r\n        //   <>\r\n        //     <IconButton aria-label=\"settings\" onClick={handleClick} >\r\n        //       <MoreVertIcon />\r\n        //     </IconButton>\r\n        //     <Menu\r\n        //       id=\"long-menu\"\r\n        //       anchorEl={anchorEl}\r\n        //       keepMounted\r\n        //       open={open}              \r\n        //       onClose={handleClose}\r\n        //       PaperProps={{\r\n        //         style: {\r\n        //           maxHeight: 48 * 4.5,\r\n        //           width: '20ch',\r\n        //         },\r\n        //       }}\r\n        //     >\r\n        //       {options.map((val,index) => {\r\n        //         return (\r\n        //         <MenuItem key={index} onClick={(e)=>handleIsactive(e,props.val.id,val)}>\r\n        //         {val == \"is_active\"?props.val[val]?'Deactivate':'Activate':props.val.in_stock?'Private':'Public'}\r\n        //       </MenuItem>\r\n        //       // <MenuItem key={index+1} onClick={(e) => handleInstock(e,props.val.id,'stock')}>\r\n        //       //     {props.val.in_stock?'Private':'Public'}\r\n        //       // </MenuItem>\r\n            \r\n            \r\n        //       )\r\n        //       })\r\n                \r\n               \r\n              \r\n        // }\r\n              \r\n        //     </Menu>\r\n        //   </>\r\n        // }\r\n        title={props.val.title}\r\n        subheader={props.val.created.toLocaleString()}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={`http://localhost:8000/media/${props.val.thumbnail}`}\r\n        title={props.val.title}\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {props.val.title}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton color={props.val.isliked?'primary':'secondary'} aria-label=\"add to favorites\" onClick={(e) => props.likefun(e,props.val.id)}>\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\" color={props.val.isfavored?'primary':'secondary'} onClick={(e) => props.interestfun(e,props.val.id)}>\r\n          <LocalMallIcon />\r\n        </IconButton>\r\n\r\n      </CardActions>\r\n\r\n    </Card>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ListSimple\\SimpleList.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\button\\FileUpload.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\actions\\ProductActions.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\sagas\\Product.js",["464","465","466","467","468","469","470"],"/**\r\n * Auth Sagas\r\n */\r\nimport { all, call, fork, put, takeEvery, takeLatest } from \"redux-saga/effects\";\r\nimport axios from 'axios';\r\nimport {\r\n  SAVE_PRODUCT,\r\n  SAVE_PRODUCT_SUCCESS,\r\n  SAVE_PRODUCT_FAIL,\r\n  UPDATE_PRODUCT,\r\n  UPDATE_PRODUCT_SUCCESS,\r\n  UPDATE_PRODUCT_FAIL,\r\n  CREATOR_SAVE_PRODUCT,\r\n  GET_REQUEST_DATA,\r\n  GET_PRODUCT_FAIL,\r\n  GET_PRODUCT_SUCCESS\r\n\r\n} from '../actions/types'\r\n\r\nimport {\r\n  saveProductSuccess,\r\n  saveProductFail\r\n} from '../actions'\r\nconst url = 'http://127.0.0.1:8000/'\r\nconst getCookie = (name) => {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nconst addProductwithApiRequest = async (payload) => {\r\n  let productData = payload.values;\r\n  let statuscode = ''\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data',\r\n      'X-CSRFToken': getCookie('csrftoken')\r\n    }\r\n  }\r\n\r\n  const form_data = new FormData();\r\n  form_data.append('title', productData.title)\r\n  form_data.append('castncrew', productData.castncrew)\r\n  form_data.append('category', productData.category)\r\n  form_data.append('description', productData.description)\r\n  form_data.append('price', productData.price)\r\n  form_data.append('rights', productData.rights)\r\n  form_data.append('thumbnail', productData.thumbnail)\r\n  form_data.append('videofile', productData.video)\r\n\r\n  await axios\r\n    .post(url + \"admin/saveproduct/\", form_data, config)\r\n    .then(resp => { statuscode = resp.data.status })\r\n    .catch(error => error);\r\n\r\n  return statuscode\r\n}\r\n\r\n\r\nconst saverequestProductwithApiRequest = async (payload) => {\r\n  let productData = payload.values;\r\n  let statuscode = ''\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data',\r\n      'X-CSRFToken': getCookie('csrftoken')\r\n    }\r\n  }\r\n\r\n  const form_data = new FormData();\r\n  form_data.append('title', productData.title)\r\n  form_data.append('category', productData.category)\r\n  form_data.append('authortype', productData.author_type)\r\n  form_data.append('in_stock', true)\r\n  form_data.append('is_active', true)\r\n  form_data.append('action', 'creatorrequest')\r\n\r\n\r\n  await axios\r\n    .post(url + \"admin/requestsaveproduct/\", form_data, config)\r\n    .then(resp => { statuscode = resp.data.status })\r\n    .catch(error => error);\r\n\r\n  return statuscode\r\n}\r\n\r\nfunction* addProductwithApi({ payload }) {\r\n\r\n\r\n\r\n  console.log(\"consoling here in product success saga: \", payload.history);\r\n  const saveProductResponse = yield call(\r\n    addProductwithApiRequest,\r\n    payload\r\n  );\r\n\r\n  if (saveProductResponse === 200) {\r\n    yield put({\r\n      type: SAVE_PRODUCT_SUCCESS,\r\n      payload: payload.values\r\n    });\r\n\r\n\r\n\r\n\r\n  } else {\r\n    yield put({\r\n      type: SAVE_PRODUCT_FAIL,\r\n      payload: payload.values\r\n    });\r\n  }\r\n}\r\n\r\n\r\nfunction* saverequestProductwithApi({ payload }) {\r\n\r\n\r\n\r\n  console.log(\"consoling creator request: \", payload.history);\r\n  const saveProductResponse = yield call(\r\n    saverequestProductwithApiRequest,\r\n    payload\r\n  );\r\n\r\n  if (saveProductResponse === 200) {\r\n    // yield put(saveProductSuccess(payload.values));\r\n    yield put({ type: SAVE_PRODUCT_SUCCESS })\r\n  } else {\r\n    // yield put(saveProductFail(payload.values));\r\n    yield put({ type: SAVE_PRODUCT_FAIL })\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Create Product\r\n*/\r\n\r\nexport function* add_Product() {\r\n  console.log(\"product saga called..\");\r\n  yield takeLatest(SAVE_PRODUCT, addProductwithApi);\r\n}\r\n\r\nexport function* request_creator() {\r\n  console.log(\"request saga called..\");\r\n  yield takeLatest(CREATOR_SAVE_PRODUCT, saverequestProductwithApi);\r\n\r\n}\r\n\r\n// Retrieve Products\r\n\r\nconst getProductswithApiRequest = async (payload) => {\r\n\r\n  let statuscode = ''\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data',\r\n      'X-CSRFToken': getCookie('csrftoken')\r\n    }\r\n  }\r\n\r\n\r\n  console.log('i got second payload', payload.pageNumber)\r\n  return await axios\r\n    .get(`${url}admin/getProductsall/?page=${payload.pageNumber}`, config)\r\n    .then(resp => resp)\r\n    .catch(error => error);\r\n\r\n\r\n}\r\n\r\nfunction* getProductswithApi({ payload }) {\r\n\r\n  console.log('igot payload', payload)\r\n  const saveProductResponse = yield call(\r\n    getProductswithApiRequest,\r\n    payload.pageNumber\r\n  );\r\n\r\n  if (saveProductResponse.data.status === 200) {\r\n    // yield put(saveProductSuccess(payload.values));\r\n    yield put({ type: GET_PRODUCT_SUCCESS, payload: saveProductResponse.data.obs })\r\n  } else {\r\n    // yield put(saveProductFail(payload.values));\r\n    yield put({ type: GET_PRODUCT_FAIL })\r\n  }\r\n}\r\n\r\nexport function* get_all_Products() {\r\n  console.log(\"Get product saga called..\");\r\n  yield takeLatest(GET_REQUEST_DATA, getProductswithApi);\r\n}\r\n\r\n\r\n/**\r\n * Product Root Saga\r\n */\r\nexport default function* rootSaga() {\r\n  console.log(\"productooo\");\r\n  yield all([\r\n\r\n    fork(add_Product),\r\n    fork(request_creator),\r\n    fork(get_all_Products)\r\n  ]);\r\n}\r\n\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\reducers\\ProductReducer.js",["471","472","473","474","475"],"import {\r\n    SAVE_PRODUCT,\r\n    SAVE_PRODUCT_SUCCESS,\r\n    SAVE_PRODUCT_FAIL,\r\n    UPDATE_PRODUCT,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_FAIL,\r\n    GET_PRODUCT_SUCCESS\r\n\r\n} from '../actions/types'\r\n\r\nimport {\r\n    saveProductSuccess,\r\n    \r\n} from '../actions'\r\n\r\n/**\r\n * initial auth user\r\n */\r\nconst INIT_STATE = {\r\n    productissubmitting:false,\r\n    isproductsaved: null,\r\n    products:[]\r\n\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state = INIT_STATE, action) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case SAVE_PRODUCT_SUCCESS:\r\n            return { ...state, \r\n                isproductsaved: true \r\n            };   \r\n        case SAVE_PRODUCT_FAIL:\r\n            return { ...state,\r\n                isproductsaved: false \r\n            };     \r\n        case GET_PRODUCT_SUCCESS:\r\n            return { ...state,\r\n                    products:action.payload\r\n            }\r\n\r\n        default:\r\n            return { ...state };\r\n    }\r\n};","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\button\\Fileuploadbutton.js",["476","477"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nexport default function Fileuploadbutton() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <input\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id=\"contained-button-file\"\r\n        multiple\r\n        type=\"file\"\r\n      />\r\n      <label htmlFor=\"contained-button-file\">\r\n        <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n          Upload\r\n        </Button>\r\n      </label>\r\n     \r\n    </div>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\useContentExplore.js",["478","479","480","481","482","483"],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentExploreAdmin.js",["484","485","486","487","488","489","490","491","492"],"import { Box, Grid } from '@material-ui/core'\r\nimport React,{useState,useEffect, useCallback} from 'react'\r\nimport ContentExplorecardAdmin from '../components/explorecard/ContentExplorecardAdmin'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport * as apirequest from './api/api';\r\nimport * as cardapi from './api/cardactionsapi';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst ContentExploreAdmin = () => {    \r\n    \r\n    const response = useSelector((state) => state.productSave);\r\n    const [allproducts,setAllproducts] = useState([])    \r\n    const [pageNumber, setPageNumber] = useState(1)\r\n    const [open,setOpen] =  React.useState(false)\r\n    const [alertseverity,setAlertseverity] =  React.useState('success')\r\n    const [productmessage,setProductmessage] =  React.useState('')\r\n\r\n    useEffect(() => {\r\n        const setprod = async() =>{\r\n\r\n            const allprod = await apirequest.getallproducts({'pageNumber':pageNumber})\r\n            \r\n            setAllproducts(allprod)\r\n            console.log(allprod)\r\n\r\n        }\r\n        setprod()\r\n        \r\n\r\n        \r\n    }, [pageNumber])\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n      }\r\n\r\n\r\n    const handleIsactivemain =async (id,action) => {\r\n        \r\n        let response = \"\"\r\n        if(action == \"is_active\"){\r\n          response = await cardapi.isactive(id)\r\n          const updatedproductsactive = allproducts.filter((val,key) =>{\r\n            return [...allproducts, +val.id == +id ? val.is_active= !val.is_active:null]\r\n        })\r\n        setAllproducts(updatedproductsactive);\r\n        }else if (action == \"in_stock\"){\r\n          response = await cardapi.instock(id)\r\n          const updatedproductstock = allproducts.filter((val,key) =>{\r\n            return [...allproducts, +val.id == +id ? val.in_stock= !val.in_stock:null]\r\n        })\r\n        setAllproducts(updatedproductstock);\r\n        }\r\n        \r\n        if(+response.status===200){\r\n          \r\n            setProductmessage(\"Successfully Changed\")\r\n            setOpen(true);\r\n            setAlertseverity('success')\r\n        }else if(+response.status===400){\r\n            setProductmessage(\"Successfully Changed\")\r\n            setOpen(true);\r\n            setAlertseverity('error')\r\n        }\r\n        else{\r\n          \r\n          setProductmessage(\"Something is went wrong\")\r\n            setOpen(true);\r\n            setAlertseverity('error')\r\n        }\r\n    \r\n      };\r\n\r\n    // useEffect(() => {\r\n    //     setAllproducts(response.products)\r\n    // }, [])\r\n    \r\n    const handlePagechange = (event,number) => {\r\n            alert(number)\r\n    }\r\n\r\n    // SnackBar\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setOpen(false);\r\n      };\r\n\r\n\r\n    const addlikes = async(e,id) => {\r\n        const response = await apirequest.addlike(id)\r\n        if (+response.status === 200){\r\n            const updatedproducts = allproducts.filter((val,key) =>{\r\n                return [...allproducts, +val.id == +id ? val.isliked= !val.isliked:null]\r\n            })\r\n            setAllproducts(updatedproducts);\r\n            alert(response.message)\r\n\r\n        }else{\r\n            alert('something is went wrong')\r\n        }\r\n        \r\n    }\r\n    const addfavorites = async(e,id) => {\r\n        const response = await apirequest.addinterest(id)\r\n\r\n        if (+response.status === 200){\r\n            const updatedproducts = allproducts.filter((val,key) =>{\r\n                return [...allproducts, +val.id == +id ? val.isfavored= !val.isfavored:null]\r\n            })\r\n            setAllproducts(updatedproducts);\r\n            alert(response.message)\r\n\r\n        }else{\r\n            alert('something is went wrong')\r\n        }\r\n        \r\n        \r\n    }\r\n    const vertical = \"top\"\r\n    const horizontal = \"right\"\r\n    return (\r\n       <>\r\n       <Snackbar anchorOrigin={{ vertical, horizontal }} open={open} autoHideDuration={4000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={alertseverity}>\r\n                {productmessage}\r\n                </Alert>\r\n            </Snackbar>\r\n            <Grid container spacing={2}>\r\n            {allproducts.map((val,index) => {\r\n                return <Grid item md={4} sm={12} xs={12} lg={4} key={index}><ContentExplorecardAdmin val={val} likefun = {addlikes} interestfun = {addfavorites} \r\n                handleIsactivemain = {handleIsactivemain}\r\n                /></Grid>\r\n            })}\r\n            </Grid>\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" mt={5} mb={5}>\r\n                <Pagination onChange={handlePagechange} count={10} color=\"primary\" />\r\n            </Box>\r\n            \r\n</>\r\n           \r\n        \r\n    )\r\n}\r\n\r\nexport default ContentExploreAdmin\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\ConfirmModel.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\Profile.js",["493"],"import { Box, Button, Card, CardContent, CardHeader, Divider, Grid, TextField, ThemeProvider, Typography } from '@material-ui/core'\r\n\r\nimport React, { Component } from 'react'\r\n\r\n  \r\nexport class Profile extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            \r\n                <Grid container spacing={2}>\r\n                    <Grid item md={8}>\r\n                \r\n                <Card>\r\n                    <CardHeader title=\"Profile\">\r\n                        \r\n                    </CardHeader>\r\n                    <CardContent>\r\n                         \r\n                        \r\n                        <form noValidate autoComplete=\"off\">\r\n                           <Box display=\"flex\" p={2} pl={4} flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                            <TextField style={{margin:3}} id=\"filled-basic\" label=\"FirstName\" variant=\"outlined\" fullWidth />\r\n                            <TextField style={{margin:3}} id=\"filled-basic\" label=\"LastName\" variant=\"outlined\" fullWidth />\r\n                            </Box>\r\n                            <Box p={2} pl={4} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                            <TextField style={{margin:3}} id=\"filled-basic\" label=\"Email\" variant=\"outlined\" fullWidth />\r\n                            <TextField style={{margin:3}} id=\"filled-basic\" label=\"Phone\" variant=\"outlined\" fullWidth />\r\n                            </Box>\r\n                            </form>\r\n                        <Box pt={4}>\r\n                            <Divider />\r\n                           \r\n                            </Box>\r\n\r\n                            <Box pt={2}>\r\n                                <Typography component='h3' variant='body2'>\r\n                                    Contact Information\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box>\r\n                            <form noValidate autoComplete=\"off\">\r\n                           <Box p={4} alignItems=\"center\">\r\n                            <TextField id=\"filled-basic\" label=\"Address\" variant=\"outlined\" fullWidth />\r\n                            <TextField id=\"filled-basic\" label=\"PostalCode\" variant=\"outlined\"  fullWidth style={{marginTop:40}} />\r\n                            </Box>\r\n                            <Box p={4} pt={1} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"flex-start\">\r\n                            <TextField style={{margin:3}} id=\"filled-basic\" label=\"City\" variant=\"outlined\" fullWidth />\r\n                            <TextField style={{margin:3}} id=\"filled-basic\" label=\"Country\" variant=\"outlined\" fullWidth />                            \r\n                            </Box>\r\n                            \r\n                            <Box pl={4}>\r\n                                <Button color=\"primary\" variant=\"contained\">Submit</Button>\r\n                            </Box>\r\n                            </form>\r\n                            </Box>\r\n                        \r\n                    </CardContent>\r\n\r\n                </Card>\r\n                </Grid>\r\n                <Grid item md={4} xs={12} sm={12}>\r\n                \r\n                <Card>\r\n                    <CardHeader subheader={\r\n                  <Box display=\"flex\" justifyContent=\"space-between\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                      \r\n                    >\r\n                      Connect\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                      \r\n                    >\r\n                      Message\r\n                    </Button>\r\n                  </Box>\r\n                }>\r\n                        \r\n                    </CardHeader>\r\n                    <CardContent>\r\n                       <Box display=\"flex\" justifyContent=\"center\" style={{position:'relative'}}>\r\n                           <Box component=\"img\" alt=\"profile\" src={require('../assets/img/user-4.jpg').default} style={{borderRadius:'50%',height:'150px',width:'150px'}} />\r\n                       </Box>\r\n                       <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" p={3}>\r\n                           <Typography component='p' variant='body2' >Joined On:  <br></br>{JSON.stringify(Date())}</Typography>\r\n                           <Typography component='p' variant='body2' >Category:  Producer</Typography>\r\n                           \r\n                       </Box>\r\n                       \r\n                    </CardContent>\r\n\r\n                </Card>\r\n                </Grid>\r\n\r\n                </Grid>\r\n                \r\n                \r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\assets\\theme\\box-shadow.js",[],["494","495"],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\assets\\theme\\views\\admin\\profile.js",[],["496","497"],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\assets\\theme\\colors.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\assets\\theme\\hex-to-rgb.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\assets\\theme\\theme.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\UserGroups.js",["498","499"],"import { Button, Card, CardContent, CardHeader, Grid, TextField, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport TableMaterialgroup from '../components/TableMaterial/TableMaterialgroup'\r\nimport axiosInstance from '../axiosinstance'\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '../components/alertcustom/alertcustom'\r\nconst UserGroups = () => {\r\n\r\n    const [groupname,setGroupname] = React.useState('')\r\n    const [rule,setRule] = React.useState('')\r\n\r\n    const [open,setOpen] =  React.useState(false)\r\n    const [usercreatedmessage,setUsercreatedmessage] =  React.useState('')\r\n    const [alertseverity,setAlertseverity] =  React.useState('success')\r\n\r\n\r\n    // SnackBar\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setOpen(false);\r\n      };\r\n\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      const body = new FormData();\r\n      body.append('groupname',groupname)\r\n      body.append('rule',rule)\r\n      \r\n      await axiosInstance.post('admin/creategroup/',body).then(res=> {\r\n         \r\n\r\n          if(res.data.status==200){\r\n            setUsercreatedmessage(\"Group created successfully\")\r\n            setOpen(true)\r\n            setAlertseverity('success')\r\n           \r\n           \r\n        }else{\r\n            setUsercreatedmessage(\"Group Creation is Failed\")\r\n          setOpen(false);\r\n          setAlertseverity('error')\r\n\r\n        }\r\n      }).catch(err=> {\r\n          console.log(err.message)\r\n          setUsercreatedmessage(\"Group Creation is Failed\")\r\n          setOpen(false);\r\n          setAlertseverity('error')\r\n\r\n      })\r\n      \r\n\r\n\r\n    }\r\n    const vertical = \"top\"\r\n    const horizontal = \"right\"\r\n    return (\r\n        <div>\r\n            <Snackbar anchorOrigin={{ vertical, horizontal }} open={open} autoHideDuration={4000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={alertseverity}>\r\n                {usercreatedmessage}\r\n                </Alert>\r\n            </Snackbar>\r\n            <Grid container spacing={2}>\r\n                <Grid item md={12}>\r\n                    <Card>\r\n                        <CardHeader title=\"Groups\">\r\n\r\n                        </CardHeader>\r\n                        <CardContent>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item md={12} xs={12} sm={12}>\r\n                                    <TextField\r\n                                        id=\"group\"\r\n                                        label=\"GroupName\"\r\n                                        variant=\"outlined\"\r\n                                        value={groupname}\r\n                                        onChange = {(e) => setGroupname(e.target.value)}                                        \r\n\r\n                                    />\r\n                                    \r\n                                </Grid>\r\n                                <Grid item md={12} xs={12} sm={12}>\r\n                                <TextField\r\n                                        id=\"rule\"\r\n                                        label=\"Rule\"\r\n                                        variant=\"outlined\"\r\n                                        value={rule}\r\n                                        onChange = {(e) => setRule(e.target.value)}                                        \r\n\r\n                                    />\r\n\r\n                                </Grid>\r\n\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Create Group</Button>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                </Grid>\r\n\r\n\r\n                <Grid item md={12}>\r\n                    <Card>\r\n                        <CardHeader title=\"Groups\">\r\n\r\n                        </CardHeader>\r\n                        <CardContent>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item md={12} xs={12} sm={12}>\r\n\r\n                                <TableMaterialgroup />\r\n\r\n\r\n                                    \r\n                                </Grid>\r\n\r\n                               \r\n\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n\r\n            </Grid>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserGroups\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\TableMaterial\\TableMaterialgroup.js",["500","501","502","503","504","505"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport faker from 'faker';\r\nimport axios from 'axios';\r\nimport ConfirmModel from '../ModelDialogue/ConfirmModel'\r\nimport { Button } from '@material-ui/core';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nfunction createData(id,groupname, rule, users) {\r\n  return { id,groupname, rule, users };\r\n}\r\nconst url = \"http://127.0.0.1:8000/\"\r\n\r\nconst getCookie = (name) => {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\nconst config = {\r\n  headers: {\r\n      'content-type': 'multipart/form-data',          \r\n      'X-CSRFToken': getCookie('csrftoken')\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const rows = [\r\n//   createData(1,'Admin', 'Producer',faker.name.findName(),faker.internet.email(), faker.date.future().toLocaleString()),\r\n//   createData(2,'User','Creator',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(3,'User','Hybrid',faker.name.findName(),faker.internet.email(),  faker.date.future().toLocaleString()),\r\n//   createData(4,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(5,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(6,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n//   createData(7,'Admin','Hybrid',faker.name.findName(),faker.internet.email(),   faker.date.future().toLocaleString()),\r\n  \r\n// ];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'groupname', numeric: false, disablePadding: true, label: 'GroupName' },\r\n  { id: 'rule', numeric: false, disablePadding: false, label: 'Rule' },\r\n  { id: 'users', numeric: true, disablePadding: false, label: 'TotalUsers' },\r\n  \r\n  \r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n \r\n\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            style={{fontWeight:800}}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          All Users\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <>\r\n        <Tooltip title=\"Edit\">\r\n          <IconButton aria-label=\"edit\">\r\n            <CreateIcon />            \r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\" onClick={props.deleteUsersclick}>\r\n            <DeleteIcon />            \r\n          </IconButton>\r\n        </Tooltip>\r\n        </>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\" onClick = {props.handleClickOpen}>\r\n            <FilterListIcon />            \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function TableMaterialgroup() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [queryfromodel, setQueryfromodel] = React.useState('');\r\n\r\n      // backend operations\r\n\r\n    const [rows,setRows] = React.useState([])\r\n    \r\n    const [modelopen, setModelopen] = React.useState(false);\r\n\r\n      const handleClickOpen = () => {\r\n        setModelopen(true);\r\n      };\r\n\r\n      const handleClose = () => {\r\n        setModelopen(false);\r\n      };\r\n\r\n    const getallgroups = async() => {\r\n      axios.get(url+'admin/getallgroups/',config).then(res=>{\r\n        if(!res.data.error){\r\n            \r\n          setRows(res.data.groups)\r\n          \r\n        }\r\n    }).catch(err=>{\r\n        \r\n        alert(err.message)\r\n        \r\n    })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n      getallgroups()\r\n    }, [])\r\n\r\n    const handleSearchsubmit = async (e) => {\r\n\r\n        setModelopen(false)\r\n        axios.get(url+'auth/admin/getsingleuser/?username='+(queryfromodel),config).then(res=>{\r\n          if(!res.data.error){\r\n              \r\n            setRows(res.data.GETmethodData)\r\n            \r\n          }\r\n      }).catch(err=>{\r\n          \r\n          alert(err.message)\r\n          \r\n      })\r\n      \r\n\r\n    }\r\n\r\n    const deleteUsers = async () => {\r\n\r\n      const form_data = new FormData();\r\n      form_data.append('itemlist',selected)\r\n      \r\n        axios.post(url+'auth/admin/deleteusers/',form_data,config).then(res=>{\r\n          if(!res.data.error){\r\n              \r\n            alert('Successfully Deleted')\r\n            \r\n          }\r\n      }).catch(err=>{\r\n          \r\n          alert(err.message)\r\n          \r\n      })\r\n\r\n    }\r\n\r\n\r\n    // backedn operations\r\n  \r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  \r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ConfirmModel setQueryfromodel = {setQueryfromodel} modelopen={modelopen} handleSearchsubmit={handleSearchsubmit} handleClickOpen={handleClickOpen} handleClose={handleClose} />\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar deleteUsersclick={deleteUsers} numSelected={selected.length} handleClickOpen={handleClickOpen} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                     selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.groupname}\r\n                      </TableCell>\r\n                      {/* <TableCell align=\"left\">{row.role}</TableCell> */}\r\n                      <TableCell align=\"left\">{row.rule?row.rule:'-------'}</TableCell>\r\n                      <TableCell align=\"left\">{row.users?row.users:\"--------\"}</TableCell>\r\n                      \r\n                     \r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      {/* <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\axiosinstance.js",["506"],"import axios from 'axios';\r\nconst baseURL = \"http://127.0.0.1:8000/\";\r\n\r\nconst getCookie = (name) => {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n        const cookie = cookies[i].trim();\r\n        // Does this cookie string begin with the name we want?\r\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  }\r\nconst config = {\r\n    headers: {\r\n        'content-type': 'multipart/form-data',          \r\n        'X-CSRFToken': getCookie('csrftoken')\r\n    }\r\n  }\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL:baseURL,\r\n    // timeout: 5000,\r\n    headers: {\r\n        'content-type': 'multipart/form-data',          \r\n        'X-CSRFToken': getCookie('csrftoken')\r\n    }\r\n    // cancelToken: new axios.CancelToken(c => cancel = c)\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n    (response) => {\r\n        return response;\r\n    })\r\n\r\nexport default axiosInstance;","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\alertcustom\\alertcustom.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\api\\api.js",["507","508","509"],"import axios from 'axios';\r\n\r\nconst url = 'http://127.0.0.1:8000/'\r\nconst getCookie = (name) => {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n        const cookie = cookies[i].trim();\r\n        // Does this cookie string begin with the name we want?\r\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  }\r\n\r\n\r\n export const addlike = async (payload) =>{\r\n         \r\n    let statuscode = ''\r\n    const config = {\r\n      headers: {\r\n          'content-type': 'multipart/form-data',          \r\n          'X-CSRFToken': getCookie('csrftoken')\r\n      }\r\n    }\r\n  \r\n    const form_data = new FormData();\r\n    form_data.append('id', payload)\r\n    \r\n \r\n    await axios\r\n      .post(url+\"admin/addliketoproduct/\", form_data,config)\r\n      .then(resp => {statuscode=resp.data})\r\n      .catch(error => error);\r\n\r\n      return statuscode\r\n      }\r\n\r\n\r\nexport const addinterest = async (payload) =>{\r\n    let statuscode = ''\r\n    const config = {\r\n      headers: {\r\n          'content-type': 'multipart/form-data',          \r\n          'X-CSRFToken': getCookie('csrftoken')\r\n      }\r\n    }\r\n  \r\n    const form_data = new FormData();\r\n    form_data.append('id', payload)\r\n    \r\n \r\n    await axios\r\n      .post(url+\"admin/addboughtproduct/\", form_data,config)\r\n      .then(resp => {statuscode=resp.data})\r\n      .catch(error => error);\r\n\r\n      return statuscode\r\n    }\r\n\r\n    \r\nexport const getallproducts = async (payload) =>{\r\n  \r\n        let statuscode = ''\r\n        const config = {\r\n          headers: {\r\n              'content-type': 'multipart/form-data',          \r\n              'X-CSRFToken': getCookie('csrftoken')\r\n          }\r\n        }\r\n      \r\n        \r\n        console.log('pagenumber',payload.pageNumber)\r\n        return await axios\r\n          .get(`${url}admin/getProductsall/?page=${payload.pageNumber}`,config)\r\n          .then(resp => resp.data.obs)\r\n          .catch(error => error);\r\n      \r\n          \r\n          }\r\n\r\n\r\nexport const getalllikedproducts = async (payload) =>{\r\n\r\n        let statuscode = ''\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',          \r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n\r\n        console.log('pagenumber',payload.pageNumber)\r\n        return await axios\r\n            .get(`${url}admin/getproductsallliked/?page=${payload.pageNumber}`,config)\r\n            .then(resp => resp.data.obs)\r\n            .catch(error => error);\r\n\r\n    \r\n    }\r\n\r\n\r\n    export const getallbaggedproducts = async (payload) =>{\r\n\r\n        let statuscode = ''\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',          \r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n\r\n        console.log('pagenumber',payload.pageNumber)\r\n        return await axios\r\n            .get(`${url}admin/getproductsallbagged/?page=${payload.pageNumber}`,config)\r\n            .then(resp => resp.data.obs)\r\n            .catch(error => error);\r\n\r\n    \r\n    }","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentExploreAdminBagged.js",["510"],"import { Box, Grid } from '@material-ui/core'\r\nimport React,{useState,useEffect} from 'react'\r\nimport ContentExplorecard from '../components/explorecard/ContentExplorecardBagged'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport * as apirequest from './api/api';\r\n\r\n// import { useSelector } from 'react-redux';\r\n\r\n\r\nconst ContentExploreAdminBagged = () => {    \r\n    \r\n    // const response = useSelector((state) => state.productSave);\r\n    const [allproducts,setAllproducts] = useState([])    \r\n    const [pageNumber, setPageNumber] = useState(1)\r\n\r\n    useEffect(() => {\r\n        const setprod = async() =>{\r\n\r\n            const allprod = await apirequest.getallbaggedproducts({'pageNumber':pageNumber})\r\n            \r\n            setAllproducts(allprod)\r\n\r\n        }\r\n        setprod()\r\n        \r\n\r\n        \r\n    }, [pageNumber])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     setAllproducts(response.products)\r\n    // }, [])\r\n    \r\n\r\n    return (\r\n       <>\r\n            <Grid container spacing={2}>\r\n            {allproducts.map((val,index) => {\r\n                return <Grid item md={4} sm={12} xs={12} lg={4} key={index}><ContentExplorecard val={val} /></Grid>\r\n            })}\r\n            </Grid>\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" mt={5} mb={5}>\r\n                <Pagination count={10} color=\"primary\" />\r\n            </Box>\r\n            \r\n</>\r\n           \r\n        \r\n    )\r\n}\r\n\r\nexport default ContentExploreAdminBagged\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\ContentExploreFavorite.js",["511"],"import { Box, Grid } from '@material-ui/core'\r\nimport React,{useState,useEffect} from 'react'\r\nimport ContentExplorecard from '../components/explorecard/ContentExplorecardFavorite'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport * as apirequest from './api/api';\r\n\r\n// import { useSelector } from 'react-redux';\r\n\r\n\r\nconst ContentExploreFavorite = () => {    \r\n    \r\n    // const response = useSelector((state) => state.productSave);\r\n    const [allproducts,setAllproducts] = useState([])    \r\n    const [pageNumber, setPageNumber] = useState(1)\r\n\r\n    useEffect(() => {\r\n        const setprod = async() =>{\r\n\r\n            const allprod = await apirequest.getalllikedproducts({'pageNumber':pageNumber})\r\n            \r\n            setAllproducts(allprod)\r\n\r\n        }\r\n        setprod()\r\n        \r\n\r\n        \r\n    }, [pageNumber])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     setAllproducts(response.products)\r\n    // }, [])\r\n    \r\n\r\n    return (\r\n       <>\r\n            <Grid container spacing={2}>\r\n            {allproducts.map((val,index) => {\r\n                return <Grid item md={4} sm={12} xs={12} lg={4} key={index}><ContentExplorecard val={val} /></Grid>\r\n            })}\r\n            </Grid>\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" mt={5} mb={5}>\r\n                <Pagination count={10} color=\"primary\" />\r\n            </Box>\r\n            \r\n</>\r\n           \r\n        \r\n    )\r\n}\r\n\r\nexport default ContentExploreFavorite\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\api\\cardactionsapi.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\explorecard\\ContentExplorecardAdmin.js",["512","513","514","515","516"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 'auto',\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function ContentExplorecardAdmin(props) {\r\n  const classes = useStyles();\r\n\r\n \r\n\r\n\r\n  const options = [\r\n    'in_stock',\r\n    'is_active',\r\n    \r\n\r\n  ];\r\n\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleIsactive =async (e,id,action) => {\r\n    setAnchorEl(null);\r\n    await props.handleIsactivemain(id,action)\r\n\r\n  };\r\n\r\n  // const handleInstock = (e,id) => {\r\n  //   setAnchorEl(null);\r\n  //   const response = cardapi.instock(id)\r\n  //   if(response.status===200){\r\n  //     alert('Success')\r\n  //   }else{\r\n  //     alert('Fail')\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar} src={`http://localhost:8000/media/${props.val.thumbnail}`}>\r\n            R\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <>\r\n            <IconButton aria-label=\"settings\" onClick={handleClick} >\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"long-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={open}              \r\n              onClose={handleClose}\r\n              PaperProps={{\r\n                style: {\r\n                  maxHeight: 48 * 4.5,\r\n                  width: '20ch',\r\n                },\r\n              }}\r\n            >\r\n              {options.map((val,index) => {\r\n                return (\r\n                <MenuItem key={index} onClick={(e)=>handleIsactive(e,props.val.id,val)}>\r\n                {val == \"is_active\"?props.val[val]?'Deactivate':'Activate':props.val.in_stock?'Private':'Public'}\r\n              </MenuItem>\r\n              // <MenuItem key={index+1} onClick={(e) => handleInstock(e,props.val.id,'stock')}>\r\n              //     {props.val.in_stock?'Private':'Public'}\r\n              // </MenuItem>\r\n            \r\n            \r\n              )\r\n              })\r\n                \r\n               \r\n              \r\n        }\r\n              \r\n            </Menu>\r\n          </>\r\n        }\r\n        title={props.val.title}\r\n        subheader={props.val.created.toLocaleString()}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={`http://localhost:8000/media/${props.val.thumbnail}`}\r\n        title={props.val.title}\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {props.val.title}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton color={props.val.isliked?'primary':'secondary'} aria-label=\"add to favorites\" onClick={(e) => props.likefun(e,props.val.id)}>\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\" color={props.val.isfavored?'primary':'secondary'} onClick={(e) => props.interestfun(e,props.val.id)}>\r\n          <LocalMallIcon />\r\n        </IconButton>\r\n\r\n      </CardActions>\r\n\r\n    </Card>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\explorecard\\ContentExplorecardFavorite.js",["517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 'auto',\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function ContentExplorecard(props) {\r\n  const classes = useStyles();\r\n\r\n \r\n\r\n\r\n  const options = [\r\n    'in_stock',\r\n    'is_active',\r\n    \r\n\r\n  ];\r\n\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleIsactive =async (e,id,action) => {\r\n    setAnchorEl(null);\r\n    await props.handleIsactivemain(id,action)\r\n\r\n  };\r\n\r\n  // const handleInstock = (e,id) => {\r\n  //   setAnchorEl(null);\r\n  //   const response = cardapi.instock(id)\r\n  //   if(response.status===200){\r\n  //     alert('Success')\r\n  //   }else{\r\n  //     alert('Fail')\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar} src={`http://localhost:8000/media/${props.val.thumbnail}`}>\r\n            R\r\n          </Avatar>\r\n        }\r\n        // action={\r\n        //   <>\r\n        //     <IconButton aria-label=\"settings\" onClick={handleClick} >\r\n        //       <MoreVertIcon />\r\n        //     </IconButton>\r\n        //     <Menu\r\n        //       id=\"long-menu\"\r\n        //       anchorEl={anchorEl}\r\n        //       keepMounted\r\n        //       open={open}              \r\n        //       onClose={handleClose}\r\n        //       PaperProps={{\r\n        //         style: {\r\n        //           maxHeight: 48 * 4.5,\r\n        //           width: '20ch',\r\n        //         },\r\n        //       }}\r\n        //     >\r\n        //       {options.map((val,index) => {\r\n        //         return (\r\n        //         <MenuItem key={index} onClick={(e)=>handleIsactive(e,props.val.id,val)}>\r\n        //         {val == \"is_active\"?props.val[val]?'Deactivate':'Activate':props.val.in_stock?'Private':'Public'}\r\n        //       </MenuItem>\r\n        //       // <MenuItem key={index+1} onClick={(e) => handleInstock(e,props.val.id,'stock')}>\r\n        //       //     {props.val.in_stock?'Private':'Public'}\r\n        //       // </MenuItem>\r\n            \r\n            \r\n        //       )\r\n        //       })\r\n                \r\n               \r\n              \r\n        // }\r\n              \r\n        //     </Menu>\r\n        //   </>\r\n        // }\r\n        title={props.val.title}\r\n        subheader={props.val.created.toLocaleString()}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={`http://localhost:8000/media/${props.val.thumbnail}`}\r\n        title={props.val.title}\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {props.val.title}\r\n        </Typography>\r\n      </CardContent>\r\n      {/* <CardActions disableSpacing>\r\n        <IconButton color={props.val.isliked?'primary':'secondary'} aria-label=\"add to favorites\" onClick={(e) => props.likefun(e,props.val.id)}>\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\" color={props.val.isfavored?'primary':'secondary'} onClick={(e) => props.interestfun(e,props.val.id)}>\r\n          <LocalMallIcon />\r\n        </IconButton>\r\n\r\n      </CardActions> */}\r\n\r\n    </Card>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\explorecard\\ContentExplorecardBagged.js",["533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 'auto',\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function ContentExplorecard(props) {\r\n  const classes = useStyles();\r\n\r\n \r\n\r\n\r\n  const options = [\r\n    'in_stock',\r\n    'is_active',\r\n    \r\n\r\n  ];\r\n\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleIsactive =async (e,id,action) => {\r\n    setAnchorEl(null);\r\n    await props.handleIsactivemain(id,action)\r\n\r\n  };\r\n\r\n  // const handleInstock = (e,id) => {\r\n  //   setAnchorEl(null);\r\n  //   const response = cardapi.instock(id)\r\n  //   if(response.status===200){\r\n  //     alert('Success')\r\n  //   }else{\r\n  //     alert('Fail')\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar} src={`http://localhost:8000/media/${props.val.thumbnail}`}>\r\n            R\r\n          </Avatar>\r\n        }\r\n        // action={\r\n        //   <>\r\n        //     <IconButton aria-label=\"settings\" onClick={handleClick} >\r\n        //       <MoreVertIcon />\r\n        //     </IconButton>\r\n        //     <Menu\r\n        //       id=\"long-menu\"\r\n        //       anchorEl={anchorEl}\r\n        //       keepMounted\r\n        //       open={open}              \r\n        //       onClose={handleClose}\r\n        //       PaperProps={{\r\n        //         style: {\r\n        //           maxHeight: 48 * 4.5,\r\n        //           width: '20ch',\r\n        //         },\r\n        //       }}\r\n        //     >\r\n        //       {options.map((val,index) => {\r\n        //         return (\r\n        //         <MenuItem key={index} onClick={(e)=>handleIsactive(e,props.val.id,val)}>\r\n        //         {val == \"is_active\"?props.val[val]?'Deactivate':'Activate':props.val.in_stock?'Private':'Public'}\r\n        //       </MenuItem>\r\n        //       // <MenuItem key={index+1} onClick={(e) => handleInstock(e,props.val.id,'stock')}>\r\n        //       //     {props.val.in_stock?'Private':'Public'}\r\n        //       // </MenuItem>\r\n            \r\n            \r\n        //       )\r\n        //       })\r\n                \r\n               \r\n              \r\n        // }\r\n              \r\n        //     </Menu>\r\n        //   </>\r\n        // }\r\n        title={props.val.title}\r\n        subheader={props.val.created.toLocaleString()}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={`http://localhost:8000/media/${props.val.thumbnail}`}\r\n        title={props.val.title}\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {props.val.title}\r\n        </Typography>\r\n      </CardContent>\r\n      {\r\n      /* <CardActions disableSpacing>\r\n        <IconButton color={props.val.isliked?'primary':'secondary'} aria-label=\"add to favorites\" onClick={(e) => props.likefun(e,props.val.id)}>\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\" color={props.val.isfavored?'primary':'secondary'} onClick={(e) => props.interestfun(e,props.val.id)}>\r\n          <LocalMallIcon />\r\n        </IconButton>\r\n\r\n      </CardActions> */\r\n      }\r\n\r\n    </Card>\r\n  );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\components\\ModelDialogue\\UserEditModel.js",["549"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\nexport default function UserEditModel(props) {\r\n\r\n    const classes = useStyles();\r\n   \r\n    \r\n\r\n    // const handleChange = (e) => {\r\n    //     setUserupdateform({\r\n    //         ...userupdateform,\r\n    //         [e.target.name]:e.target.value\r\n    //     })\r\n    // };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open form dialog\r\n      </Button> */}\r\n            <Dialog open={props.usereditmodelopen} onClose={props.handleuserClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Edit</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        User Details\r\n          </DialogContentText>\r\n\r\n\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"demo-simple-select-label\">Role</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            name=\"role\"\r\n                            value={props.userupdateform.role}\r\n                            onChange={props.handleChangeeditForm}\r\n                        >\r\n                            <MenuItem value='user'>User</MenuItem>\r\n                            <MenuItem value='admin'>Admin</MenuItem>\r\n                            <MenuItem value='superuser'>SuperAdmin</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"demo-simple-select-label2\">Category</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label2\"\r\n                            id=\"demo-simple-select2\"\r\n                            name=\"category\"\r\n                            value={props.userupdateform.category}\r\n                            onChange={props.handleChangeeditForm}\r\n                        >\r\n                            <MenuItem value='creator'>Creator</MenuItem>\r\n                            <MenuItem value='producer'>Producer</MenuItem>\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={props.handleuserClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={props.handleUpdateSubmit} color=\"primary\">\r\n                        Update\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\api\\userapi.js",[],"E:\\webpack-durvani\\durvani\\static\\static_cdn\\src\\container\\api\\authapi.js",["550"],{"ruleId":"551","replacedBy":"552"},{"ruleId":"553","replacedBy":"554"},{"ruleId":"555","severity":1,"message":"556","line":2,"column":9,"nodeType":"557","messageId":"558","endLine":2,"endColumn":19},{"ruleId":"555","severity":1,"message":"559","line":5,"column":8,"nodeType":"557","messageId":"558","endLine":5,"endColumn":12},{"ruleId":"555","severity":1,"message":"560","line":5,"column":9,"nodeType":"557","messageId":"558","endLine":5,"endColumn":16},{"ruleId":"555","severity":1,"message":"561","line":6,"column":9,"nodeType":"557","messageId":"558","endLine":6,"endColumn":22},{"ruleId":"555","severity":1,"message":"562","line":6,"column":32,"nodeType":"557","messageId":"558","endLine":6,"endColumn":40},{"ruleId":"555","severity":1,"message":"563","line":9,"column":8,"nodeType":"557","messageId":"558","endLine":9,"endColumn":19},{"ruleId":"555","severity":1,"message":"564","line":10,"column":8,"nodeType":"557","messageId":"558","endLine":10,"endColumn":17},{"ruleId":"555","severity":1,"message":"565","line":5,"column":40,"nodeType":"557","messageId":"558","endLine":5,"endColumn":47},{"ruleId":"555","severity":1,"message":"564","line":8,"column":3,"nodeType":"557","messageId":"558","endLine":8,"endColumn":12},{"ruleId":"555","severity":1,"message":"566","line":9,"column":3,"nodeType":"557","messageId":"558","endLine":9,"endColumn":17},{"ruleId":"555","severity":1,"message":"567","line":12,"column":10,"nodeType":"557","messageId":"558","endLine":12,"endColumn":14},{"ruleId":"568","severity":1,"message":"569","line":144,"column":6,"nodeType":"570","endLine":144,"endColumn":8,"suggestions":"571"},{"ruleId":"555","severity":1,"message":"566","line":9,"column":3,"nodeType":"557","messageId":"558","endLine":9,"endColumn":17},{"ruleId":"555","severity":1,"message":"567","line":19,"column":10,"nodeType":"557","messageId":"558","endLine":19,"endColumn":14},{"ruleId":"555","severity":1,"message":"572","line":95,"column":27,"nodeType":"557","messageId":"558","endLine":95,"endColumn":45},{"ruleId":"555","severity":1,"message":"573","line":96,"column":10,"nodeType":"557","messageId":"558","endLine":96,"endColumn":22},{"ruleId":"555","severity":1,"message":"574","line":96,"column":24,"nodeType":"557","messageId":"558","endLine":96,"endColumn":39},{"ruleId":"555","severity":1,"message":"575","line":151,"column":11,"nodeType":"557","messageId":"558","endLine":151,"endColumn":19},{"ruleId":"576","severity":1,"message":"577","line":162,"column":30,"nodeType":"578","messageId":"579","endLine":162,"endColumn":32},{"ruleId":"576","severity":1,"message":"577","line":191,"column":22,"nodeType":"578","messageId":"579","endLine":191,"endColumn":24},{"ruleId":"576","severity":1,"message":"577","line":193,"column":29,"nodeType":"578","messageId":"579","endLine":193,"endColumn":31},{"ruleId":"576","severity":1,"message":"577","line":202,"column":23,"nodeType":"578","messageId":"579","endLine":202,"endColumn":25},{"ruleId":"576","severity":1,"message":"577","line":204,"column":29,"nodeType":"578","messageId":"579","endLine":204,"endColumn":31},{"ruleId":"576","severity":1,"message":"580","line":313,"column":38,"nodeType":"578","messageId":"579","endLine":313,"endColumn":40},{"ruleId":"581","severity":1,"message":"582","line":368,"column":52,"nodeType":"583","endLine":368,"endColumn":64},{"ruleId":"555","severity":1,"message":"584","line":4,"column":15,"nodeType":"557","messageId":"558","endLine":4,"endColumn":19},{"ruleId":"555","severity":1,"message":"585","line":7,"column":5,"nodeType":"557","messageId":"558","endLine":7,"endColumn":15},{"ruleId":"555","severity":1,"message":"586","line":8,"column":5,"nodeType":"557","messageId":"558","endLine":8,"endColumn":24},{"ruleId":"555","severity":1,"message":"587","line":9,"column":5,"nodeType":"557","messageId":"558","endLine":9,"endColumn":22},{"ruleId":"555","severity":1,"message":"588","line":10,"column":5,"nodeType":"557","messageId":"558","endLine":10,"endColumn":23},{"ruleId":"555","severity":1,"message":"589","line":11,"column":5,"nodeType":"557","messageId":"558","endLine":11,"endColumn":22},{"ruleId":"555","severity":1,"message":"590","line":12,"column":5,"nodeType":"557","messageId":"558","endLine":12,"endColumn":16},{"ruleId":"555","severity":1,"message":"591","line":13,"column":5,"nodeType":"557","messageId":"558","endLine":13,"endColumn":16},{"ruleId":"555","severity":1,"message":"592","line":15,"column":5,"nodeType":"557","messageId":"558","endLine":15,"endColumn":32},{"ruleId":"555","severity":1,"message":"593","line":23,"column":5,"nodeType":"557","messageId":"558","endLine":23,"endColumn":22},{"ruleId":"555","severity":1,"message":"594","line":24,"column":5,"nodeType":"557","messageId":"558","endLine":24,"endColumn":32},{"ruleId":"555","severity":1,"message":"595","line":25,"column":5,"nodeType":"557","messageId":"558","endLine":25,"endColumn":32},{"ruleId":"555","severity":1,"message":"596","line":26,"column":5,"nodeType":"557","messageId":"558","endLine":26,"endColumn":34},{"ruleId":"555","severity":1,"message":"597","line":27,"column":5,"nodeType":"557","messageId":"558","endLine":27,"endColumn":34},{"ruleId":"555","severity":1,"message":"598","line":28,"column":5,"nodeType":"557","messageId":"558","endLine":28,"endColumn":29},{"ruleId":"555","severity":1,"message":"599","line":7,"column":8,"nodeType":"557","messageId":"558","endLine":7,"endColumn":17},{"ruleId":"555","severity":1,"message":"600","line":13,"column":10,"nodeType":"557","messageId":"558","endLine":13,"endColumn":14},{"ruleId":"555","severity":1,"message":"601","line":13,"column":21,"nodeType":"557","messageId":"558","endLine":13,"endColumn":30},{"ruleId":"555","severity":1,"message":"602","line":106,"column":16,"nodeType":"557","messageId":"558","endLine":106,"endColumn":21},{"ruleId":"555","severity":1,"message":"603","line":17,"column":8,"nodeType":"557","messageId":"558","endLine":17,"endColumn":30},{"ruleId":"555","severity":1,"message":"604","line":20,"column":8,"nodeType":"557","messageId":"558","endLine":20,"endColumn":14},{"ruleId":"555","severity":1,"message":"605","line":23,"column":8,"nodeType":"557","messageId":"558","endLine":23,"endColumn":23},{"ruleId":"555","severity":1,"message":"606","line":24,"column":8,"nodeType":"557","messageId":"558","endLine":24,"endColumn":14},{"ruleId":"555","severity":1,"message":"607","line":31,"column":8,"nodeType":"557","messageId":"558","endLine":31,"endColumn":18},{"ruleId":"555","severity":1,"message":"608","line":41,"column":40,"nodeType":"557","messageId":"558","endLine":41,"endColumn":45},{"ruleId":"555","severity":1,"message":"609","line":42,"column":10,"nodeType":"557","messageId":"558","endLine":42,"endColumn":20},{"ruleId":"555","severity":1,"message":"610","line":53,"column":10,"nodeType":"557","messageId":"558","endLine":53,"endColumn":20},{"ruleId":"555","severity":1,"message":"611","line":274,"column":9,"nodeType":"557","messageId":"558","endLine":274,"endColumn":15},{"ruleId":"555","severity":1,"message":"599","line":7,"column":8,"nodeType":"557","messageId":"558","endLine":7,"endColumn":17},{"ruleId":"555","severity":1,"message":"612","line":10,"column":8,"nodeType":"557","messageId":"558","endLine":10,"endColumn":19},{"ruleId":"555","severity":1,"message":"601","line":13,"column":10,"nodeType":"557","messageId":"558","endLine":13,"endColumn":19},{"ruleId":"555","severity":1,"message":"602","line":20,"column":16,"nodeType":"557","messageId":"558","endLine":20,"endColumn":21},{"ruleId":"555","severity":1,"message":"613","line":20,"column":23,"nodeType":"557","messageId":"558","endLine":20,"endColumn":31},{"ruleId":"555","severity":1,"message":"614","line":5,"column":23,"nodeType":"557","messageId":"558","endLine":5,"endColumn":27},{"ruleId":"555","severity":1,"message":"615","line":11,"column":10,"nodeType":"557","messageId":"558","endLine":11,"endColumn":15},{"ruleId":"555","severity":1,"message":"616","line":12,"column":10,"nodeType":"557","messageId":"558","endLine":12,"endColumn":18},{"ruleId":"555","severity":1,"message":"617","line":12,"column":19,"nodeType":"557","messageId":"558","endLine":12,"endColumn":22},{"ruleId":"555","severity":1,"message":"618","line":50,"column":7,"nodeType":"557","messageId":"558","endLine":50,"endColumn":11},{"ruleId":"551","replacedBy":"619"},{"ruleId":"553","replacedBy":"620"},{"ruleId":"555","severity":1,"message":"621","line":4,"column":8,"nodeType":"557","messageId":"558","endLine":4,"endColumn":24},{"ruleId":"555","severity":1,"message":"604","line":5,"column":8,"nodeType":"557","messageId":"558","endLine":5,"endColumn":14},{"ruleId":"555","severity":1,"message":"566","line":9,"column":3,"nodeType":"557","messageId":"558","endLine":9,"endColumn":17},{"ruleId":"555","severity":1,"message":"567","line":12,"column":10,"nodeType":"557","messageId":"558","endLine":12,"endColumn":14},{"ruleId":"555","severity":1,"message":"599","line":4,"column":8,"nodeType":"557","messageId":"558","endLine":4,"endColumn":17},{"ruleId":"555","severity":1,"message":"622","line":2,"column":38,"nodeType":"557","messageId":"558","endLine":2,"endColumn":49},{"ruleId":"555","severity":1,"message":"623","line":15,"column":11,"nodeType":"557","messageId":"558","endLine":15,"endColumn":19},{"ruleId":"576","severity":1,"message":"577","line":44,"column":20,"nodeType":"578","messageId":"579","endLine":44,"endColumn":22},{"ruleId":"576","severity":1,"message":"577","line":47,"column":49,"nodeType":"578","messageId":"579","endLine":47,"endColumn":51},{"ruleId":"576","severity":1,"message":"577","line":50,"column":27,"nodeType":"578","messageId":"579","endLine":50,"endColumn":29},{"ruleId":"576","severity":1,"message":"577","line":53,"column":49,"nodeType":"578","messageId":"579","endLine":53,"endColumn":51},{"ruleId":"576","severity":1,"message":"577","line":101,"column":49,"nodeType":"578","messageId":"579","endLine":101,"endColumn":51},{"ruleId":"576","severity":1,"message":"577","line":116,"column":49,"nodeType":"578","messageId":"579","endLine":116,"endColumn":51},{"ruleId":"555","severity":1,"message":"624","line":1,"column":29,"nodeType":"557","messageId":"558","endLine":1,"endColumn":40},{"ruleId":"555","severity":1,"message":"621","line":1,"column":42,"nodeType":"557","messageId":"558","endLine":1,"endColumn":58},{"ruleId":"555","severity":1,"message":"608","line":1,"column":73,"nodeType":"557","messageId":"558","endLine":1,"endColumn":78},{"ruleId":"555","severity":1,"message":"625","line":3,"column":8,"nodeType":"557","messageId":"558","endLine":3,"endColumn":22},{"ruleId":"555","severity":1,"message":"626","line":4,"column":8,"nodeType":"557","messageId":"558","endLine":4,"endColumn":24},{"ruleId":"555","severity":1,"message":"627","line":6,"column":8,"nodeType":"557","messageId":"558","endLine":6,"endColumn":25},{"ruleId":"555","severity":1,"message":"628","line":7,"column":8,"nodeType":"557","messageId":"558","endLine":7,"endColumn":18},{"ruleId":"555","severity":1,"message":"629","line":13,"column":8,"nodeType":"557","messageId":"558","endLine":13,"endColumn":24},{"ruleId":"555","severity":1,"message":"630","line":72,"column":24,"nodeType":"557","messageId":"558","endLine":72,"endColumn":37},{"ruleId":"555","severity":1,"message":"631","line":172,"column":11,"nodeType":"557","messageId":"558","endLine":172,"endColumn":27},{"ruleId":"576","severity":1,"message":"577","line":214,"column":25,"nodeType":"578","messageId":"579","endLine":214,"endColumn":27},{"ruleId":"555","severity":1,"message":"621","line":19,"column":8,"nodeType":"557","messageId":"558","endLine":19,"endColumn":24},{"ruleId":"555","severity":1,"message":"604","line":20,"column":8,"nodeType":"557","messageId":"558","endLine":20,"endColumn":14},{"ruleId":"555","severity":1,"message":"632","line":227,"column":17,"nodeType":"557","messageId":"558","endLine":227,"endColumn":25},{"ruleId":"555","severity":1,"message":"633","line":5,"column":8,"nodeType":"557","messageId":"558","endLine":5,"endColumn":20},{"ruleId":"555","severity":1,"message":"634","line":6,"column":8,"nodeType":"557","messageId":"558","endLine":6,"endColumn":16},{"ruleId":"555","severity":1,"message":"635","line":7,"column":8,"nodeType":"557","messageId":"558","endLine":7,"endColumn":12},{"ruleId":"555","severity":1,"message":"636","line":8,"column":8,"nodeType":"557","messageId":"558","endLine":8,"endColumn":15},{"ruleId":"555","severity":1,"message":"637","line":36,"column":18,"nodeType":"557","messageId":"558","endLine":36,"endColumn":27},{"ruleId":"551","replacedBy":"638"},{"ruleId":"553","replacedBy":"639"},{"ruleId":"555","severity":1,"message":"640","line":4,"column":3,"nodeType":"557","messageId":"558","endLine":4,"endColumn":16},{"ruleId":"555","severity":1,"message":"641","line":5,"column":3,"nodeType":"557","messageId":"558","endLine":5,"endColumn":13},{"ruleId":"555","severity":1,"message":"642","line":7,"column":3,"nodeType":"557","messageId":"558","endLine":7,"endColumn":17},{"ruleId":"555","severity":1,"message":"643","line":9,"column":8,"nodeType":"557","messageId":"558","endLine":9,"endColumn":17},{"ruleId":"555","severity":1,"message":"644","line":10,"column":8,"nodeType":"557","messageId":"558","endLine":10,"endColumn":18},{"ruleId":"555","severity":1,"message":"624","line":12,"column":8,"nodeType":"557","messageId":"558","endLine":12,"endColumn":19},{"ruleId":"555","severity":1,"message":"645","line":13,"column":10,"nodeType":"557","messageId":"558","endLine":13,"endColumn":15},{"ruleId":"555","severity":1,"message":"646","line":14,"column":8,"nodeType":"557","messageId":"558","endLine":14,"endColumn":12},{"ruleId":"555","severity":1,"message":"647","line":15,"column":8,"nodeType":"557","messageId":"558","endLine":15,"endColumn":19},{"ruleId":"555","severity":1,"message":"648","line":17,"column":24,"nodeType":"557","messageId":"558","endLine":17,"endColumn":29},{"ruleId":"555","severity":1,"message":"649","line":18,"column":8,"nodeType":"557","messageId":"558","endLine":18,"endColumn":19},{"ruleId":"555","severity":1,"message":"650","line":8,"column":10,"nodeType":"557","messageId":"558","endLine":8,"endColumn":14},{"ruleId":"555","severity":1,"message":"564","line":3,"column":8,"nodeType":"557","messageId":"558","endLine":3,"endColumn":17},{"ruleId":"555","severity":1,"message":"651","line":10,"column":3,"nodeType":"557","messageId":"558","endLine":10,"endColumn":21},{"ruleId":"555","severity":1,"message":"652","line":12,"column":3,"nodeType":"557","messageId":"558","endLine":12,"endColumn":13},{"ruleId":"555","severity":1,"message":"567","line":5,"column":10,"nodeType":"557","messageId":"558","endLine":5,"endColumn":14},{"ruleId":"576","severity":1,"message":"577","line":116,"column":30,"nodeType":"578","messageId":"579","endLine":116,"endColumn":32},{"ruleId":"568","severity":1,"message":"653","line":159,"column":10,"nodeType":"570","endLine":159,"endColumn":12,"suggestions":"654"},{"ruleId":"568","severity":1,"message":"655","line":166,"column":10,"nodeType":"570","endLine":166,"endColumn":12,"suggestions":"656"},{"ruleId":"576","severity":1,"message":"577","line":220,"column":18,"nodeType":"578","messageId":"579","endLine":220,"endColumn":20},{"ruleId":"555","severity":1,"message":"657","line":32,"column":10,"nodeType":"557","messageId":"558","endLine":32,"endColumn":20},{"ruleId":"555","severity":1,"message":"632","line":280,"column":17,"nodeType":"557","messageId":"558","endLine":280,"endColumn":25},{"ruleId":"576","severity":1,"message":"577","line":385,"column":24,"nodeType":"578","messageId":"579","endLine":385,"endColumn":26},{"ruleId":"576","severity":1,"message":"577","line":387,"column":34,"nodeType":"578","messageId":"579","endLine":387,"endColumn":36},{"ruleId":"555","severity":1,"message":"559","line":3,"column":8,"nodeType":"557","messageId":"558","endLine":3,"endColumn":12},{"ruleId":"555","severity":1,"message":"658","line":9,"column":8,"nodeType":"557","messageId":"558","endLine":9,"endColumn":16},{"ruleId":"555","severity":1,"message":"659","line":15,"column":8,"nodeType":"557","messageId":"558","endLine":15,"endColumn":17},{"ruleId":"555","severity":1,"message":"660","line":16,"column":8,"nodeType":"557","messageId":"558","endLine":16,"endColumn":22},{"ruleId":"555","severity":1,"message":"661","line":17,"column":8,"nodeType":"557","messageId":"558","endLine":17,"endColumn":20},{"ruleId":"555","severity":1,"message":"662","line":19,"column":10,"nodeType":"557","messageId":"558","endLine":19,"endColumn":14},{"ruleId":"555","severity":1,"message":"663","line":19,"column":16,"nodeType":"557","messageId":"558","endLine":19,"endColumn":24},{"ruleId":"555","severity":1,"message":"664","line":51,"column":9,"nodeType":"557","messageId":"558","endLine":51,"endColumn":16},{"ruleId":"555","severity":1,"message":"665","line":60,"column":9,"nodeType":"557","messageId":"558","endLine":60,"endColumn":13},{"ruleId":"555","severity":1,"message":"666","line":62,"column":9,"nodeType":"557","messageId":"558","endLine":62,"endColumn":20},{"ruleId":"555","severity":1,"message":"667","line":66,"column":9,"nodeType":"557","messageId":"558","endLine":66,"endColumn":20},{"ruleId":"555","severity":1,"message":"668","line":70,"column":9,"nodeType":"557","messageId":"558","endLine":70,"endColumn":23},{"ruleId":"555","severity":1,"message":"669","line":4,"column":32,"nodeType":"557","messageId":"558","endLine":4,"endColumn":41},{"ruleId":"555","severity":1,"message":"670","line":10,"column":3,"nodeType":"557","messageId":"558","endLine":10,"endColumn":17},{"ruleId":"555","severity":1,"message":"671","line":11,"column":3,"nodeType":"557","messageId":"558","endLine":11,"endColumn":25},{"ruleId":"555","severity":1,"message":"672","line":12,"column":3,"nodeType":"557","messageId":"558","endLine":12,"endColumn":22},{"ruleId":"555","severity":1,"message":"673","line":21,"column":3,"nodeType":"557","messageId":"558","endLine":21,"endColumn":21},{"ruleId":"555","severity":1,"message":"674","line":22,"column":3,"nodeType":"557","messageId":"558","endLine":22,"endColumn":18},{"ruleId":"555","severity":1,"message":"675","line":164,"column":7,"nodeType":"557","messageId":"558","endLine":164,"endColumn":17},{"ruleId":"555","severity":1,"message":"676","line":2,"column":5,"nodeType":"557","messageId":"558","endLine":2,"endColumn":17},{"ruleId":"555","severity":1,"message":"670","line":5,"column":5,"nodeType":"557","messageId":"558","endLine":5,"endColumn":19},{"ruleId":"555","severity":1,"message":"671","line":6,"column":5,"nodeType":"557","messageId":"558","endLine":6,"endColumn":27},{"ruleId":"555","severity":1,"message":"672","line":7,"column":5,"nodeType":"557","messageId":"558","endLine":7,"endColumn":24},{"ruleId":"555","severity":1,"message":"673","line":13,"column":5,"nodeType":"557","messageId":"558","endLine":13,"endColumn":23},{"ruleId":"555","severity":1,"message":"677","line":4,"column":8,"nodeType":"557","messageId":"558","endLine":4,"endColumn":18},{"ruleId":"555","severity":1,"message":"678","line":5,"column":8,"nodeType":"557","messageId":"558","endLine":5,"endColumn":19},{"ruleId":"555","severity":1,"message":"679","line":2,"column":8,"nodeType":"557","messageId":"558","endLine":2,"endColumn":13},{"ruleId":"555","severity":1,"message":"680","line":8,"column":21,"nodeType":"557","messageId":"558","endLine":8,"endColumn":31},{"ruleId":"555","severity":1,"message":"681","line":9,"column":19,"nodeType":"557","messageId":"558","endLine":9,"endColumn":27},{"ruleId":"555","severity":1,"message":"682","line":11,"column":21,"nodeType":"557","messageId":"558","endLine":11,"endColumn":31},{"ruleId":"568","severity":1,"message":"683","line":20,"column":9,"nodeType":"570","endLine":20,"endColumn":21,"suggestions":"684"},{"ruleId":"568","severity":1,"message":"685","line":35,"column":8,"nodeType":"570","endLine":35,"endColumn":29,"suggestions":"686"},{"ruleId":"555","severity":1,"message":"622","line":2,"column":35,"nodeType":"557","messageId":"558","endLine":2,"endColumn":46},{"ruleId":"555","severity":1,"message":"623","line":15,"column":11,"nodeType":"557","messageId":"558","endLine":15,"endColumn":19},{"ruleId":"555","severity":1,"message":"687","line":17,"column":24,"nodeType":"557","messageId":"558","endLine":17,"endColumn":37},{"ruleId":"576","severity":1,"message":"577","line":45,"column":19,"nodeType":"578","messageId":"579","endLine":45,"endColumn":21},{"ruleId":"576","severity":1,"message":"577","line":48,"column":45,"nodeType":"578","messageId":"579","endLine":48,"endColumn":47},{"ruleId":"576","severity":1,"message":"577","line":51,"column":26,"nodeType":"578","messageId":"579","endLine":51,"endColumn":28},{"ruleId":"576","severity":1,"message":"577","line":54,"column":45,"nodeType":"578","messageId":"579","endLine":54,"endColumn":47},{"ruleId":"576","severity":1,"message":"577","line":101,"column":49,"nodeType":"578","messageId":"579","endLine":101,"endColumn":51},{"ruleId":"576","severity":1,"message":"577","line":116,"column":49,"nodeType":"578","messageId":"579","endLine":116,"endColumn":51},{"ruleId":"555","severity":1,"message":"640","line":1,"column":80,"nodeType":"557","messageId":"558","endLine":1,"endColumn":93},{"ruleId":"551","replacedBy":"688"},{"ruleId":"553","replacedBy":"689"},{"ruleId":"551","replacedBy":"690"},{"ruleId":"553","replacedBy":"691"},{"ruleId":"555","severity":1,"message":"692","line":1,"column":66,"nodeType":"557","messageId":"558","endLine":1,"endColumn":76},{"ruleId":"576","severity":1,"message":"577","line":37,"column":29,"nodeType":"578","messageId":"579","endLine":37,"endColumn":31},{"ruleId":"555","severity":1,"message":"621","line":19,"column":8,"nodeType":"557","messageId":"558","endLine":19,"endColumn":24},{"ruleId":"555","severity":1,"message":"604","line":20,"column":8,"nodeType":"557","messageId":"558","endLine":20,"endColumn":14},{"ruleId":"555","severity":1,"message":"693","line":23,"column":8,"nodeType":"557","messageId":"558","endLine":23,"endColumn":13},{"ruleId":"555","severity":1,"message":"606","line":26,"column":10,"nodeType":"557","messageId":"558","endLine":26,"endColumn":16},{"ruleId":"555","severity":1,"message":"657","line":28,"column":10,"nodeType":"557","messageId":"558","endLine":28,"endColumn":20},{"ruleId":"555","severity":1,"message":"632","line":269,"column":17,"nodeType":"557","messageId":"558","endLine":269,"endColumn":25},{"ruleId":"555","severity":1,"message":"694","line":19,"column":7,"nodeType":"557","messageId":"558","endLine":19,"endColumn":13},{"ruleId":"555","severity":1,"message":"675","line":68,"column":13,"nodeType":"557","messageId":"558","endLine":68,"endColumn":23},{"ruleId":"555","severity":1,"message":"675","line":89,"column":13,"nodeType":"557","messageId":"558","endLine":89,"endColumn":23},{"ruleId":"555","severity":1,"message":"675","line":110,"column":13,"nodeType":"557","messageId":"558","endLine":110,"endColumn":23},{"ruleId":"555","severity":1,"message":"687","line":15,"column":24,"nodeType":"557","messageId":"558","endLine":15,"endColumn":37},{"ruleId":"555","severity":1,"message":"687","line":15,"column":24,"nodeType":"557","messageId":"558","endLine":15,"endColumn":37},{"ruleId":"555","severity":1,"message":"559","line":3,"column":8,"nodeType":"557","messageId":"558","endLine":3,"endColumn":12},{"ruleId":"555","severity":1,"message":"658","line":9,"column":8,"nodeType":"557","messageId":"558","endLine":9,"endColumn":16},{"ruleId":"555","severity":1,"message":"659","line":15,"column":8,"nodeType":"557","messageId":"558","endLine":15,"endColumn":17},{"ruleId":"555","severity":1,"message":"660","line":16,"column":8,"nodeType":"557","messageId":"558","endLine":16,"endColumn":22},{"ruleId":"576","severity":1,"message":"577","line":115,"column":22,"nodeType":"578","messageId":"579","endLine":115,"endColumn":24},{"ruleId":"555","severity":1,"message":"559","line":3,"column":8,"nodeType":"557","messageId":"558","endLine":3,"endColumn":12},{"ruleId":"555","severity":1,"message":"695","line":8,"column":8,"nodeType":"557","messageId":"558","endLine":8,"endColumn":19},{"ruleId":"555","severity":1,"message":"658","line":9,"column":8,"nodeType":"557","messageId":"558","endLine":9,"endColumn":16},{"ruleId":"555","severity":1,"message":"677","line":11,"column":8,"nodeType":"557","messageId":"558","endLine":11,"endColumn":18},{"ruleId":"555","severity":1,"message":"696","line":14,"column":8,"nodeType":"557","messageId":"558","endLine":14,"endColumn":20},{"ruleId":"555","severity":1,"message":"659","line":15,"column":8,"nodeType":"557","messageId":"558","endLine":15,"endColumn":17},{"ruleId":"555","severity":1,"message":"660","line":16,"column":8,"nodeType":"557","messageId":"558","endLine":16,"endColumn":22},{"ruleId":"555","severity":1,"message":"661","line":17,"column":8,"nodeType":"557","messageId":"558","endLine":17,"endColumn":20},{"ruleId":"555","severity":1,"message":"697","line":18,"column":8,"nodeType":"557","messageId":"558","endLine":18,"endColumn":21},{"ruleId":"555","severity":1,"message":"662","line":19,"column":10,"nodeType":"557","messageId":"558","endLine":19,"endColumn":14},{"ruleId":"555","severity":1,"message":"663","line":19,"column":16,"nodeType":"557","messageId":"558","endLine":19,"endColumn":24},{"ruleId":"555","severity":1,"message":"664","line":51,"column":9,"nodeType":"557","messageId":"558","endLine":51,"endColumn":16},{"ruleId":"555","severity":1,"message":"665","line":60,"column":9,"nodeType":"557","messageId":"558","endLine":60,"endColumn":13},{"ruleId":"555","severity":1,"message":"666","line":62,"column":9,"nodeType":"557","messageId":"558","endLine":62,"endColumn":20},{"ruleId":"555","severity":1,"message":"667","line":66,"column":9,"nodeType":"557","messageId":"558","endLine":66,"endColumn":20},{"ruleId":"555","severity":1,"message":"668","line":70,"column":9,"nodeType":"557","messageId":"558","endLine":70,"endColumn":23},{"ruleId":"555","severity":1,"message":"559","line":3,"column":8,"nodeType":"557","messageId":"558","endLine":3,"endColumn":12},{"ruleId":"555","severity":1,"message":"695","line":8,"column":8,"nodeType":"557","messageId":"558","endLine":8,"endColumn":19},{"ruleId":"555","severity":1,"message":"658","line":9,"column":8,"nodeType":"557","messageId":"558","endLine":9,"endColumn":16},{"ruleId":"555","severity":1,"message":"677","line":11,"column":8,"nodeType":"557","messageId":"558","endLine":11,"endColumn":18},{"ruleId":"555","severity":1,"message":"696","line":14,"column":8,"nodeType":"557","messageId":"558","endLine":14,"endColumn":20},{"ruleId":"555","severity":1,"message":"659","line":15,"column":8,"nodeType":"557","messageId":"558","endLine":15,"endColumn":17},{"ruleId":"555","severity":1,"message":"660","line":16,"column":8,"nodeType":"557","messageId":"558","endLine":16,"endColumn":22},{"ruleId":"555","severity":1,"message":"661","line":17,"column":8,"nodeType":"557","messageId":"558","endLine":17,"endColumn":20},{"ruleId":"555","severity":1,"message":"697","line":18,"column":8,"nodeType":"557","messageId":"558","endLine":18,"endColumn":21},{"ruleId":"555","severity":1,"message":"662","line":19,"column":10,"nodeType":"557","messageId":"558","endLine":19,"endColumn":14},{"ruleId":"555","severity":1,"message":"663","line":19,"column":16,"nodeType":"557","messageId":"558","endLine":19,"endColumn":24},{"ruleId":"555","severity":1,"message":"664","line":51,"column":9,"nodeType":"557","messageId":"558","endLine":51,"endColumn":16},{"ruleId":"555","severity":1,"message":"665","line":60,"column":9,"nodeType":"557","messageId":"558","endLine":60,"endColumn":13},{"ruleId":"555","severity":1,"message":"666","line":62,"column":9,"nodeType":"557","messageId":"558","endLine":62,"endColumn":20},{"ruleId":"555","severity":1,"message":"667","line":66,"column":9,"nodeType":"557","messageId":"558","endLine":66,"endColumn":20},{"ruleId":"555","severity":1,"message":"668","line":70,"column":9,"nodeType":"557","messageId":"558","endLine":70,"endColumn":23},{"ruleId":"555","severity":1,"message":"564","line":3,"column":8,"nodeType":"557","messageId":"558","endLine":3,"endColumn":17},{"ruleId":"555","severity":1,"message":"698","line":56,"column":47,"nodeType":"557","messageId":"558","endLine":56,"endColumn":53},"no-native-reassign",["699"],"no-negated-in-lhs",["700"],"no-unused-vars","'deepPurple' is defined but never used.","Identifier","unusedVar","'clsx' is defined but never used.","'connect' is defined but never used.","'BrowserRouter' is defined but never used.","'Redirect' is defined but never used.","'BrandButton' is defined but never used.","'TextField' is defined but never used.","'compose' is defined but never used.","'LinearProgress' is defined but never used.","'fade' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["701"],"'setIsvalidPassword' is assigned a value but never used.","'isvalidPhone' is assigned a value but never used.","'setIsvalidPhone' is assigned a value but never used.","'isVerify' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'call' is defined but never used.","'LOGIN_USER' is defined but never used.","'LOGIN_FACEBOOK_USER' is defined but never used.","'LOGIN_GOOGLE_USER' is defined but never used.","'LOGIN_TWITTER_USER' is defined but never used.","'LOGIN_GITHUB_USER' is defined but never used.","'LOGOUT_USER' is defined but never used.","'SIGNUP_USER' is defined but never used.","'CREATE_TWO_STEP_TOKEN_START' is defined but never used.","'signinUserFailure' is defined but never used.","'signUpUserInFirebaseSuccess' is defined but never used.","'signUpUserInFirebaseFailure' is defined but never used.","'logoutUserFromFirebaseSuccess' is defined but never used.","'logoutUserFromFirebaseFailure' is defined but never used.","'createTwoStepTokenFinish' is defined but never used.","'PropTypes' is defined but never used.","'Grid' is defined but never used.","'Container' is defined but never used.","'match' is assigned a value but never used.","'FullscreenOutlinedIcon' is defined but never used.","'Switch' is defined but never used.","'SwipeableDrawer' is defined but never used.","'Button' is defined but never used.","'DraftsIcon' is defined but never used.","'Paper' is defined but never used.","'FullScreen' is defined but never used.","'Scrollbars' is defined but never used.","'handle' is assigned a value but never used.","'AdminHeader' is defined but never used.","'location' is assigned a value but never used.","'Chip' is defined but never used.","'amber' is defined but never used.","'Doughnut' is defined but never used.","'Bar' is defined but never used.","'data' is assigned a value but never used.",["699"],["700"],"'FormControlLabel' is defined but never used.","'useCallback' is defined but never used.","'response' is assigned a value but never used.","'FormControl' is defined but never used.","'CustomizedDate' is defined but never used.","'CustomizedInputs' is defined but never used.","'SelectFieldCustom' is defined but never used.","'FileUpload' is defined but never used.","'Fileuploadbutton' is defined but never used.","'setAuthortype' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.","'setDense' is assigned a value but never used.","'ListItemText' is defined but never used.","'ListItem' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'setFields' is assigned a value but never used.",["699"],["700"],"'ThemeProvider' is defined but never used.","'withStyles' is defined but never used.","'createMuiTheme' is defined but never used.","'InputBase' is defined but never used.","'InputLabel' is defined but never used.","'green' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Field' is defined but never used.","'FormikField' is defined but never used.","'grey' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'DatePicker' is defined but never used.","React Hook React.useEffect has missing dependencies: 'getallgroups' and 'getalluserss'. Either include them or remove the dependency array.",["702"],"React Hook React.useEffect has a missing dependency: 'getproductlist'. Either include it or remove the dependency array.",["703"],"'createData' is defined but never used.","'Collapse' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'options' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleIsactive' is assigned a value but never used.","'takeEvery' is defined but never used.","'UPDATE_PRODUCT' is defined but never used.","'UPDATE_PRODUCT_SUCCESS' is defined but never used.","'UPDATE_PRODUCT_FAIL' is defined but never used.","'saveProductSuccess' is defined but never used.","'saveProductFail' is defined but never used.","'statuscode' is assigned a value but never used.","'SAVE_PRODUCT' is defined but never used.","'IconButton' is defined but never used.","'PhotoCamera' is defined but never used.","'axios' is defined but never used.","'setLoading' is assigned a value but never used.","'setError' is assigned a value but never used.","'setHasMore' is assigned a value but never used.","React Hook React.useCallback has missing dependencies: 'dispatch' and 'response.obs'. Either include them or remove the dependency array.",["704"],"React Hook useEffect has a missing dependency: 'dispfun'. Either include it or remove the dependency array.",["705"],"'setPageNumber' is assigned a value but never used.",["699"],["700"],["699"],["700"],"'Typography' is defined but never used.","'faker' is defined but never used.","'config' is assigned a value but never used.","'CardActions' is defined but never used.","'FavoriteIcon' is defined but never used.","'LocalMallIcon' is defined but never used.","'cancel' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"706","fix":"707"},{"desc":"708","fix":"709"},{"desc":"710","fix":"711"},{"desc":"712","fix":"713"},{"desc":"714","fix":"715"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"716","text":"717"},"Update the dependencies array to be: [getallgroups, getalluserss]",{"range":"718","text":"719"},"Update the dependencies array to be: [getproductlist]",{"range":"720","text":"721"},"Update the dependencies array to be: [dispatch, pageNumber, response.obs]",{"range":"722","text":"723"},"Update the dependencies array to be: [pageNumber, dispatch, dispfun]",{"range":"724","text":"725"},[3638,3640],"[dispatch, props.history]",[4200,4202],"[getallgroups, getalluserss]",[4318,4320],"[getproductlist]",[731,743],"[dispatch, pageNumber, response.obs]",[988,1009],"[pageNumber, dispatch, dispfun]"]